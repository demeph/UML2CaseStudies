-- $Id$
-- Copies particular Stereotype meta-classes in UML2 models
module UML2ProfileCopy; --extends UML2Copy

create OUT : UML2 from IN : UML2;

-- ======================================================================
-- Stereotype copying rules begin
-- ======================================================================
-- Generated by: EModelCopyGenerator.atl 5428 2006-09-01 19:23:26Z dwagelaa

rule Observer {
    from s : UML2!Observer::Observer (thisModule.inElements->includes(s))
    to t : UML2!Observer::Observer mapsTo s (
        base_Classifier <- s.base_Classifier->debug('Observer'))
}

rule subscribe {
    from s : UML2!Observer::subscribe (thisModule.inElements->includes(s))
    to t : UML2!Observer::subscribe mapsTo s (
        base_Association <- s.base_Association)
}

rule Observable {
    from s : UML2!Observer::Observable (thisModule.inElements->includes(s))
    to t : UML2!Observer::Observable mapsTo s (
        base_Classifier <- s.base_Classifier)
}

rule accessor {
    from s : UML2!Accessors::accessor (thisModule.inElements->includes(s))
    to t : UML2!Accessors::accessor mapsTo s (
        base_Dependency <- s.base_Dependency)
}

rule Applet {
    from s : UML2!Applet::Applet (thisModule.inElements->includes(s))
    to t : UML2!Applet::Applet mapsTo s (
        appletInfo <- s.appletInfo,
        parameterInfo <- s.parameterInfo,
        base_Classifier <- s.base_Classifier)
}

rule final {
    from s : UML2!Final::final (thisModule.inElements->includes(s))
    to t : UML2!Final::final mapsTo s (
        base_Parameter <- s.base_Parameter)
}

rule initializer {
    from s : UML2!Singleton::initializer (thisModule.inElements->includes(s))
    to t : UML2!Singleton::initializer mapsTo s (
        base_Operation <- s.base_Operation)
}

rule Singleton {
    from s : UML2!Singleton::Singleton (thisModule.inElements->includes(s))
    to t : UML2!Singleton::Singleton mapsTo s (
        base_Classifier <- s.base_Classifier)
}

rule Create {
    from s : UML2!Standard::Create (thisModule.inElements->includes(s))
    to t : UML2!Standard::Create mapsTo s (
        base_BehavioralFeature <- s.base_BehavioralFeature,
		base_Usage <- s.base_Usage)
}

-- ======================================================================
-- Stereotype copying rules end
-- ======================================================================
