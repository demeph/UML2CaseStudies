-- @atlcompiler atl2006
-- $Id$
-- Copies particular Stereotype meta-classes in UML2 models
module UML2ProfileCopy; --extends UML2Copy

create OUT : UML2 from IN : UML2;

uses UML2Copy;

-- ======================================================================
-- Stereotype copying rules begin
-- ======================================================================
-- Generated by: EModelCopyGenerator.atl 5428 2006-09-01 19:23:26Z dwagelaa

rule "Observer::Observer" {
    from s : UML2!"Observer::Observer" (thisModule.inElements->includes(s))
    to t : UML2!"Observer::Observer" mapsTo s (
        base_Classifier <- s.base_Classifier->debug('Observer'))
}

rule "Observer::subscribe" {
    from s : UML2!"Observer::subscribe" (thisModule.inElements->includes(s))
    to t : UML2!"Observer::subscribe" mapsTo s (
        base_Association <- s.base_Association)
}

rule "Observer::Observable" {
    from s : UML2!"Observer::Observable" (thisModule.inElements->includes(s))
    to t : UML2!"Observer::Observable" mapsTo s (
        base_Classifier <- s.base_Classifier)
}

rule "Accessors::accessor" {
    from s : UML2!"Accessors::accessor" (thisModule.inElements->includes(s))
    to t : UML2!"Accessors::accessor" mapsTo s (
        base_Dependency <- s.base_Dependency)
}

rule "Applet::Applet" {
    from s : UML2!"Applet::Applet" (thisModule.inElements->includes(s))
    to t : UML2!"Applet::Applet" mapsTo s (
        appletInfo <- s.appletInfo,
        parameterInfo <- s.parameterInfo,
        base_Classifier <- s.base_Classifier)
}

rule "Final::final" {
    from s : UML2!"Final::final" (thisModule.inElements->includes(s))
    to t : UML2!"Final::final" mapsTo s (
        base_Parameter <- s.base_Parameter)
}

rule "Singleton::initializer" {
    from s : UML2!"Singleton::initializer" (thisModule.inElements->includes(s))
    to t : UML2!"Singleton::initializer" mapsTo s (
        base_Operation <- s.base_Operation)
}

rule "Singleton::Singleton" {
    from s : UML2!"Singleton::Singleton" (thisModule.inElements->includes(s))
    to t : UML2!"Singleton::Singleton" mapsTo s (
        base_Classifier <- s.base_Classifier)
}

rule "Standard::Create" {
    from s : UML2!"Standard::Create" (thisModule.inElements->includes(s))
    to t : UML2!"Standard::Create" mapsTo s (
        base_BehavioralFeature <- s.base_BehavioralFeature,
		base_Usage <- s.base_Usage)
}

rule "AbstractFactory::AbstractFactory" {
    from s : UML2!"AbstractFactory::AbstractFactory" (thisModule.inElements->includes(s))
    to t : UML2!"AbstractFactory::AbstractFactory" mapsTo s (
        base_Classifier <- s.base_Classifier)
}

rule "AbstractFactory::ConcreteFactory" {
    from s : UML2!"AbstractFactory::ConcreteFactory" (thisModule.inElements->includes(s))
    to t : UML2!"AbstractFactory::ConcreteFactory" mapsTo s (
        base_Class <- s.base_Class)
}

rule "AbstractFactory::product" {
    from s : UML2!"AbstractFactory::product" (thisModule.inElements->includes(s))
    to t : UML2!"AbstractFactory::product" mapsTo s (
        base_Dependency <- s.base_Dependency)
}

rule "Async::asynchronous" {
    from s : UML2!"Async::asynchronous" (thisModule.inElements->includes(s))
    to t : UML2!"Async::asynchronous" mapsTo s (
        base_Operation <- s.base_Operation)
}

-- ======================================================================
-- Stereotype copying rules end
-- ======================================================================
