<?xml version="1.0" encoding="UTF-8"?>
<project name="instantmessenger/packaging/maemo" default="all">
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: ar          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="ar">
        <attribute name="basedir" default=""/>
        <attribute name="destfile" default="default"/>
    	<element name="args" implicit="true"/>
        <sequential>
            <exec executable="ar" dir="@{basedir}">
            	<arg value="r"/>
            	<arg value="@{destfile}"/>
            	<args/>
            </exec>
        </sequential>
    </macrodef>

	<target name="clean">
        <delete dir="build"/>
    </target>

	<target name="prepare" depends="clean">
	    <mkdir dir="build/data/usr/share/java"/>
		<mkdir dir="build/data/usr/share/applications/hildon"/>
		<echo file="build/data/usr/share/applications/hildon/${deb.name}.desktop">[Desktop Entry]
Name=${deb.title}
Comment=${deb.description}
Exec=${deb.name}
Icon=${deb.name}
X-Window-Icon=${deb.name}
X-Window-Icon-Dimmed=${deb.name}
Type=Application
StartupWMClass=${deb.name}
X-HildonDesk-ShowInToolbar=true
X-Osso-Type=application/x-executable
</echo>
		<mkdir dir="build/data/usr/bin"/>
		<echo file="build/data/usr/bin/${deb.name}">#!/bin/sh
# This file is autogenerated by the maemo packaging build.xml Ant script.

# You can provide additional VM arguments by setting the VMARGS environment variable.
BOOTCLASSPATH_ARG=""

CLASSPATH_ARG="-cp /usr/share/java/swt-cairo.jar:/usr/share/java/swt.jar:/usr/share/java/swt-pi.jar:/usr/share/java/swt-gtk.jar:/usr/share/java/${deb.name}.jar"

MAIN_CLASS=${main.class}

# Path of the shared libraries (e.g. for SWT)
LIBRARY_PATH_ARG="-Djava.library.path=/usr/lib/jni"

# Path to BC-ABI compiled classes. Has no effect on runtimes other than GCJ.
DB_PATH_ARG=""

# Additional system properties which are special for this application:
SYSTEM_PROPERTIES=""

# Allows overriding the VM by setting the JAVA environment variable.
if [ x${JAVA} = x ];
then
	JAVA=java
fi

exec ${JAVA}  ${VMARGS} ${BOOTCLASSPATH_ARG} ${CLASSPATH_ARG} ${LIBRARY_PATH_ARG} ${DB_PATH_ARG} ${SYSTEM_PROPERTIES} ${MAIN_CLASS} ${@}
</echo>
		<mkdir dir="build/data/usr/share/pixmaps"/>
		<copy file="${ant.file.instantmessenger/packaging/maemo}.resources/pics/instantmessenger.png" tofile="build/data/usr/share/pixmaps/${deb.name}.png"/>
		<mkdir dir="build/data/usr/share/icons/hicolor/64x64/apps"/>
		<copy file="${ant.file.instantmessenger/packaging/maemo}.resources/pics/instantmessenger.png" tofile="build/data/usr/share/icons/hicolor/64x64/apps/${deb.name}.png"/>
	</target>

	<target name="jabberwookie" depends="prepare">
		<copy file="${jabberwookie.path}/MicroJabberWookie.jar" todir="build/data/usr/share/java"/>
	</target>
	
    <target name="jar" depends="jabberwookie">
        <jar destfile="build/data/usr/share/java/${deb.name}.jar" basedir="${bin.path}">
        	<include name="**"/>
        	<manifest>
        		<attribute name="Main-Class" value="${main.class}"/>
        	</manifest>
        </jar>
    </target>
	
	<target name="data" depends="jar">
		<tar destfile="build/data.tar.gz" compression="gzip">
			<tarfileset dir="build/data" prefix="./" username="root" group="maemo" uid="0" gid="500">
				<exclude name="**/bin/**"/>
			</tarfileset>
			<tarfileset dir="build/data" prefix="./" username="root" group="maemo" uid="0" gid="500" mode="755">
				<include name="**/bin/**"/>
			</tarfileset>
		</tar>
	</target>
	
	<target name="control" depends="data">
		<length property="deb.installed-size">
			<fileset dir="build/data"/>
		</length>
		<mkdir dir="build/control"/>
		<echo file="build/control/control">Package: ${deb.name}
Version: ${deb.version}
Architecture: ${deb.arch}
Depends: ${deb.depends}
Priority: ${deb.priority}
Section: ${deb.section}
Maintainer: ${deb.maintainer}
Installed-Size: ${deb.installed-size}
Description: ${deb.description}
</echo>
		<tar destfile="build/control.tar.gz" compression="gzip">
			<tarfileset dir="build/control" prefix="./" username="root" group="maemo" uid="0" gid="500"/>
		</tar>
	</target>
	
	<target name="deb" depends="control">
		<mkdir dir="${deployment.path}/${deployment.target}/dists/${maemo.dist}/${maemo.components}/binary-armel"/>
		<echo file="build/debian-binary">2.0
</echo>
		<ar basedir="build" destfile="../${deployment.path}/${deployment.target}/dists/${maemo.dist}/${maemo.components}/binary-armel/${deb.name}_${deb.version}_${deb.arch}.deb">
			<arg value="debian-binary"/>
			<arg value="data.tar.gz"/>
			<arg value="control.tar.gz"/>
		</ar>
	</target>

	<target name="resources" depends="deb">
		<echo file="${deployment.path}/${deployment.target}/index.php">&lt;?php
$host  = $_SERVER['HTTP_HOST'];
$uri   = rtrim(dirname($_SERVER['PHP_SELF']), '/\\');
$extra = '${deb.name}.install';
header("Location: http://$host$uri/$extra");
?&gt;
</echo>
		<echo file="${deployment.path}/${deployment.target}/${deb.name}.install">[install]
catalogues = ${deb.name}
package = ${deb.name}

[${deb.name}]
name = ${deb.description}
uri = ${maemo.uri}
dist = ${maemo.dist}
components = ${maemo.components}
</echo>
	</target>

	<target name="all" depends="resources"/>
</project>