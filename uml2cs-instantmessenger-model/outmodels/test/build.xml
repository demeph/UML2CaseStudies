<?xml version="1.0" encoding="UTF-8"?>
<project name="uml2cs-instantmessenger-model" default="all">
	<property name="project.path" value="/${ant.project.name}"/>
	<property name="current.path" value="${project.path}/outmodels/test"/>
	<property name="target.path" value="../../../uml2cs-instantmessenger-default/src"/>
	
	<property name="metamodel.uml2.nsURI" value="http://www.eclipse.org/uml2/2.0.0/UML"/>
	<property name="metamodel.uml2.path" value="/uml2cs-transformations/metamodels/UML2Profiles.ecore"/>
	<property name="profile.accessors.path" value="/uml2cs-transformations/profiles/Accessors.profile.uml"/>
	<property name="model.uml2types.path" value="/uml2cs-transformations/models/PrimitiveTypes.uml"/>
	<property name="model.javatypes.path" value="/uml2cs-transformations/models/JavaTypes.uml"/>
	<property name="model.obstypes.path" value="/uml2cs-transformations/models/Observer.uml"/>
	<property name="model.in.path" value="${project.path}/models/InstantMessengerModel.uml"/>
	<property name="model.local.path" value="${project.path}/models/InstantMessengerLocal.uml"/>
	<property name="model.awt.path" value="${project.path}/models/InstantMessengerAWT.uml"/>

	<property name="trans.path" value="/uml2cs-transformations"/>
	<property name="trans.uml2copy.path" value="${trans.path}/UML2Copy.atl"/>
	<property name="trans.uml2profilecopy.path" value="${trans.path}/UML2ProfileCopy.asm"/>
	<property name="trans.uml2profiles.path" value="${trans.path}/UML2Profiles.asm"/>
	<property name="trans.uml2accessors.path" value="${trans.path}/UML2Accessors.asm"/>
	<property name="trans.uml2observer.path" value="${trans.path}/UML2Observer.asm"/>
	<property name="trans.uml2abstractfactory.path" value="${trans.path}/UML2AbstractFactory.asm"/>
	<property name="trans.uml2singleton.path" value="${trans.path}/UML2Singleton.asm"/>
	<property name="trans.uml2applet.path" value="${trans.path}/UML2Applet.asm"/>
	<property name="trans.uml2asyncmethods.path" value="${trans.path}/UML2AsyncMethods.asm"/>
	<property name="trans.uml2datatypes.path" value="${trans.path}/UML2DataTypes.asm"/>
	<property name="trans.uml2tojava.path" value="${trans.path}/UML2ToJava.atl"/>

	<property name="lib.path" value="${trans.path}/lib"/>
	<property name="lib.java1.path" value="${lib.path}/Java1.asm"/>
	<property name="lib.javamappings.path" value="${lib.path}/JavaMappings.asm"/>
	<property name="lib.strings.path" value="${lib.path}/Strings.asm"/>
	<property name="lib.uml2.path" value="${lib.path}/UML2.asm"/>

	<property name="lib.config.path" value="${current.path}/config.asm"/>

	<target name="clean">
        <delete>
            <fileset dir="${target.path}"/>
        </delete>
	</target>

	<target name="loadModels">
		<am3.loadModel modelHandler="EMF" name="UML2" metamodel="MOF" path="${metamodel.uml2.path}"/>
		<am3.loadModel modelHandler="EMF" name="Accessors" metamodel="UML2" path="${profile.accessors.path}"/>
		<am3.loadModel modelHandler="EMF" name="PrimitiveTypes" metamodel="UML2" path="${model.uml2types.path}"/>
		<am3.loadModel modelHandler="EMF" name="JavaTypes" metamodel="UML2" path="${model.javatypes.path}"/>
		<am3.loadModel modelHandler="EMF" name="Observer" metamodel="UML2" path="${model.obstypes.path}"/>
		<am3.loadModel modelHandler="EMF" name="inModel" metamodel="UML2" path="${model.in.path}"/>
		<am3.loadModel modelHandler="EMF" name="Local" metamodel="UML2" path="${model.local.path}"/>
		<am3.loadModel modelHandler="EMF" name="AWT" metamodel="UML2" path="${model.awt.path}"/>
	</target>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: profiles          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="profiles">
        <attribute name="in" default="MODEL.IN" />
        <attribute name="out" default="MODEL.OUT" />
        <attribute name="path" default="MODEL.OUT.PATH" />
        <sequential>
    		<am3.atl path="${trans.uml2copy.path}" allowInterModelReferences="true">
    			<inmodel name="UML2" model="UML2"/>
    			<inmodel name="IN" model="@{in}"/>
    			<inmodel name="ACCESSORS" model="Accessors"/>
    			<outmodel name="OUT" model="@{out}" metamodel="UML2" path="@{path}"/>
    			<library name="UML2" path="${lib.uml2.path}"/>
    			<superimpose path="${trans.uml2profiles.path}"/>
    			<superimpose path="${trans.uml2profilecopy.path}"/>
    		</am3.atl>
    		<am3.saveModel model="@{out}" path="@{path}"/>
        </sequential>
    </macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: accessors          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="accessors">
        <attribute name="in" default="MODEL.IN" />
        <attribute name="out" default="MODEL.OUT" />
        <attribute name="path" default="MODEL.OUT.PATH" />
        <sequential>
    		<am3.atl path="${trans.uml2copy.path}" allowInterModelReferences="true">
    			<inmodel name="UML2" model="UML2"/>
    			<inmodel name="ACCESSORS" model="Accessors"/>
    			<inmodel name="UML2TYPES" model="PrimitiveTypes"/>
    			<inmodel name="IN" model="@{in}"/>
    			<outmodel name="OUT" model="@{out}" metamodel="UML2" path="@{path}"/>
    			<library name="Strings" path="${lib.strings.path}"/>
    			<library name="UML2" path="${lib.uml2.path}"/>
    			<library name="Java" path="${lib.java1.path}"/>
    			<library name="Mappings" path="${lib.javamappings.path}"/>
    			<superimpose path="${trans.uml2accessors.path}"/>
    			<superimpose path="${trans.uml2profilecopy.path}"/>
    		</am3.atl>
    		<am3.saveModel model="@{out}" path="@{path}"/>
        </sequential>
    </macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: observer          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="observer">
        <attribute name="in" default="MODEL.IN" />
        <attribute name="out" default="MODEL.OUT" />
        <attribute name="path" default="MODEL.OUT.PATH" />
        <sequential>
    		<am3.atl path="${trans.uml2copy.path}" allowInterModelReferences="true">
    			<inmodel name="UML2" model="UML2"/>
    			<inmodel name="OBSERVER" model="Observer"/>
    			<inmodel name="UML2TYPES" model="PrimitiveTypes"/>
    			<inmodel name="IN" model="@{in}"/>
    			<outmodel name="OUT" model="@{out}" metamodel="UML2" path="@{path}"/>
    			<library name="Strings" path="${lib.strings.path}"/>
    			<library name="UML2" path="${lib.uml2.path}"/>
    			<library name="Mappings" path="${lib.javamappings.path}"/>
    			<library name="Java" path="${lib.java1.path}"/>
    			<superimpose path="${trans.uml2observer.path}"/>
    			<superimpose path="${trans.uml2profilecopy.path}"/>
    		</am3.atl>
    		<am3.saveModel model="@{out}" path="@{path}"/>
        </sequential>
    </macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: abstractfactory          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="abstractfactory">
        <attribute name="in" default="MODEL.IN" />
        <attribute name="out" default="MODEL.OUT" />
        <attribute name="path" default="MODEL.OUT.PATH" />
        <sequential>
    		<am3.atl path="${trans.uml2copy.path}" allowInterModelReferences="true">
    			<inmodel name="UML2" model="UML2"/>
    			<inmodel name="IN" model="@{in}"/>
    			<outmodel name="OUT" model="@{out}" metamodel="UML2" path="@{path}"/>
    			<library name="UML2" path="${lib.uml2.path}"/>
    			<library name="Mappings" path="${lib.javamappings.path}"/>
    			<superimpose path="${trans.uml2abstractfactory.path}"/>
    			<superimpose path="${trans.uml2profilecopy.path}"/>
    		</am3.atl>
    		<am3.saveModel model="@{out}" path="@{path}"/>
        </sequential>
    </macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: singleton          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="singleton">
        <attribute name="in" default="MODEL.IN" />
        <attribute name="out" default="MODEL.OUT" />
        <attribute name="path" default="MODEL.OUT.PATH" />
        <sequential>
    		<am3.atl path="${trans.uml2copy.path}" allowInterModelReferences="true">
    			<inmodel name="UML2" model="UML2"/>
    			<inmodel name="IN" model="@{in}"/>
    			<outmodel name="OUT" model="@{out}" metamodel="UML2" path="@{path}"/>
    			<library name="UML2" path="${lib.uml2.path}"/>
    			<library name="Java" path="${lib.java1.path}"/>
    			<library name="Mappings" path="${lib.javamappings.path}"/>
    			<superimpose path="${trans.uml2singleton.path}"/>
    			<superimpose path="${trans.uml2profilecopy.path}"/>
    		</am3.atl>
    		<am3.saveModel model="@{out}" path="@{path}"/>
        </sequential>
    </macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: applet          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="applet">
        <attribute name="in" default="MODEL.IN" />
        <attribute name="out" default="MODEL.OUT" />
        <attribute name="path" default="MODEL.OUT.PATH" />
        <sequential>
    		<am3.atl path="${trans.uml2copy.path}" allowInterModelReferences="true">
    			<inmodel name="UML2" model="UML2"/>
    			<inmodel name="IN" model="@{in}"/>
    			<inmodel name="IMPLTYPES" model="JavaTypes"/>
    			<outmodel name="OUT" model="@{out}" metamodel="UML2" path="@{path}"/>
    			<library name="UML2" path="${lib.uml2.path}"/>
    			<library name="Java" path="${lib.java1.path}"/>
    			<library name="Mappings" path="${lib.javamappings.path}"/>
    			<superimpose path="${trans.uml2applet.path}"/>
    			<superimpose path="${trans.uml2profilecopy.path}"/>
    		</am3.atl>
    		<am3.saveModel model="@{out}" path="@{path}"/>
        </sequential>
    </macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: asyncmethods          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="asyncmethods">
        <attribute name="in" default="MODEL.IN" />
        <attribute name="out" default="MODEL.OUT" />
        <attribute name="path" default="MODEL.OUT.PATH" />
        <sequential>
    		<am3.atl path="${trans.uml2copy.path}" allowInterModelReferences="true">
    			<inmodel name="UML2" model="UML2"/>
    			<inmodel name="IN" model="@{in}"/>
    			<outmodel name="OUT" model="@{out}" metamodel="UML2" path="@{path}"/>
    			<library name="Mappings" path="${lib.javamappings.path}"/>
    			<superimpose path="${trans.uml2asyncmethods.path}"/>
    			<superimpose path="${trans.uml2profilecopy.path}"/>
    		</am3.atl>
    		<am3.saveModel model="@{out}" path="@{path}"/>
        </sequential>
    </macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: datatypes          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="datatypes">
        <attribute name="in" default="MODEL.IN" />
        <attribute name="out" default="MODEL.OUT" />
        <attribute name="path" default="MODEL.OUT.PATH" />
        <sequential>
    		<am3.atl path="${trans.uml2copy.path}" allowInterModelReferences="true">
    			<inmodel name="UML2" model="UML2"/>
    			<inmodel name="IMPLTYPES" model="JavaTypes"/>
    			<inmodel name="IN" model="@{in}"/>
    			<outmodel name="OUT" model="@{out}" metamodel="UML2" path="@{path}"/>
    			<library name="Strings" path="${lib.strings.path}"/>
    			<library name="UML2" path="${lib.uml2.path}"/>
    			<library name="Java" path="${lib.java1.path}"/>
    			<library name="Mappings" path="${lib.javamappings.path}"/>
    			<superimpose path="${trans.uml2datatypes.path}"/>
    			<superimpose path="${trans.uml2profilecopy.path}"/>
    		</am3.atl>
    		<am3.saveModel model="@{out}" path="@{path}"/>
        </sequential>
    </macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: generate          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="generate">
        <attribute name="in" default="MODEL.IN" />
        <sequential>
    		<am3.atl path="${trans.uml2tojava.path}" allowInterModelReferences="true">
    			<inmodel name="UML2" model="UML2"/>
    			<inmodel name="IN" model="@{in}"/>
    			<library name="config" path="${lib.config.path}"/>
    			<library name="UML2" path="${lib.uml2.path}"/>
    		</am3.atl>
        </sequential>
    </macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: transform          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="transform">
        <attribute name="in" default="MODEL.IN" />
        <attribute name="prefix" default="MODEL.OUT.PREFIX" />
        <sequential>
    		<profiles in="@{in}" out="@{prefix}-profiles" path="${current.path}/@{prefix}-profiles.uml"/>
    		<accessors in="@{prefix}-profiles" out="@{prefix}-accessors" path="${current.path}/@{prefix}-accessors.uml"/>
    		<observer in="@{prefix}-accessors" out="@{prefix}-observer" path="${current.path}/@{prefix}-observer.uml"/>
    		<abstractfactory in="@{prefix}-observer" out="@{prefix}-abstractfactory" path="${current.path}/@{prefix}-abstractfactory.uml"/>
    		<singleton in="@{prefix}-abstractfactory" out="@{prefix}-singleton" path="${current.path}/@{prefix}-singleton.uml"/>
    		<applet in="@{prefix}-singleton" out="@{prefix}-applet" path="${current.path}/@{prefix}-applet.uml"/>
    		<asyncmethods in="@{prefix}-applet" out="@{prefix}-asyncmethods" path="${current.path}/@{prefix}-asyncmethods.uml"/>
    		<datatypes in="@{prefix}-asyncmethods" out="@{prefix}-datatypes" path="${current.path}/@{prefix}-datatypes.uml"/>
    		<generate in="@{prefix}-datatypes"/>
        </sequential>
    </macrodef>

	<target name="Observer" depends="loadModels">
		<transform in="Observer" prefix="obs"/>
	</target>

	<target name="InstantMessengerModel" depends="loadModels">
		<transform in="inModel" prefix="im"/>
	</target>

	<target name="InstantMessengerLocal" depends="loadModels">
		<transform in="Local" prefix="local"/>
	</target>

	<target name="InstantMessengerAWT" depends="loadModels">
		<transform in="AWT" prefix="awt"/>
	</target>

    <target name="all" depends="clean, Observer, InstantMessengerModel, InstantMessengerLocal, InstantMessengerAWT"/>
</project>