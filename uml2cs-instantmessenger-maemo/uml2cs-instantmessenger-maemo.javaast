<?xml version="1.0" encoding="ASCII"?>
<JavaAST:AST xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:JavaAST="http://www.eclipse.org/gmt/modisco/JavaAST">
  <compilationUnits lexicalForm="package be.ac.vub.util;&#xA;&#xA;public class IteratorEnumerationAdapter implements java.util.Enumeration {&#xA;&#x9;private java.util.Iterator iterator = null;&#xA;&#xA;&#x9;public IteratorEnumerationAdapter(java.util.Iterator iterator) {&#xA;&#x9;&#x9;this.iterator = iterator;&#xA;&#x9;}&#xA;&#xA;&#x9;public boolean hasMoreElements() {&#xA;&#x9;&#x9;return iterator.hasNext();&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.Object nextElement() {&#xA;&#x9;&#x9;return iterator.next();&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="386">
    <package lexicalForm="package be.ac.vub.util;" length="23">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util" startPosition="8" length="14" fullyQualifiedName="be.ac.vub.util">
        <name lexicalForm="util" startPosition="18" length="4" fullyQualifiedName="util" identifier="util"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub" startPosition="8" length="9" fullyQualifiedName="be.ac.vub">
          <name lexicalForm="vub" startPosition="14" length="3" fullyQualifiedName="vub" identifier="vub"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac" startPosition="8" length="5" fullyQualifiedName="be.ac">
            <name lexicalForm="ac" startPosition="11" length="2" fullyQualifiedName="ac" identifier="ac"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="be" startPosition="8" length="2" fullyQualifiedName="be" identifier="be"/>
          </qualifier>
        </qualifier>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class IteratorEnumerationAdapter implements java.util.Enumeration {&#xA;&#x9;private java.util.Iterator iterator = null;&#xA;&#xA;&#x9;public IteratorEnumerationAdapter(java.util.Iterator iterator) {&#xA;&#x9;&#x9;this.iterator = iterator;&#xA;&#x9;}&#xA;&#xA;&#x9;public boolean hasMoreElements() {&#xA;&#x9;&#x9;return iterator.hasNext();&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.Object nextElement() {&#xA;&#x9;&#x9;return iterator.next();&#xA;&#x9;}&#xA;&#xA;}" startPosition="25" length="360" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.8/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@type/@name/@name //@compilationUnits.25/@types.0/@bodyDeclarations.26/@body/@statements.0/@expression //@compilationUnits.24/@types.0/@bodyDeclarations.18/@body/@statements.0/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.25/@body/@statements.0/@expression/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression //@compilationUnits.25/@types.0/@bodyDeclarations.26/@body/@statements.0/@expression/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.23/@body/@statements.0/@expression/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression/@type/@name //@compilationUnits.25/@types.0/@bodyDeclarations.26/@body/@statements.0/@expression/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.23/@body/@statements.0/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.20/@body/@statements.0/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.23/@body/@statements.0/@expression/@type/@name //@compilationUnits.0/@types.0/@bodyDeclarations.1/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.20/@body/@statements.0/@expression/@type/@name //@compilationUnits.24/@types.0/@bodyDeclarations.18/@body/@statements.0/@expression/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.25/@body/@statements.0/@expression/@type/@name/@name //@compilationUnits.23/@types.0/@bodyDeclarations.25/@body/@statements.0/@expression //@compilationUnits.24/@types.0/@bodyDeclarations.18/@body/@statements.0/@expression/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.20/@body/@statements.0/@expression/@type/@name/@name //@compilationUnits.0/@types.0/@name" resolvedTypeReferences="//@compilationUnits.2/@types.0/@bodyDeclarations.23/@body/@statements.0/@expression/@type //@compilationUnits.8/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@type //@compilationUnits.24/@types.0/@bodyDeclarations.18/@body/@statements.0/@expression/@type //@compilationUnits.5/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression/@type //@compilationUnits.23/@types.0/@bodyDeclarations.25/@body/@statements.0/@expression/@type //@compilationUnits.2/@types.0/@bodyDeclarations.20/@body/@statements.0/@expression/@type //@compilationUnits.25/@types.0/@bodyDeclarations.26/@body/@statements.0/@expression/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="25" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.util.Iterator iterator = null;" startPosition="101" length="43">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="101" length="7" private="true"/>
        <fragments lexicalForm="iterator = null" startPosition="128" length="15">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="139" length="4"/>
          <name lexicalForm="iterator" startPosition="128" length="8" fullyQualifiedName="iterator" identifier="iterator" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Iterator" startPosition="109" length="18">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Iterator" startPosition="109" length="18" fullyQualifiedName="java.util.Iterator">
            <name lexicalForm="Iterator" startPosition="119" length="8" fullyQualifiedName="Iterator" identifier="Iterator"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="109" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="114" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="109" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public IteratorEnumerationAdapter(java.util.Iterator iterator) {&#xA;&#x9;&#x9;this.iterator = iterator;&#xA;&#x9;}" startPosition="147" length="95" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="147" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.iterator = iterator;&#xA;&#x9;}" startPosition="210" length="32">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.iterator = iterator;" startPosition="214" length="25">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.iterator = iterator" startPosition="214" length="24" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.iterator" startPosition="214" length="13">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="214" length="4" resolvedType="//@compilationUnits.0/@types.0"/>
                <name lexicalForm="iterator" startPosition="219" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="iterator" startPosition="230" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="IteratorEnumerationAdapter" startPosition="154" length="26" fullyQualifiedName="IteratorEnumerationAdapter" identifier="IteratorEnumerationAdapter"/>
        <parameters lexicalForm="java.util.Iterator iterator" startPosition="181" length="27">
          <name lexicalForm="iterator" startPosition="200" length="8" fullyQualifiedName="iterator" identifier="iterator" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Iterator" startPosition="181" length="18">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Iterator" startPosition="181" length="18" fullyQualifiedName="java.util.Iterator">
              <name lexicalForm="Iterator" startPosition="191" length="8" fullyQualifiedName="Iterator" identifier="Iterator"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="181" length="9" fullyQualifiedName="java.util">
                <name lexicalForm="util" startPosition="186" length="4" fullyQualifiedName="util" identifier="util"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="181" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public boolean hasMoreElements() {&#xA;&#x9;&#x9;return iterator.hasNext();&#xA;&#x9;}" startPosition="245" length="66">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="245" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return iterator.hasNext();&#xA;&#x9;}" startPosition="278" length="33">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return iterator.hasNext();" startPosition="282" length="26">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="iterator.hasNext()" startPosition="289" length="18">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="iterator" startPosition="289" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
              <name lexicalForm="hasNext" startPosition="298" length="7" fullyQualifiedName="hasNext" identifier="hasNext"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="hasMoreElements" startPosition="260" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="252" length="7" code="boolean"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.Object nextElement() {&#xA;&#x9;&#x9;return iterator.next();&#xA;&#x9;}" startPosition="314" length="68">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="314" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return iterator.next();&#xA;&#x9;}" startPosition="352" length="30">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return iterator.next();" startPosition="356" length="23">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="iterator.next()" startPosition="363" length="15">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="iterator" startPosition="363" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
              <name lexicalForm="next" startPosition="372" length="4" fullyQualifiedName="next" identifier="next"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="nextElement" startPosition="338" length="11" fullyQualifiedName="nextElement" identifier="nextElement" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="321" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="321" length="16" fullyQualifiedName="java.lang.Object">
            <name lexicalForm="Object" startPosition="331" length="6" fullyQualifiedName="Object" identifier="Object"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="321" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="326" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="321" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <name lexicalForm="IteratorEnumerationAdapter" startPosition="38" length="26" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="IteratorEnumerationAdapter" identifier="IteratorEnumerationAdapter" declaration="true"/>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="76" length="21">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="76" length="21" fullyQualifiedName="java.util.Enumeration">
          <name lexicalForm="Enumeration" startPosition="86" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="76" length="9" fullyQualifiedName="java.util">
            <name lexicalForm="util" startPosition="81" length="4" fullyQualifiedName="util" identifier="util"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="76" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im;&#xA;&#xA;public interface ExceptionReporter {&#xA;&#x9;public abstract void report(java.lang.Exception e);&#xA;&#xA;}&#xA;" length="106">
    <package lexicalForm="package im;" length="11">
      <name xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public interface ExceptionReporter {&#xA;&#x9;public abstract void report(java.lang.Exception e);&#xA;&#xA;}" startPosition="13" length="92" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.2/@types.0/@superInterfaceTypes.1/@name //@compilationUnits.15/@types.0/@superInterfaceTypes.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.8/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.1/@types.0/@name //@compilationUnits.15/@types.0/@superInterfaceTypes.0/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.8/@body/@statements.0/@body/@statements.1/@expression/@rightOperand/@name //@compilationUnits.2/@types.0/@bodyDeclarations.8/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression/@expression/@type/@name //@compilationUnits.2/@types.0/@superInterfaceTypes.1/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.8/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression/@expression" resolvedTypeReferences="//@compilationUnits.2/@types.0/@bodyDeclarations.8/@body/@statements.0/@body/@statements.1/@expression/@rightOperand //@compilationUnits.2/@types.0/@bodyDeclarations.8/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression/@expression/@type //@compilationUnits.2/@types.0/@superInterfaceTypes.1 //@compilationUnits.15/@types.0/@superInterfaceTypes.0" interface="true">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="13" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public abstract void report(java.lang.Exception e);" startPosition="51" length="51">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="51" length="6" public="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="58" length="8" abstract="true"/>
        <name lexicalForm="report" startPosition="72" length="6" fullyQualifiedName="report" identifier="report" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="67" length="4" code="void"/>
        <parameters lexicalForm="java.lang.Exception e" startPosition="79" length="21">
          <name lexicalForm="e" startPosition="99" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Exception" startPosition="79" length="19">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Exception" startPosition="79" length="19" fullyQualifiedName="java.lang.Exception">
              <name lexicalForm="Exception" startPosition="89" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="79" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="84" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="79" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="ExceptionReporter" startPosition="30" length="17" resolvedType="//@compilationUnits.1/@types.0" fullyQualifiedName="ExceptionReporter" identifier="ExceptionReporter" declaration="true"/>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im;&#xA;&#xA;import im.model.*;&#xA;import im.networking.Network;&#xA;import im.edit.*;&#xA;import im.view.*;&#xA;&#xA;public class InstantMessagingClient extends swt.SWTApplication&#xA;&#x9;&#x9;implements&#xA;&#x9;&#x9;&#x9;java.util.Observer,&#xA;&#x9;&#x9;&#x9;im.ExceptionReporter {&#xA;&#x9;private java.util.List network = new java.util.ArrayList();&#xA;&#xA;&#x9;private im.model.ContactList contactList = new ContactList();&#xA;&#xA;&#x9;private java.util.Set conversation = new java.util.HashSet();&#xA;&#xA;&#x9;private im.view.ViewFactory viewFactory = null;&#xA;&#xA;&#x9;private static final long serialVersionUID = -3374609151465534159L;&#xA;&#xA;&#x9;private im.edit.ContactListEdit contactListEdit = null;&#xA;&#xA;&#x9;private static im.InstantMessagingClient instance = null;&#xA;&#xA;&#x9;public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void report(java.lang.Exception e) {&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Object n = ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (n instanceof ExceptionReporter) {&#xA;&#x9;&#x9;&#x9;&#x9;((ExceptionReporter) n).report(e);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;System.err.println(e.getMessage());&#xA;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;}&#xA;&#xA;&#x9;public void init() {&#xA;&#x9;&#x9;getShell().setLayout(new org.eclipse.swt.layout.FormLayout());&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;// ViewFactory&#xA;&#x9;&#x9;&#x9;setViewFactory(ViewFactory.getDefault());&#xA;&#x9;&#x9;&#x9;// Network&#xA;&#x9;&#x9;&#x9;Network.discoverNetworks();&#xA;&#x9;&#x9;&#x9;// Create and register edit/view&#xA;&#x9;&#x9;&#x9;setContactListEdit(new ContactListEdit(contactList));&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void start() {&#xA;&#x9;&#x9;boolean hasID = false;&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;Identity id = getContactList().getIdentity(n);&#xA;&#x9;&#x9;&#x9;if (id != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;hasID = true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (!hasID) {&#xA;&#x9;&#x9;&#x9;getContactListEdit().onContactListAdd();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void stop() {&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (getContactList().getIdentity(n) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.logout();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void onRecvContactChange(im.model.Contact c) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContactList().getContacts(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact listed = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (listed.getUserId().equals(c.getUserId())) {&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getStatus() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setStatus(c.getStatus());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setName(c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getContactList().addContact(c);&#xA;&#x9;}&#xA;&#xA;&#x9;public void onRecvMsgChange(im.model.Message r) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Conversation c = (Conversation) cs.nextElement();&#xA;&#x9;&#x9;&#x9;String contact = c.getContact().getUserId();&#xA;&#x9;&#x9;&#x9;if (contact.equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;c.setMessage(r);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;Conversation conv = new Conversation();&#xA;&#x9;&#x9;new ConversationEdit(conv);&#xA;&#x9;&#x9;addConversation(conv);&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContactList().getContacts(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact c = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (c.getUserId().equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (conv.getContact() == null) {&#xA;&#x9;&#x9;&#x9;conv.setContact(new Contact());&#xA;&#x9;&#x9;&#x9;conv.getContact().setUserId(r.getSender());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;conv.setMessage(r);&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.ContactList getContactList() {&#xA;&#x9;&#x9;return contactList;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setContactList(im.model.ContactList contactList) {&#xA;&#x9;&#x9;this.contactList = contactList;&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.ViewFactory getViewFactory() {&#xA;&#x9;&#x9;return viewFactory;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setViewFactory(im.view.ViewFactory viewFactory) {&#xA;&#x9;&#x9;this.viewFactory = viewFactory;&#xA;&#x9;}&#xA;&#xA;&#x9;public im.edit.ContactListEdit getContactListEdit() {&#xA;&#x9;&#x9;return contactListEdit;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setContactListEdit(im.edit.ContactListEdit contactListEdit) {&#xA;&#x9;&#x9;this.contactListEdit = contactListEdit;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getConversations() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(conversation&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addConversation(im.model.Conversation conversation) {&#xA;&#x9;&#x9;if (!this.conversation.contains(conversation)) {&#xA;&#x9;&#x9;&#x9;this.conversation.add(conversation);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeConversation(im.model.Conversation conversation) {&#xA;&#x9;&#x9;this.conversation.remove(conversation);&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getNetworks() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(network.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;if (!this.network.contains(network)) {&#xA;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.addObserver(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.deleteObserver(this);&#xA;&#x9;&#x9;this.network.remove(network);&#xA;&#x9;}&#xA;&#xA;&#x9;public im.networking.Network getNetworkAt(int index) {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.networking.Network) network.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public int getIndexOfNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;return this.network.indexOf(network);&#xA;&#x9;}&#xA;&#xA;&#x9;public void insertNetwork(im.networking.Network network, int index) {&#xA;&#x9;&#x9;if (!this.network.contains(network)) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(index, network);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.addObserver(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public static im.InstantMessagingClient getInstance() {&#xA;&#x9;&#x9;if (instance == null) {&#xA;&#x9;&#x9;&#x9;instance = new InstantMessagingClient();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return instance;&#xA;&#x9;}&#xA;&#xA;&#x9;public static void main(java.lang.String[] args) {&#xA;&#x9;&#x9;InstantMessagingClient app = getInstance();&#xA;&#x9;&#x9;app.setRunning(true);&#xA;&#x9;&#x9;final org.eclipse.swt.widgets.Shell shell = app.getShell();&#xA;&#x9;&#x9;final org.eclipse.swt.widgets.Display display = shell.getDisplay();&#xA;&#x9;&#x9;app.init();&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.open();&#xA;&#x9;&#x9;app.start();&#xA;&#x9;&#x9;while (!shell.isDisposed()) {&#xA;&#x9;&#x9;&#x9;if (!display.readAndDispatch()) {&#xA;&#x9;&#x9;&#x9;&#x9;display.sleep();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;app.stop();&#xA;&#x9;&#x9;app.destroy();&#xA;&#x9;&#x9;display.dispose();&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="6428">
    <package lexicalForm="package im;" length="11">
      <name xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
    </package>
    <imports lexicalForm="import im.model.*;" startPosition="13" length="18" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="20" length="8" fullyQualifiedName="im.model">
        <name lexicalForm="model" startPosition="23" length="5" fullyQualifiedName="model" identifier="model"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="20" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </imports>
    <imports lexicalForm="import im.networking.Network;" startPosition="32" length="29">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="39" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
        <name lexicalForm="Network" startPosition="53" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="39" length="13" fullyQualifiedName="im.networking">
          <name lexicalForm="networking" startPosition="42" length="10" fullyQualifiedName="networking" identifier="networking"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="39" length="2" fullyQualifiedName="im" identifier="im"/>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import im.edit.*;" startPosition="62" length="17" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="69" length="7" fullyQualifiedName="im.edit">
        <name lexicalForm="edit" startPosition="72" length="4" fullyQualifiedName="edit" identifier="edit"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="69" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </imports>
    <imports lexicalForm="import im.view.*;" startPosition="80" length="17" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="87" length="7" fullyQualifiedName="im.view">
        <name lexicalForm="view" startPosition="90" length="4" fullyQualifiedName="view" identifier="view"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="87" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </imports>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class InstantMessagingClient extends swt.SWTApplication&#xA;&#x9;&#x9;implements&#xA;&#x9;&#x9;&#x9;java.util.Observer,&#xA;&#x9;&#x9;&#x9;im.ExceptionReporter {&#xA;&#x9;private java.util.List network = new java.util.ArrayList();&#xA;&#xA;&#x9;private im.model.ContactList contactList = new ContactList();&#xA;&#xA;&#x9;private java.util.Set conversation = new java.util.HashSet();&#xA;&#xA;&#x9;private im.view.ViewFactory viewFactory = null;&#xA;&#xA;&#x9;private static final long serialVersionUID = -3374609151465534159L;&#xA;&#xA;&#x9;private im.edit.ContactListEdit contactListEdit = null;&#xA;&#xA;&#x9;private static im.InstantMessagingClient instance = null;&#xA;&#xA;&#x9;public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void report(java.lang.Exception e) {&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Object n = ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (n instanceof ExceptionReporter) {&#xA;&#x9;&#x9;&#x9;&#x9;((ExceptionReporter) n).report(e);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;System.err.println(e.getMessage());&#xA;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;}&#xA;&#xA;&#x9;public void init() {&#xA;&#x9;&#x9;getShell().setLayout(new org.eclipse.swt.layout.FormLayout());&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;// ViewFactory&#xA;&#x9;&#x9;&#x9;setViewFactory(ViewFactory.getDefault());&#xA;&#x9;&#x9;&#x9;// Network&#xA;&#x9;&#x9;&#x9;Network.discoverNetworks();&#xA;&#x9;&#x9;&#x9;// Create and register edit/view&#xA;&#x9;&#x9;&#x9;setContactListEdit(new ContactListEdit(contactList));&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void start() {&#xA;&#x9;&#x9;boolean hasID = false;&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;Identity id = getContactList().getIdentity(n);&#xA;&#x9;&#x9;&#x9;if (id != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;hasID = true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (!hasID) {&#xA;&#x9;&#x9;&#x9;getContactListEdit().onContactListAdd();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void stop() {&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (getContactList().getIdentity(n) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.logout();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void onRecvContactChange(im.model.Contact c) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContactList().getContacts(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact listed = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (listed.getUserId().equals(c.getUserId())) {&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getStatus() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setStatus(c.getStatus());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setName(c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getContactList().addContact(c);&#xA;&#x9;}&#xA;&#xA;&#x9;public void onRecvMsgChange(im.model.Message r) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Conversation c = (Conversation) cs.nextElement();&#xA;&#x9;&#x9;&#x9;String contact = c.getContact().getUserId();&#xA;&#x9;&#x9;&#x9;if (contact.equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;c.setMessage(r);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;Conversation conv = new Conversation();&#xA;&#x9;&#x9;new ConversationEdit(conv);&#xA;&#x9;&#x9;addConversation(conv);&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContactList().getContacts(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact c = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (c.getUserId().equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (conv.getContact() == null) {&#xA;&#x9;&#x9;&#x9;conv.setContact(new Contact());&#xA;&#x9;&#x9;&#x9;conv.getContact().setUserId(r.getSender());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;conv.setMessage(r);&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.ContactList getContactList() {&#xA;&#x9;&#x9;return contactList;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setContactList(im.model.ContactList contactList) {&#xA;&#x9;&#x9;this.contactList = contactList;&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.ViewFactory getViewFactory() {&#xA;&#x9;&#x9;return viewFactory;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setViewFactory(im.view.ViewFactory viewFactory) {&#xA;&#x9;&#x9;this.viewFactory = viewFactory;&#xA;&#x9;}&#xA;&#xA;&#x9;public im.edit.ContactListEdit getContactListEdit() {&#xA;&#x9;&#x9;return contactListEdit;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setContactListEdit(im.edit.ContactListEdit contactListEdit) {&#xA;&#x9;&#x9;this.contactListEdit = contactListEdit;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getConversations() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(conversation&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addConversation(im.model.Conversation conversation) {&#xA;&#x9;&#x9;if (!this.conversation.contains(conversation)) {&#xA;&#x9;&#x9;&#x9;this.conversation.add(conversation);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeConversation(im.model.Conversation conversation) {&#xA;&#x9;&#x9;this.conversation.remove(conversation);&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getNetworks() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(network.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;if (!this.network.contains(network)) {&#xA;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.addObserver(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.deleteObserver(this);&#xA;&#x9;&#x9;this.network.remove(network);&#xA;&#x9;}&#xA;&#xA;&#x9;public im.networking.Network getNetworkAt(int index) {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.networking.Network) network.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public int getIndexOfNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;return this.network.indexOf(network);&#xA;&#x9;}&#xA;&#xA;&#x9;public void insertNetwork(im.networking.Network network, int index) {&#xA;&#x9;&#x9;if (!this.network.contains(network)) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(index, network);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.addObserver(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public static im.InstantMessagingClient getInstance() {&#xA;&#x9;&#x9;if (instance == null) {&#xA;&#x9;&#x9;&#x9;instance = new InstantMessagingClient();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return instance;&#xA;&#x9;}&#xA;&#xA;&#x9;public static void main(java.lang.String[] args) {&#xA;&#x9;&#x9;InstantMessagingClient app = getInstance();&#xA;&#x9;&#x9;app.setRunning(true);&#xA;&#x9;&#x9;final org.eclipse.swt.widgets.Shell shell = app.getShell();&#xA;&#x9;&#x9;final org.eclipse.swt.widgets.Display display = shell.getDisplay();&#xA;&#x9;&#x9;app.init();&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.open();&#xA;&#x9;&#x9;app.start();&#xA;&#x9;&#x9;while (!shell.isDisposed()) {&#xA;&#x9;&#x9;&#x9;if (!display.readAndDispatch()) {&#xA;&#x9;&#x9;&#x9;&#x9;display.sleep();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;app.stop();&#xA;&#x9;&#x9;app.destroy();&#xA;&#x9;&#x9;display.dispose();&#xA;&#x9;}&#xA;&#xA;}" startPosition="99" length="6328" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.13/@types.0/@bodyDeclarations.12/@body/@statements.1/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.2/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.4/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.5/@expression/@expression //@compilationUnits.26/@types.0/@bodyDeclarations.0/@body/@statements.1/@expression/@operand/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.1/@fragments.0/@initializer //@compilationUnits.2/@types.0/@bodyDeclarations.21/@body/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.29/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@type/@name //@compilationUnits.5/@imports.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.12/@body/@statements.1/@catchClauses.0/@body/@statements.0/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@expression/@expression //@compilationUnits.25/@types.0/@bodyDeclarations.19/@body/@statements.1/@expression/@expression/@expression/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression/@name //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.2/@body/@statements.0/@body/@statements.0/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@name //@compilationUnits.24/@types.0/@bodyDeclarations.11/@body/@statements.1/@expression/@expression/@expression/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.2/@expression/@arguments.0/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.2/@fragments.0/@initializer //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.9/@expression/@expression //@compilationUnits.25/@types.0/@bodyDeclarations.19/@body/@statements.1/@expression/@expression/@expression/@expression/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.6/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.1/@fragments.0/@initializer/@name //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.1/@fragments.0/@initializer/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.6/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.6/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.28/@body/@statements.0/@thenStatement/@statements.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.29/@returnType/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.0/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.3/@body/@statements.0/@expression/@arguments.0/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.28/@body/@statements.1/@thenStatement/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression/@name //@compilationUnits.13/@types.0/@bodyDeclarations.12/@body/@statements.1/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression/@name //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.1/@fragments.0/@initializer //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.1/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.1/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.29/@body/@statements.0/@thenStatement/@statements.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.6/@catchClauses.0/@body/@statements.0/@expression/@expression/@name //@compilationUnits.5/@imports.0/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.17/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@fragments.0/@initializer/@expression/@expression/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.1/@fragments.0/@initializer/@name //@compilationUnits.26/@types.0/@bodyDeclarations.0/@body/@statements.1/@expression/@operand/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.2/@expression/@arguments.0/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.2/@fragments.0/@initializer/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.24/@body/@statements.1/@thenStatement/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.29/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.2/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.5/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression //@compilationUnits.23/@imports.2/@name/@name //@compilationUnits.25/@types.0/@bodyDeclarations.23/@body/@statements.0/@expression/@rightHandSide/@arguments.0/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.1/@fragments.0/@initializer/@expression/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression //@compilationUnits.24/@types.0/@bodyDeclarations.11/@body/@statements.1/@expression/@expression/@expression/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.29/@body/@statements.0/@expression/@leftOperand //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.1/@fragments.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.12/@body/@statements.1/@catchClauses.0/@body/@statements.0/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.29/@returnType/@name //@compilationUnits.24/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression/@rightHandSide/@arguments.0/@expression/@expression/@name //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.3/@catchClauses.0/@body/@statements.0/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.1/@fragments.0/@initializer/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.1/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.19/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer/@expression/@expression //@compilationUnits.24/@imports.2/@name/@name //@compilationUnits.23/@types.0/@bodyDeclarations.10/@body/@statements.4/@fragments.0/@initializer/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.7/@body/@statements.0/@thenStatement/@statements.3/@body/@statements.2/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.25/@body/@statements.1/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.1/@type/@name //@compilationUnits.25/@imports.2/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.0/@fragments.0/@initializer/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer/@expression/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.2/@fragments.0/@initializer/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.5/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@name //@compilationUnits.24/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression/@rightHandSide/@arguments.0/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@expression/@name //@compilationUnits.25/@types.0/@bodyDeclarations.23/@body/@statements.0/@expression/@rightHandSide/@arguments.0/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.10/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@initializers.0/@fragments.0/@initializer/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.1/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.1/@fragments.0/@initializer/@name //@compilationUnits.24/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression/@rightHandSide/@arguments.0/@expression/@expression/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.1/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.1/@fragments.0/@initializer/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.6/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.24/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@expression/@expression/@expression/@name //@compilationUnits.26/@types.0/@bodyDeclarations.0/@body/@statements.1/@expression/@operand/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.1/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.1/@fragments.0/@initializer/@expression/@name //@compilationUnits.23/@types.0/@bodyDeclarations.0/@fragments.0/@initializer/@arguments.0/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.0/@fragments.0/@initializer/@name //@compilationUnits.2/@types.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.7/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.2/@fragments.0/@initializer/@name //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.1/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.6/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.1/@type/@name/@name //@compilationUnits.24/@imports.2/@name //@compilationUnits.24/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@expression/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.1/@fragments.0/@initializer //@compilationUnits.2/@types.0/@bodyDeclarations.29/@body/@statements.1/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.1/@fragments.0/@initializer/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.2/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.1/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.1/@fragments.0/@initializer/@name //@compilationUnits.2/@types.0/@bodyDeclarations.29/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide //@compilationUnits.2/@types.0/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression/@expression //@compilationUnits.26/@imports.0/@name/@name //@compilationUnits.23/@types.0/@bodyDeclarations.10/@body/@statements.4/@fragments.0/@initializer/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.1/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.1/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.29/@name //@compilationUnits.24/@types.0/@bodyDeclarations.11/@body/@statements.1/@expression/@expression/@expression/@expression //@compilationUnits.25/@types.0/@bodyDeclarations.23/@body/@statements.0/@expression/@rightHandSide/@arguments.0/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.1/@fragments.0/@initializer/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.5/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.28/@body/@statements.0/@thenStatement/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.26/@imports.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.1/@fragments.0/@initializer/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.28/@body/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.1/@fragments.0/@initializer/@expression //@compilationUnits.23/@imports.2/@name //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.0/@fragments.0/@initializer/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@fragments.0/@initializer/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.2/@fragments.0/@initializer/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.21/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.1/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.1/@fragments.0/@initializer/@name //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.1/@fragments.0/@initializer //@compilationUnits.23/@types.0/@bodyDeclarations.0/@fragments.0/@initializer/@arguments.0/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.24/@body/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.0/@fragments.0/@initializer/@arguments.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.5/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.0/@fragments.0/@name //@compilationUnits.25/@types.0/@bodyDeclarations.19/@body/@statements.1/@expression/@expression/@expression/@expression //@compilationUnits.25/@imports.2/@name //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.1/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.27/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.23/@types.0/@bodyDeclarations.10/@body/@statements.4/@fragments.0/@initializer/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@fragments.0/@initializer/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.3/@initializers.0/@fragments.0/@initializer/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.1/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.24/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@expression/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.2/@fragments.0/@initializer/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.22/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.6/@catchClauses.0/@body/@statements.0/@expression/@expression" resolvedTypeReferences="//@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.1/@type //@compilationUnits.2/@types.0/@bodyDeclarations.29/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@type //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.2/@type //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.29/@returnType //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.1/@type //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.1/@type //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.1/@type //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.1/@type //@compilationUnits.2/@types.0/@bodyDeclarations.30/@body/@statements.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.6/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="99" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.util.List network = new java.util.ArrayList();" startPosition="225" length="59">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="225" length="7" private="true"/>
        <fragments lexicalForm="network = new java.util.ArrayList()" startPosition="248" length="35">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.ArrayList()" startPosition="258" length="25">
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.ArrayList" startPosition="262" length="19">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.ArrayList" startPosition="262" length="19" fullyQualifiedName="java.util.ArrayList">
                <name lexicalForm="ArrayList" startPosition="272" length="9" fullyQualifiedName="ArrayList" identifier="ArrayList"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="262" length="9" fullyQualifiedName="java.util">
                  <name lexicalForm="util" startPosition="267" length="4" fullyQualifiedName="util" identifier="util"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="262" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </initializer>
          <name lexicalForm="network" startPosition="248" length="7" fullyQualifiedName="network" identifier="network" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.List" startPosition="233" length="14">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.List" startPosition="233" length="14" fullyQualifiedName="java.util.List">
            <name lexicalForm="List" startPosition="243" length="4" fullyQualifiedName="List" identifier="List"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="233" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="238" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="233" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.model.ContactList contactList = new ContactList();" startPosition="287" length="61">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="287" length="7" private="true"/>
        <fragments lexicalForm="contactList = new ContactList()" startPosition="316" length="31">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new ContactList()" startPosition="330" length="17" resolvedType="//@compilationUnits.8/@types.0">
            <type xsi:type="JavaAST:SimpleType" lexicalForm="ContactList" startPosition="334" length="11" resolvedType="//@compilationUnits.8/@types.0">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="ContactList" startPosition="334" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="ContactList" identifier="ContactList"/>
            </type>
          </initializer>
          <name lexicalForm="contactList" startPosition="316" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="contactList" identifier="contactList" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.ContactList" startPosition="295" length="20" resolvedType="//@compilationUnits.8/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.ContactList" startPosition="295" length="20" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="im.model.ContactList">
            <name lexicalForm="ContactList" startPosition="304" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="ContactList" identifier="ContactList"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="295" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="298" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="295" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.util.Set conversation = new java.util.HashSet();" startPosition="351" length="61">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="351" length="7" private="true"/>
        <fragments lexicalForm="conversation = new java.util.HashSet()" startPosition="373" length="38">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.HashSet()" startPosition="388" length="23">
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.HashSet" startPosition="392" length="17">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.HashSet" startPosition="392" length="17" fullyQualifiedName="java.util.HashSet">
                <name lexicalForm="HashSet" startPosition="402" length="7" fullyQualifiedName="HashSet" identifier="HashSet"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="392" length="9" fullyQualifiedName="java.util">
                  <name lexicalForm="util" startPosition="397" length="4" fullyQualifiedName="util" identifier="util"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="392" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </initializer>
          <name lexicalForm="conversation" startPosition="373" length="12" fullyQualifiedName="conversation" identifier="conversation" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Set" startPosition="359" length="13">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Set" startPosition="359" length="13" fullyQualifiedName="java.util.Set">
            <name lexicalForm="Set" startPosition="369" length="3" fullyQualifiedName="Set" identifier="Set"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="359" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="364" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="359" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.view.ViewFactory viewFactory = null;" startPosition="415" length="47">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="415" length="7" private="true"/>
        <fragments lexicalForm="viewFactory = null" startPosition="443" length="18">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="457" length="4"/>
          <name lexicalForm="viewFactory" startPosition="443" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="viewFactory" identifier="viewFactory" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ViewFactory" startPosition="423" length="19" resolvedType="//@compilationUnits.16/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ViewFactory" startPosition="423" length="19" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="im.view.ViewFactory">
            <name lexicalForm="ViewFactory" startPosition="431" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="ViewFactory" identifier="ViewFactory"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="423" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="426" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="423" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private static final long serialVersionUID = -3374609151465534159L;" startPosition="465" length="67">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="465" length="7" private="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="static" startPosition="473" length="6" static="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="480" length="5" final="true"/>
        <fragments lexicalForm="serialVersionUID = -3374609151465534159L" startPosition="491" length="40">
          <initializer xsi:type="JavaAST:PrefixExpression" lexicalForm="-3374609151465534159L" startPosition="510" length="21">
            <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="3374609151465534159L" startPosition="511" length="20" token="3374609151465534159L"/>
          </initializer>
          <name lexicalForm="serialVersionUID" startPosition="491" length="16" fullyQualifiedName="serialVersionUID" identifier="serialVersionUID" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:PrimitiveType" lexicalForm="long" startPosition="486" length="4" code="long"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.edit.ContactListEdit contactListEdit = null;" startPosition="535" length="55">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="535" length="7" private="true"/>
        <fragments lexicalForm="contactListEdit = null" startPosition="567" length="22">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="585" length="4"/>
          <name lexicalForm="contactListEdit" startPosition="567" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="contactListEdit" identifier="contactListEdit" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactListEdit" startPosition="543" length="23" resolvedType="//@compilationUnits.5/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactListEdit" startPosition="543" length="23" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="im.edit.ContactListEdit">
            <name lexicalForm="ContactListEdit" startPosition="551" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="ContactListEdit" identifier="ContactListEdit"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="543" length="7" fullyQualifiedName="im.edit">
              <name lexicalForm="edit" startPosition="546" length="4" fullyQualifiedName="edit" identifier="edit"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="543" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private static im.InstantMessagingClient instance = null;" startPosition="593" length="57">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="593" length="7" private="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="static" startPosition="601" length="6" static="true"/>
        <fragments lexicalForm="instance = null" startPosition="634" length="15">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="645" length="4"/>
          <name lexicalForm="instance" startPosition="634" length="8" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="instance" identifier="instance" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.InstantMessagingClient" startPosition="608" length="25" resolvedType="//@compilationUnits.2/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="608" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
            <name lexicalForm="InstantMessagingClient" startPosition="611" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="608" length="2" fullyQualifiedName="im" identifier="im"/>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="653" length="596">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="653" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="718" length="531">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="722" length="524">
            <expression xsi:type="JavaAST:InstanceofExpression" lexicalForm="arg instanceof java.util.Hashtable" startPosition="726" length="34">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="arg" startPosition="726" length="3" fullyQualifiedName="arg" identifier="arg"/>
              <rightOperand xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="741" length="19">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="741" length="19" fullyQualifiedName="java.util.Hashtable">
                  <name lexicalForm="Hashtable" startPosition="751" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="741" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="746" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="741" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="762" length="484">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = (java.util.Hashtable) arg;" startPosition="767" length="50">
                <fragments lexicalForm="e = (java.util.Hashtable) arg" startPosition="787" length="29">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(java.util.Hashtable) arg" startPosition="791" length="25">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="arg" startPosition="813" length="3" fullyQualifiedName="arg" identifier="arg"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="792" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="792" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="802" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="792" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="797" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="792" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="787" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="767" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="767" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="777" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="767" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="772" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="767" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;" startPosition="821" length="58">
                <fragments lexicalForm="mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;" startPosition="828" length="50">
                  <initializer xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;" startPosition="836" length="42" operator="+">
                    <extendedOperands xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Change&quot;" startPosition="870" length="8" escapedValue="&quot;Change&quot;" literalValue="Change"/>
                    <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;on&quot;" startPosition="836" length="4" escapedValue="&quot;on&quot;" literalValue="on"/>
                    <rightOperand xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((String) e.get(&quot;name&quot;))" startPosition="843" length="24">
                      <expression xsi:type="JavaAST:CastExpression" lexicalForm="(String) e.get(&quot;name&quot;)" startPosition="844" length="22">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;name&quot;)" startPosition="853" length="13">
                          <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="859" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="853" length="1" fullyQualifiedName="e" identifier="e"/>
                          <name lexicalForm="get" startPosition="855" length="3" fullyQualifiedName="get" identifier="get"/>
                        </expression>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="845" length="6">
                          <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="845" length="6" fullyQualifiedName="String" identifier="String"/>
                        </type>
                      </expression>
                    </rightOperand>
                  </initializer>
                  <name lexicalForm="mName" startPosition="828" length="5" fullyQualifiedName="mName" identifier="mName" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="821" length="6">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="821" length="6" fullyQualifiedName="String" identifier="String"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};" startPosition="883" length="45">
                <fragments lexicalForm="parmTypes = {(Class) e.get(&quot;class&quot;)}" startPosition="891" length="36">
                  <initializer xsi:type="JavaAST:ArrayInitializer" lexicalForm="{(Class) e.get(&quot;class&quot;)}" startPosition="903" length="24">
                    <expressions xsi:type="JavaAST:CastExpression" lexicalForm="(Class) e.get(&quot;class&quot;)" startPosition="904" length="22">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;class&quot;)" startPosition="912" length="14">
                        <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="918" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="912" length="1" fullyQualifiedName="e" identifier="e"/>
                        <name lexicalForm="get" startPosition="914" length="3" fullyQualifiedName="get" identifier="get"/>
                      </expression>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="Class" startPosition="905" length="5">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="905" length="5" fullyQualifiedName="Class" identifier="Class"/>
                      </type>
                    </expressions>
                  </initializer>
                  <name lexicalForm="parmTypes" startPosition="891" length="9" fullyQualifiedName="parmTypes" identifier="parmTypes" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:ArrayType" lexicalForm="Class[]" startPosition="883" length="7" dimensions="1">
                  <componentType xsi:type="JavaAST:SimpleType" lexicalForm="Class" startPosition="883" length="5">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="883" length="5" fullyQualifiedName="Class" identifier="Class"/>
                  </componentType>
                </type>
              </statements>
              <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="932" length="310">
                <catchClauses lexicalForm="catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;}" startPosition="1095" length="58">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;}" startPosition="1129" length="24"/>
                  <exception lexicalForm="NoSuchMethodException nex" startPosition="1102" length="25">
                    <name lexicalForm="nex" startPosition="1124" length="3" fullyQualifiedName="nex" identifier="nex" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="NoSuchMethodException" startPosition="1102" length="21">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="NoSuchMethodException" startPosition="1102" length="21" fullyQualifiedName="NoSuchMethodException" identifier="NoSuchMethodException"/>
                    </type>
                  </exception>
                </catchClauses>
                <catchClauses lexicalForm="catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="1154" length="88">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="1175" length="67">
                    <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="ex.printStackTrace();" startPosition="1216" length="21">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ex.printStackTrace()" startPosition="1216" length="20">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="ex" startPosition="1216" length="2" fullyQualifiedName="ex" identifier="ex"/>
                        <name lexicalForm="printStackTrace" startPosition="1219" length="15" fullyQualifiedName="printStackTrace" identifier="printStackTrace"/>
                      </expression>
                    </statements>
                  </body>
                  <exception lexicalForm="Exception ex" startPosition="1161" length="12">
                    <name lexicalForm="ex" startPosition="1171" length="2" fullyQualifiedName="ex" identifier="ex" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="1161" length="9">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="1161" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                    </type>
                  </exception>
                </catchClauses>
                <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;}" startPosition="936" length="158">
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);" startPosition="942" length="83">
                    <fragments lexicalForm="m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes)" startPosition="967" length="57">
                      <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes)" startPosition="971" length="53">
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="mName" startPosition="1007" length="5" fullyQualifiedName="mName" identifier="mName"/>
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="parmTypes" startPosition="1014" length="9" fullyQualifiedName="parmTypes" identifier="parmTypes"/>
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getClass()" startPosition="971" length="10">
                          <name lexicalForm="getClass" startPosition="971" length="8" fullyQualifiedName="getClass" identifier="getClass"/>
                        </expression>
                        <name lexicalForm="getDeclaredMethod" startPosition="982" length="17" fullyQualifiedName="getDeclaredMethod" identifier="getDeclaredMethod"/>
                      </initializer>
                      <name lexicalForm="m" startPosition="967" length="1" fullyQualifiedName="m" identifier="m" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.reflect.Method" startPosition="942" length="24">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.reflect.Method" startPosition="942" length="24" fullyQualifiedName="java.lang.reflect.Method">
                        <name lexicalForm="Method" startPosition="960" length="6" fullyQualifiedName="Method" identifier="Method"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.reflect" startPosition="942" length="17" fullyQualifiedName="java.lang.reflect">
                          <name lexicalForm="reflect" startPosition="952" length="7" fullyQualifiedName="reflect" identifier="reflect"/>
                          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="942" length="9" fullyQualifiedName="java.lang">
                            <name lexicalForm="lang" startPosition="947" length="4" fullyQualifiedName="lang" identifier="lang"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="942" length="4" fullyQualifiedName="java" identifier="java"/>
                          </qualifier>
                        </qualifier>
                      </name>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Object[] args = {e.get(&quot;value&quot;)};" startPosition="1030" length="33">
                    <fragments lexicalForm="args = {e.get(&quot;value&quot;)}" startPosition="1039" length="23">
                      <initializer xsi:type="JavaAST:ArrayInitializer" lexicalForm="{e.get(&quot;value&quot;)}" startPosition="1046" length="16">
                        <expressions xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;value&quot;)" startPosition="1047" length="14">
                          <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="1053" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1047" length="1" fullyQualifiedName="e" identifier="e"/>
                          <name lexicalForm="get" startPosition="1049" length="3" fullyQualifiedName="get" identifier="get"/>
                        </expressions>
                      </initializer>
                      <name lexicalForm="args" startPosition="1039" length="4" fullyQualifiedName="args" identifier="args" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:ArrayType" lexicalForm="Object[]" startPosition="1030" length="8" dimensions="1">
                      <componentType xsi:type="JavaAST:SimpleType" lexicalForm="Object" startPosition="1030" length="6">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="Object" startPosition="1030" length="6" fullyQualifiedName="Object" identifier="Object"/>
                      </componentType>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="m.invoke(this, args);" startPosition="1068" length="21">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="m.invoke(this, args)" startPosition="1068" length="20">
                      <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1077" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="args" startPosition="1083" length="4" fullyQualifiedName="args" identifier="args"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="m" startPosition="1068" length="1" fullyQualifiedName="m" identifier="m"/>
                      <name lexicalForm="invoke" startPosition="1070" length="6" fullyQualifiedName="invoke" identifier="invoke"/>
                    </expression>
                  </statements>
                </body>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="update" startPosition="665" length="6" fullyQualifiedName="update" identifier="update" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="660" length="4" code="void"/>
        <parameters lexicalForm="java.util.Observable o" startPosition="672" length="22">
          <name lexicalForm="o" startPosition="693" length="1" fullyQualifiedName="o" identifier="o" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observable" startPosition="672" length="20">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observable" startPosition="672" length="20" fullyQualifiedName="java.util.Observable">
              <name lexicalForm="Observable" startPosition="682" length="10" fullyQualifiedName="Observable" identifier="Observable"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="672" length="9" fullyQualifiedName="java.util">
                <name lexicalForm="util" startPosition="677" length="4" fullyQualifiedName="util" identifier="util"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="672" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="java.lang.Object arg" startPosition="696" length="20">
          <name lexicalForm="arg" startPosition="713" length="3" fullyQualifiedName="arg" identifier="arg" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="696" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="696" length="16" fullyQualifiedName="java.lang.Object">
              <name lexicalForm="Object" startPosition="706" length="6" fullyQualifiedName="Object" identifier="Object"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="696" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="701" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="696" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void report(java.lang.Exception e) {&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Object n = ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (n instanceof ExceptionReporter) {&#xA;&#x9;&#x9;&#x9;&#x9;((ExceptionReporter) n).report(e);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;System.err.println(e.getMessage());&#xA;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;}" startPosition="1252" length="314">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1252" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Object n = ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (n instanceof ExceptionReporter) {&#xA;&#x9;&#x9;&#x9;&#x9;((ExceptionReporter) n).report(e);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;System.err.println(e.getMessage());&#xA;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;}" startPosition="1294" length="272">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Object n = ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (n instanceof ExceptionReporter) {&#xA;&#x9;&#x9;&#x9;&#x9;((ExceptionReporter) n).report(e);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1298" length="204">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;Object n = ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (n instanceof ExceptionReporter) {&#xA;&#x9;&#x9;&#x9;&#x9;((ExceptionReporter) n).report(e);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1368" length="134">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Object n = ns.nextElement();" startPosition="1373" length="28">
                <fragments lexicalForm="n = ns.nextElement()" startPosition="1380" length="20">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="ns.nextElement()" startPosition="1384" length="16">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="ns" startPosition="1384" length="2" fullyQualifiedName="ns" identifier="ns"/>
                    <name lexicalForm="nextElement" startPosition="1387" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                  </initializer>
                  <name lexicalForm="n" startPosition="1380" length="1" fullyQualifiedName="n" identifier="n" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Object" startPosition="1373" length="6">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Object" startPosition="1373" length="6" fullyQualifiedName="Object" identifier="Object"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (n instanceof ExceptionReporter) {&#xA;&#x9;&#x9;&#x9;&#x9;((ExceptionReporter) n).report(e);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="1405" length="93">
                <expression xsi:type="JavaAST:InstanceofExpression" lexicalForm="n instanceof ExceptionReporter" startPosition="1409" length="30">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="n" startPosition="1409" length="1" fullyQualifiedName="n" identifier="n"/>
                  <rightOperand xsi:type="JavaAST:SimpleType" lexicalForm="ExceptionReporter" startPosition="1422" length="17" resolvedType="//@compilationUnits.1/@types.0">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="ExceptionReporter" startPosition="1422" length="17" resolvedType="//@compilationUnits.1/@types.0" fullyQualifiedName="ExceptionReporter" identifier="ExceptionReporter"/>
                  </rightOperand>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;((ExceptionReporter) n).report(e);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="1441" length="57">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="((ExceptionReporter) n).report(e);" startPosition="1447" length="34">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="((ExceptionReporter) n).report(e)" startPosition="1447" length="33">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1478" length="1" fullyQualifiedName="e" identifier="e"/>
                      <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((ExceptionReporter) n)" startPosition="1447" length="23" resolvedType="//@compilationUnits.1/@types.0">
                        <expression xsi:type="JavaAST:CastExpression" lexicalForm="(ExceptionReporter) n" startPosition="1448" length="21" resolvedType="//@compilationUnits.1/@types.0">
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="n" startPosition="1468" length="1" fullyQualifiedName="n" identifier="n"/>
                          <type xsi:type="JavaAST:SimpleType" lexicalForm="ExceptionReporter" startPosition="1449" length="17" resolvedType="//@compilationUnits.1/@types.0">
                            <name xsi:type="JavaAST:SimpleName" lexicalForm="ExceptionReporter" startPosition="1449" length="17" resolvedType="//@compilationUnits.1/@types.0" fullyQualifiedName="ExceptionReporter" identifier="ExceptionReporter"/>
                          </type>
                        </expression>
                      </expression>
                      <name lexicalForm="report" startPosition="1471" length="6" fullyQualifiedName="report" identifier="report"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return;" startPosition="1486" length="7"/>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ns.hasMoreElements()" startPosition="1345" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ns" startPosition="1345" length="2" fullyQualifiedName="ns" identifier="ns"/>
              <name lexicalForm="hasMoreElements" startPosition="1348" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ns = getNetworks()" startPosition="1303" length="40">
              <fragments lexicalForm="ns = getNetworks()" startPosition="1325" length="18">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getNetworks()" startPosition="1330" length="13">
                  <name lexicalForm="getNetworks" startPosition="1330" length="11" fullyQualifiedName="getNetworks" identifier="getNetworks"/>
                </initializer>
                <name lexicalForm="ns" startPosition="1325" length="2" fullyQualifiedName="ns" identifier="ns" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="1303" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="1303" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="1313" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1303" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="1308" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1303" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.err.println(e.getMessage());" startPosition="1505" length="35">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.err.println(e.getMessage())" startPosition="1505" length="34">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="e.getMessage()" startPosition="1524" length="14">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1524" length="1" fullyQualifiedName="e" identifier="e"/>
                <name lexicalForm="getMessage" startPosition="1526" length="10" fullyQualifiedName="getMessage" identifier="getMessage"/>
              </arguments>
              <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.err" startPosition="1505" length="10" fullyQualifiedName="System.err">
                <name lexicalForm="err" startPosition="1512" length="3" fullyQualifiedName="err" identifier="err"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="1505" length="6" fullyQualifiedName="System" identifier="System"/>
              </expression>
              <name lexicalForm="println" startPosition="1516" length="7" fullyQualifiedName="println" identifier="println"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.printStackTrace();" startPosition="1543" length="20">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.printStackTrace()" startPosition="1543" length="19">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1543" length="1" fullyQualifiedName="e" identifier="e"/>
              <name lexicalForm="printStackTrace" startPosition="1545" length="15" fullyQualifiedName="printStackTrace" identifier="printStackTrace"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="report" startPosition="1264" length="6" fullyQualifiedName="report" identifier="report" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1259" length="4" code="void"/>
        <parameters lexicalForm="java.lang.Exception e" startPosition="1271" length="21">
          <name lexicalForm="e" startPosition="1291" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Exception" startPosition="1271" length="19">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Exception" startPosition="1271" length="19" fullyQualifiedName="java.lang.Exception">
              <name lexicalForm="Exception" startPosition="1281" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1271" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="1276" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1271" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void init() {&#xA;&#x9;&#x9;getShell().setLayout(new org.eclipse.swt.layout.FormLayout());&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;// ViewFactory&#xA;&#x9;&#x9;&#x9;setViewFactory(ViewFactory.getDefault());&#xA;&#x9;&#x9;&#x9;// Network&#xA;&#x9;&#x9;&#x9;Network.discoverNetworks();&#xA;&#x9;&#x9;&#x9;// Create and register edit/view&#xA;&#x9;&#x9;&#x9;setContactListEdit(new ContactListEdit(contactList));&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1569" length="351">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1569" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;getShell().setLayout(new org.eclipse.swt.layout.FormLayout());&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;// ViewFactory&#xA;&#x9;&#x9;&#x9;setViewFactory(ViewFactory.getDefault());&#xA;&#x9;&#x9;&#x9;// Network&#xA;&#x9;&#x9;&#x9;Network.discoverNetworks();&#xA;&#x9;&#x9;&#x9;// Create and register edit/view&#xA;&#x9;&#x9;&#x9;setContactListEdit(new ContactListEdit(contactList));&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1588" length="332">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getShell().setLayout(new org.eclipse.swt.layout.FormLayout());" startPosition="1592" length="62">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().setLayout(new org.eclipse.swt.layout.FormLayout())" startPosition="1592" length="61">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new org.eclipse.swt.layout.FormLayout()" startPosition="1613" length="39">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.layout.FormLayout" startPosition="1617" length="33">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.layout.FormLayout" startPosition="1617" length="33" fullyQualifiedName="org.eclipse.swt.layout.FormLayout">
                    <name lexicalForm="FormLayout" startPosition="1640" length="10" fullyQualifiedName="FormLayout" identifier="FormLayout"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.layout" startPosition="1617" length="22" fullyQualifiedName="org.eclipse.swt.layout">
                      <name lexicalForm="layout" startPosition="1633" length="6" fullyQualifiedName="layout" identifier="layout"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="1617" length="15" fullyQualifiedName="org.eclipse.swt">
                        <name lexicalForm="swt" startPosition="1629" length="3" fullyQualifiedName="swt" identifier="swt"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="1617" length="11" fullyQualifiedName="org.eclipse">
                          <name lexicalForm="eclipse" startPosition="1621" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="1617" length="3" fullyQualifiedName="org" identifier="org"/>
                        </qualifier>
                      </qualifier>
                    </qualifier>
                  </name>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="1592" length="10">
                <name lexicalForm="getShell" startPosition="1592" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
              </expression>
              <name lexicalForm="setLayout" startPosition="1603" length="9" fullyQualifiedName="setLayout" identifier="setLayout"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;// ViewFactory&#xA;&#x9;&#x9;&#x9;setViewFactory(ViewFactory.getDefault());&#xA;&#x9;&#x9;&#x9;// Network&#xA;&#x9;&#x9;&#x9;Network.discoverNetworks();&#xA;&#x9;&#x9;&#x9;// Create and register edit/view&#xA;&#x9;&#x9;&#x9;setContactListEdit(new ContactListEdit(contactList));&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;}" startPosition="1657" length="260">
            <catchClauses lexicalForm="catch (Exception e) {&#xA;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;}" startPosition="1868" length="49">
              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;}" startPosition="1888" length="29">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.printStackTrace();" startPosition="1893" length="20">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.printStackTrace()" startPosition="1893" length="19">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1893" length="1" fullyQualifiedName="e" identifier="e"/>
                    <name lexicalForm="printStackTrace" startPosition="1895" length="15" fullyQualifiedName="printStackTrace" identifier="printStackTrace"/>
                  </expression>
                </statements>
              </body>
              <exception lexicalForm="Exception e" startPosition="1875" length="11">
                <name lexicalForm="e" startPosition="1885" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="1875" length="9">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="1875" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                </type>
              </exception>
            </catchClauses>
            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;// ViewFactory&#xA;&#x9;&#x9;&#x9;setViewFactory(ViewFactory.getDefault());&#xA;&#x9;&#x9;&#x9;// Network&#xA;&#x9;&#x9;&#x9;Network.discoverNetworks();&#xA;&#x9;&#x9;&#x9;// Create and register edit/view&#xA;&#x9;&#x9;&#x9;setContactListEdit(new ContactListEdit(contactList));&#xA;&#x9;&#x9;}" startPosition="1661" length="206">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setViewFactory(ViewFactory.getDefault());" startPosition="1684" length="41">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setViewFactory(ViewFactory.getDefault())" startPosition="1684" length="40">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="ViewFactory.getDefault()" startPosition="1699" length="24" resolvedType="//@compilationUnits.16/@types.0">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="ViewFactory" startPosition="1699" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="ViewFactory" identifier="ViewFactory"/>
                    <name lexicalForm="getDefault" startPosition="1711" length="10" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="getDefault" identifier="getDefault"/>
                  </arguments>
                  <name lexicalForm="setViewFactory" startPosition="1684" length="14" fullyQualifiedName="setViewFactory" identifier="setViewFactory"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="Network.discoverNetworks();" startPosition="1743" length="27">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="Network.discoverNetworks()" startPosition="1743" length="26">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="Network" startPosition="1743" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
                  <name lexicalForm="discoverNetworks" startPosition="1751" length="16" fullyQualifiedName="discoverNetworks" identifier="discoverNetworks"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setContactListEdit(new ContactListEdit(contactList));" startPosition="1810" length="53">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setContactListEdit(new ContactListEdit(contactList))" startPosition="1810" length="52">
                  <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new ContactListEdit(contactList)" startPosition="1829" length="32" resolvedType="//@compilationUnits.5/@types.0">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contactList" startPosition="1849" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="contactList" identifier="contactList"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="ContactListEdit" startPosition="1833" length="15" resolvedType="//@compilationUnits.5/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="ContactListEdit" startPosition="1833" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="ContactListEdit" identifier="ContactListEdit"/>
                    </type>
                  </arguments>
                  <name lexicalForm="setContactListEdit" startPosition="1810" length="18" fullyQualifiedName="setContactListEdit" identifier="setContactListEdit"/>
                </expression>
              </statements>
            </body>
          </statements>
        </body>
        <name lexicalForm="init" startPosition="1581" length="4" fullyQualifiedName="init" identifier="init" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1576" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void start() {&#xA;&#x9;&#x9;boolean hasID = false;&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;Identity id = getContactList().getIdentity(n);&#xA;&#x9;&#x9;&#x9;if (id != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;hasID = true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (!hasID) {&#xA;&#x9;&#x9;&#x9;getContactListEdit().onContactListAdd();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1923" length="375">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1923" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;boolean hasID = false;&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;Identity id = getContactList().getIdentity(n);&#xA;&#x9;&#x9;&#x9;if (id != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;hasID = true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (!hasID) {&#xA;&#x9;&#x9;&#x9;getContactListEdit().onContactListAdd();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1943" length="355">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="boolean hasID = false;" startPosition="1947" length="22">
            <fragments lexicalForm="hasID = false" startPosition="1955" length="13">
              <initializer xsi:type="JavaAST:BooleanLiteral" lexicalForm="false" startPosition="1963" length="5"/>
              <name lexicalForm="hasID" startPosition="1955" length="5" fullyQualifiedName="hasID" identifier="hasID" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="1947" length="7" code="boolean"/>
          </statements>
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;Identity id = getContactList().getIdentity(n);&#xA;&#x9;&#x9;&#x9;if (id != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;hasID = true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1972" length="259">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;Identity id = getContactList().getIdentity(n);&#xA;&#x9;&#x9;&#x9;if (id != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;hasID = true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2042" length="189">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Network n = (Network) ns.nextElement();" startPosition="2047" length="39">
                <fragments lexicalForm="n = (Network) ns.nextElement()" startPosition="2055" length="30">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(Network) ns.nextElement()" startPosition="2059" length="26" resolvedType="//@compilationUnits.12/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ns.nextElement()" startPosition="2069" length="16">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="ns" startPosition="2069" length="2" fullyQualifiedName="ns" identifier="ns"/>
                      <name lexicalForm="nextElement" startPosition="2072" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                    </expression>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Network" startPosition="2060" length="7" resolvedType="//@compilationUnits.12/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Network" startPosition="2060" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
                    </type>
                  </initializer>
                  <name lexicalForm="n" startPosition="2055" length="1" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="n" identifier="n" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Network" startPosition="2047" length="7" resolvedType="//@compilationUnits.12/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Network" startPosition="2047" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Identity id = getContactList().getIdentity(n);" startPosition="2090" length="46">
                <fragments lexicalForm="id = getContactList().getIdentity(n)" startPosition="2099" length="36">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactList().getIdentity(n)" startPosition="2104" length="31" resolvedType="//@compilationUnits.11/@types.0">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="n" startPosition="2133" length="1" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="n" identifier="n"/>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactList()" startPosition="2104" length="16" resolvedType="//@compilationUnits.8/@types.0">
                      <name lexicalForm="getContactList" startPosition="2104" length="14" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getContactList" identifier="getContactList"/>
                    </expression>
                    <name lexicalForm="getIdentity" startPosition="2121" length="11" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="getIdentity" identifier="getIdentity"/>
                  </initializer>
                  <name lexicalForm="id" startPosition="2099" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Identity" startPosition="2090" length="8" resolvedType="//@compilationUnits.11/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Identity" startPosition="2090" length="8" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="Identity" identifier="Identity"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (id != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;hasID = true;&#xA;&#x9;&#x9;&#x9;}" startPosition="2140" length="87">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="id != null" startPosition="2144" length="10" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="2144" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="2150" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;n.login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;hasID = true;&#xA;&#x9;&#x9;&#x9;}" startPosition="2156" length="71">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="n.login(id.getUserId(), id.getPassword());" startPosition="2162" length="42">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="n.login(id.getUserId(), id.getPassword())" startPosition="2162" length="41">
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="id.getUserId()" startPosition="2170" length="14">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="2170" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                        <name lexicalForm="getUserId" startPosition="2173" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                      </arguments>
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="id.getPassword()" startPosition="2186" length="16">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="2186" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                        <name lexicalForm="getPassword" startPosition="2189" length="11" fullyQualifiedName="getPassword" identifier="getPassword"/>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="n" startPosition="2162" length="1" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="n" identifier="n"/>
                      <name lexicalForm="login" startPosition="2164" length="5" fullyQualifiedName="login" identifier="login"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="hasID = true;" startPosition="2209" length="13">
                    <expression xsi:type="JavaAST:Assignment" lexicalForm="hasID = true" startPosition="2209" length="12" operator="=">
                      <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="hasID" startPosition="2209" length="5" fullyQualifiedName="hasID" identifier="hasID"/>
                      <rightHandSide xsi:type="JavaAST:BooleanLiteral" lexicalForm="true" startPosition="2217" length="4" booleanValue="true"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ns.hasMoreElements()" startPosition="2019" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ns" startPosition="2019" length="2" fullyQualifiedName="ns" identifier="ns"/>
              <name lexicalForm="hasMoreElements" startPosition="2022" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ns = getNetworks()" startPosition="1977" length="40">
              <fragments lexicalForm="ns = getNetworks()" startPosition="1999" length="18">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getNetworks()" startPosition="2004" length="13">
                  <name lexicalForm="getNetworks" startPosition="2004" length="11" fullyQualifiedName="getNetworks" identifier="getNetworks"/>
                </initializer>
                <name lexicalForm="ns" startPosition="1999" length="2" fullyQualifiedName="ns" identifier="ns" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="1977" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="1977" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="1987" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1977" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="1982" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1977" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!hasID) {&#xA;&#x9;&#x9;&#x9;getContactListEdit().onContactListAdd();&#xA;&#x9;&#x9;}" startPosition="2234" length="61">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!hasID" startPosition="2238" length="6" operator="!">
              <operand xsi:type="JavaAST:SimpleName" lexicalForm="hasID" startPosition="2239" length="5" fullyQualifiedName="hasID" identifier="hasID"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;getContactListEdit().onContactListAdd();&#xA;&#x9;&#x9;}" startPosition="2246" length="49">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getContactListEdit().onContactListAdd();" startPosition="2251" length="40">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactListEdit().onContactListAdd()" startPosition="2251" length="39">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactListEdit()" startPosition="2251" length="20" resolvedType="//@compilationUnits.5/@types.0">
                    <name lexicalForm="getContactListEdit" startPosition="2251" length="18" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="getContactListEdit" identifier="getContactListEdit"/>
                  </expression>
                  <name lexicalForm="onContactListAdd" startPosition="2272" length="16" fullyQualifiedName="onContactListAdd" identifier="onContactListAdd"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="start" startPosition="1935" length="5" fullyQualifiedName="start" identifier="start" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1930" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void stop() {&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (getContactList().getIdentity(n) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.logout();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="2301" length="215">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2301" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (getContactList().getIdentity(n) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.logout();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="2320" length="196">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ns = getNetworks(); ns.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (getContactList().getIdentity(n) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.logout();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2324" length="189">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;Network n = (Network) ns.nextElement();&#xA;&#x9;&#x9;&#x9;if (getContactList().getIdentity(n) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.logout();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2394" length="119">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Network n = (Network) ns.nextElement();" startPosition="2399" length="39">
                <fragments lexicalForm="n = (Network) ns.nextElement()" startPosition="2407" length="30">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(Network) ns.nextElement()" startPosition="2411" length="26" resolvedType="//@compilationUnits.12/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ns.nextElement()" startPosition="2421" length="16">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="ns" startPosition="2421" length="2" fullyQualifiedName="ns" identifier="ns"/>
                      <name lexicalForm="nextElement" startPosition="2424" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                    </expression>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Network" startPosition="2412" length="7" resolvedType="//@compilationUnits.12/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Network" startPosition="2412" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
                    </type>
                  </initializer>
                  <name lexicalForm="n" startPosition="2407" length="1" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="n" identifier="n" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Network" startPosition="2399" length="7" resolvedType="//@compilationUnits.12/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Network" startPosition="2399" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (getContactList().getIdentity(n) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;n.logout();&#xA;&#x9;&#x9;&#x9;}" startPosition="2442" length="67">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="getContactList().getIdentity(n) != null" startPosition="2446" length="39" operator="!=">
                  <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactList().getIdentity(n)" startPosition="2446" length="31" resolvedType="//@compilationUnits.11/@types.0">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="n" startPosition="2475" length="1" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="n" identifier="n"/>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactList()" startPosition="2446" length="16" resolvedType="//@compilationUnits.8/@types.0">
                      <name lexicalForm="getContactList" startPosition="2446" length="14" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getContactList" identifier="getContactList"/>
                    </expression>
                    <name lexicalForm="getIdentity" startPosition="2463" length="11" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="getIdentity" identifier="getIdentity"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="2481" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;n.logout();&#xA;&#x9;&#x9;&#x9;}" startPosition="2487" length="22">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="n.logout();" startPosition="2493" length="11">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="n.logout()" startPosition="2493" length="10">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="n" startPosition="2493" length="1" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="n" identifier="n"/>
                      <name lexicalForm="logout" startPosition="2495" length="6" fullyQualifiedName="logout" identifier="logout"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ns.hasMoreElements()" startPosition="2371" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ns" startPosition="2371" length="2" fullyQualifiedName="ns" identifier="ns"/>
              <name lexicalForm="hasMoreElements" startPosition="2374" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ns = getNetworks()" startPosition="2329" length="40">
              <fragments lexicalForm="ns = getNetworks()" startPosition="2351" length="18">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getNetworks()" startPosition="2356" length="13">
                  <name lexicalForm="getNetworks" startPosition="2356" length="11" fullyQualifiedName="getNetworks" identifier="getNetworks"/>
                </initializer>
                <name lexicalForm="ns" startPosition="2351" length="2" fullyQualifiedName="ns" identifier="ns" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="2329" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="2329" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="2339" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="2329" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="2334" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="2329" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
        </body>
        <name lexicalForm="stop" startPosition="2313" length="4" fullyQualifiedName="stop" identifier="stop" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2308" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onRecvContactChange(im.model.Contact c) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContactList().getContacts(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact listed = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (listed.getUserId().equals(c.getUserId())) {&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getStatus() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setStatus(c.getStatus());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setName(c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getContactList().addContact(c);&#xA;&#x9;}" startPosition="2519" length="454">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2519" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContactList().getContacts(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact listed = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (listed.getUserId().equals(c.getUserId())) {&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getStatus() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setStatus(c.getStatus());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setName(c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getContactList().addContact(c);&#xA;&#x9;}" startPosition="2571" length="402">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration cs = getContactList().getContacts(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact listed = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (listed.getUserId().equals(c.getUserId())) {&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getStatus() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setStatus(c.getStatus());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setName(c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2575" length="361">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;Contact listed = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (listed.getUserId().equals(c.getUserId())) {&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getStatus() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setStatus(c.getStatus());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setName(c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2667" length="269">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Contact listed = (Contact) cs.nextElement();" startPosition="2672" length="44">
                <fragments lexicalForm="listed = (Contact) cs.nextElement()" startPosition="2680" length="35">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(Contact) cs.nextElement()" startPosition="2689" length="26" resolvedType="//@compilationUnits.7/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs.nextElement()" startPosition="2699" length="16">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="2699" length="2" fullyQualifiedName="cs" identifier="cs"/>
                      <name lexicalForm="nextElement" startPosition="2702" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                    </expression>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Contact" startPosition="2690" length="7" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Contact" startPosition="2690" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                    </type>
                  </initializer>
                  <name lexicalForm="listed" startPosition="2680" length="6" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="listed" identifier="listed" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Contact" startPosition="2672" length="7" resolvedType="//@compilationUnits.7/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Contact" startPosition="2672" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (listed.getUserId().equals(c.getUserId())) {&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getStatus() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setStatus(c.getStatus());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setName(c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="2720" length="212">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="listed.getUserId().equals(c.getUserId())" startPosition="2724" length="40">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getUserId()" startPosition="2750" length="13">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2750" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                    <name lexicalForm="getUserId" startPosition="2752" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                  </arguments>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="listed.getUserId()" startPosition="2724" length="18">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="listed" startPosition="2724" length="6" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="listed" identifier="listed"/>
                    <name lexicalForm="getUserId" startPosition="2731" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                  </expression>
                  <name lexicalForm="equals" startPosition="2743" length="6" fullyQualifiedName="equals" identifier="equals"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getStatus() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setStatus(c.getStatus());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setName(c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="2766" length="166">
                  <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (c.getStatus() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setStatus(c.getStatus());&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2772" length="72">
                    <expression xsi:type="JavaAST:InfixExpression" lexicalForm="c.getStatus() != null" startPosition="2776" length="21" operator="!=">
                      <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getStatus()" startPosition="2776" length="13">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2776" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                        <name lexicalForm="getStatus" startPosition="2778" length="9" fullyQualifiedName="getStatus" identifier="getStatus"/>
                      </leftOperand>
                      <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="2793" length="4"/>
                    </expression>
                    <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setStatus(c.getStatus());&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2799" length="45">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="listed.setStatus(c.getStatus());" startPosition="2806" length="32">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="listed.setStatus(c.getStatus())" startPosition="2806" length="31">
                          <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getStatus()" startPosition="2823" length="13">
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2823" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                            <name lexicalForm="getStatus" startPosition="2825" length="9" fullyQualifiedName="getStatus" identifier="getStatus"/>
                          </arguments>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="listed" startPosition="2806" length="6" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="listed" identifier="listed"/>
                          <name lexicalForm="setStatus" startPosition="2813" length="9" fullyQualifiedName="setStatus" identifier="setStatus"/>
                        </expression>
                      </statements>
                    </thenStatement>
                  </statements>
                  <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setName(c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2849" length="66">
                    <expression xsi:type="JavaAST:InfixExpression" lexicalForm="c.getName() != null" startPosition="2853" length="19" operator="!=">
                      <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getName()" startPosition="2853" length="11">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2853" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                        <name lexicalForm="getName" startPosition="2855" length="7" fullyQualifiedName="getName" identifier="getName"/>
                      </leftOperand>
                      <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="2868" length="4"/>
                    </expression>
                    <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;listed.setName(c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2874" length="41">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="listed.setName(c.getName());" startPosition="2881" length="28">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="listed.setName(c.getName())" startPosition="2881" length="27">
                          <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getName()" startPosition="2896" length="11">
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2896" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                            <name lexicalForm="getName" startPosition="2898" length="7" fullyQualifiedName="getName" identifier="getName"/>
                          </arguments>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="listed" startPosition="2881" length="6" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="listed" identifier="listed"/>
                          <name lexicalForm="setName" startPosition="2888" length="7" fullyQualifiedName="setName" identifier="setName"/>
                        </expression>
                      </statements>
                    </thenStatement>
                  </statements>
                  <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return;" startPosition="2920" length="7"/>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements()" startPosition="2639" length="25">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="2639" length="2" fullyQualifiedName="cs" identifier="cs"/>
              <name lexicalForm="hasMoreElements" startPosition="2647" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration cs = getContactList().getContacts()" startPosition="2580" length="57">
              <fragments lexicalForm="cs = getContactList().getContacts()" startPosition="2602" length="35">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactList().getContacts()" startPosition="2607" length="30">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactList()" startPosition="2607" length="16" resolvedType="//@compilationUnits.8/@types.0">
                    <name lexicalForm="getContactList" startPosition="2607" length="14" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getContactList" identifier="getContactList"/>
                  </expression>
                  <name lexicalForm="getContacts" startPosition="2624" length="11" fullyQualifiedName="getContacts" identifier="getContacts"/>
                </initializer>
                <name lexicalForm="cs" startPosition="2602" length="2" fullyQualifiedName="cs" identifier="cs" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="2580" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="2580" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="2590" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="2580" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="2585" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="2580" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getContactList().addContact(c);" startPosition="2939" length="31">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactList().addContact(c)" startPosition="2939" length="30">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2967" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactList()" startPosition="2939" length="16" resolvedType="//@compilationUnits.8/@types.0">
                <name lexicalForm="getContactList" startPosition="2939" length="14" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getContactList" identifier="getContactList"/>
              </expression>
              <name lexicalForm="addContact" startPosition="2956" length="10" fullyQualifiedName="addContact" identifier="addContact"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onRecvContactChange" startPosition="2531" length="19" fullyQualifiedName="onRecvContactChange" identifier="onRecvContactChange" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2526" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact c" startPosition="2551" length="18">
          <name lexicalForm="c" startPosition="2568" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2551" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2551" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="2560" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2551" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="2554" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2551" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onRecvMsgChange(im.model.Message r) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Conversation c = (Conversation) cs.nextElement();&#xA;&#x9;&#x9;&#x9;String contact = c.getContact().getUserId();&#xA;&#x9;&#x9;&#x9;if (contact.equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;c.setMessage(r);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;Conversation conv = new Conversation();&#xA;&#x9;&#x9;new ConversationEdit(conv);&#xA;&#x9;&#x9;addConversation(conv);&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContactList().getContacts(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact c = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (c.getUserId().equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (conv.getContact() == null) {&#xA;&#x9;&#x9;&#x9;conv.setContact(new Contact());&#xA;&#x9;&#x9;&#x9;conv.getContact().setUserId(r.getSender());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;conv.setMessage(r);&#xA;&#x9;}" startPosition="2976" length="788">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2976" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Conversation c = (Conversation) cs.nextElement();&#xA;&#x9;&#x9;&#x9;String contact = c.getContact().getUserId();&#xA;&#x9;&#x9;&#x9;if (contact.equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;c.setMessage(r);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;Conversation conv = new Conversation();&#xA;&#x9;&#x9;new ConversationEdit(conv);&#xA;&#x9;&#x9;addConversation(conv);&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContactList().getContacts(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact c = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (c.getUserId().equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (conv.getContact() == null) {&#xA;&#x9;&#x9;&#x9;conv.setContact(new Contact());&#xA;&#x9;&#x9;&#x9;conv.getContact().setUserId(r.getSender());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;conv.setMessage(r);&#xA;&#x9;}" startPosition="3024" length="740">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration cs = getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Conversation c = (Conversation) cs.nextElement();&#xA;&#x9;&#x9;&#x9;String contact = c.getContact().getUserId();&#xA;&#x9;&#x9;&#x9;if (contact.equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;c.setMessage(r);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="3028" length="264">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;Conversation c = (Conversation) cs.nextElement();&#xA;&#x9;&#x9;&#x9;String contact = c.getContact().getUserId();&#xA;&#x9;&#x9;&#x9;if (contact.equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;c.setMessage(r);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="3108" length="184">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Conversation c = (Conversation) cs.nextElement();" startPosition="3113" length="49">
                <fragments lexicalForm="c = (Conversation) cs.nextElement()" startPosition="3126" length="35">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(Conversation) cs.nextElement()" startPosition="3130" length="31" resolvedType="//@compilationUnits.9/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs.nextElement()" startPosition="3145" length="16">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="3145" length="2" fullyQualifiedName="cs" identifier="cs"/>
                      <name lexicalForm="nextElement" startPosition="3148" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                    </expression>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Conversation" startPosition="3131" length="12" resolvedType="//@compilationUnits.9/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Conversation" startPosition="3131" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
                    </type>
                  </initializer>
                  <name lexicalForm="c" startPosition="3126" length="1" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Conversation" startPosition="3113" length="12" resolvedType="//@compilationUnits.9/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Conversation" startPosition="3113" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String contact = c.getContact().getUserId();" startPosition="3166" length="44">
                <fragments lexicalForm="contact = c.getContact().getUserId()" startPosition="3173" length="36">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getContact().getUserId()" startPosition="3183" length="26">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getContact()" startPosition="3183" length="14" resolvedType="//@compilationUnits.7/@types.0">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3183" length="1" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <name lexicalForm="getContact" startPosition="3185" length="10" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getContact" identifier="getContact"/>
                    </expression>
                    <name lexicalForm="getUserId" startPosition="3198" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                  </initializer>
                  <name lexicalForm="contact" startPosition="3173" length="7" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="3166" length="6">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="3166" length="6" fullyQualifiedName="String" identifier="String"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (contact.equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;c.setMessage(r);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="3214" length="74">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contact.equals(r.getSender())" startPosition="3218" length="29">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="r.getSender()" startPosition="3233" length="13">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="r" startPosition="3233" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="r" identifier="r"/>
                    <name lexicalForm="getSender" startPosition="3235" length="9" fullyQualifiedName="getSender" identifier="getSender"/>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="3218" length="7" fullyQualifiedName="contact" identifier="contact"/>
                  <name lexicalForm="equals" startPosition="3226" length="6" fullyQualifiedName="equals" identifier="equals"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;c.setMessage(r);&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="3249" length="39">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setMessage(r);" startPosition="3255" length="16">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setMessage(r)" startPosition="3255" length="15">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="r" startPosition="3268" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="r" identifier="r"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3255" length="1" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <name lexicalForm="setMessage" startPosition="3257" length="10" fullyQualifiedName="setMessage" identifier="setMessage"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return;" startPosition="3276" length="7"/>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements()" startPosition="3080" length="25">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="3080" length="2" fullyQualifiedName="cs" identifier="cs"/>
              <name lexicalForm="hasMoreElements" startPosition="3088" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration cs = getConversations()" startPosition="3033" length="45">
              <fragments lexicalForm="cs = getConversations()" startPosition="3055" length="23">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getConversations()" startPosition="3060" length="18">
                  <name lexicalForm="getConversations" startPosition="3060" length="16" fullyQualifiedName="getConversations" identifier="getConversations"/>
                </initializer>
                <name lexicalForm="cs" startPosition="3055" length="2" fullyQualifiedName="cs" identifier="cs" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="3033" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="3033" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="3043" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="3033" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="3038" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3033" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Conversation conv = new Conversation();" startPosition="3295" length="39">
            <fragments lexicalForm="conv = new Conversation()" startPosition="3308" length="25">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Conversation()" startPosition="3315" length="18" resolvedType="//@compilationUnits.9/@types.0">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Conversation" startPosition="3319" length="12" resolvedType="//@compilationUnits.9/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Conversation" startPosition="3319" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
                </type>
              </initializer>
              <name lexicalForm="conv" startPosition="3308" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="Conversation" startPosition="3295" length="12" resolvedType="//@compilationUnits.9/@types.0">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="Conversation" startPosition="3295" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="new ConversationEdit(conv);" startPosition="3337" length="27">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new ConversationEdit(conv)" startPosition="3337" length="26" resolvedType="//@compilationUnits.4/@types.0">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="3358" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="ConversationEdit" startPosition="3341" length="16" resolvedType="//@compilationUnits.4/@types.0">
                <name xsi:type="JavaAST:SimpleName" lexicalForm="ConversationEdit" startPosition="3341" length="16" resolvedType="//@compilationUnits.4/@types.0" fullyQualifiedName="ConversationEdit" identifier="ConversationEdit"/>
              </type>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="addConversation(conv);" startPosition="3367" length="22">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="addConversation(conv)" startPosition="3367" length="21">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="3383" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
              <name lexicalForm="addConversation" startPosition="3367" length="15" fullyQualifiedName="addConversation" identifier="addConversation"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration cs = getContactList().getContacts(); cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact c = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (c.getUserId().equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="3392" length="226">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;Contact c = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (c.getUserId().equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="3484" length="134">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Contact c = (Contact) cs.nextElement();" startPosition="3489" length="39">
                <fragments lexicalForm="c = (Contact) cs.nextElement()" startPosition="3497" length="30">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(Contact) cs.nextElement()" startPosition="3501" length="26" resolvedType="//@compilationUnits.7/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs.nextElement()" startPosition="3511" length="16">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="3511" length="2" fullyQualifiedName="cs" identifier="cs"/>
                      <name lexicalForm="nextElement" startPosition="3514" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                    </expression>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Contact" startPosition="3502" length="7" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Contact" startPosition="3502" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                    </type>
                  </initializer>
                  <name lexicalForm="c" startPosition="3497" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Contact" startPosition="3489" length="7" resolvedType="//@compilationUnits.7/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Contact" startPosition="3489" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (c.getUserId().equals(r.getSender())) {&#xA;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;}" startPosition="3532" length="82">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getUserId().equals(r.getSender())" startPosition="3536" length="35">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="r.getSender()" startPosition="3557" length="13">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="r" startPosition="3557" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="r" identifier="r"/>
                    <name lexicalForm="getSender" startPosition="3559" length="9" fullyQualifiedName="getSender" identifier="getSender"/>
                  </arguments>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getUserId()" startPosition="3536" length="13">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3536" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                    <name lexicalForm="getUserId" startPosition="3538" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                  </expression>
                  <name lexicalForm="equals" startPosition="3550" length="6" fullyQualifiedName="equals" identifier="equals"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;}" startPosition="3573" length="41">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="conv.setContact(c);" startPosition="3579" length="19">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="conv.setContact(c)" startPosition="3579" length="18">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3595" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="3579" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
                      <name lexicalForm="setContact" startPosition="3584" length="10" fullyQualifiedName="setContact" identifier="setContact"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:BreakStatement" lexicalForm="break;" startPosition="3603" length="6"/>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements()" startPosition="3456" length="25">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="3456" length="2" fullyQualifiedName="cs" identifier="cs"/>
              <name lexicalForm="hasMoreElements" startPosition="3464" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration cs = getContactList().getContacts()" startPosition="3397" length="57">
              <fragments lexicalForm="cs = getContactList().getContacts()" startPosition="3419" length="35">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactList().getContacts()" startPosition="3424" length="30">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactList()" startPosition="3424" length="16" resolvedType="//@compilationUnits.8/@types.0">
                    <name lexicalForm="getContactList" startPosition="3424" length="14" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getContactList" identifier="getContactList"/>
                  </expression>
                  <name lexicalForm="getContacts" startPosition="3441" length="11" fullyQualifiedName="getContacts" identifier="getContacts"/>
                </initializer>
                <name lexicalForm="cs" startPosition="3419" length="2" fullyQualifiedName="cs" identifier="cs" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="3397" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="3397" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="3407" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="3397" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="3402" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3397" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (conv.getContact() == null) {&#xA;&#x9;&#x9;&#x9;conv.setContact(new Contact());&#xA;&#x9;&#x9;&#x9;conv.getContact().setUserId(r.getSender());&#xA;&#x9;&#x9;}" startPosition="3621" length="118">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="conv.getContact() == null" startPosition="3625" length="25" operator="==">
              <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="conv.getContact()" startPosition="3625" length="17" resolvedType="//@compilationUnits.7/@types.0">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="3625" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
                <name lexicalForm="getContact" startPosition="3630" length="10" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getContact" identifier="getContact"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="3646" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;conv.setContact(new Contact());&#xA;&#x9;&#x9;&#x9;conv.getContact().setUserId(r.getSender());&#xA;&#x9;&#x9;}" startPosition="3652" length="87">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="conv.setContact(new Contact());" startPosition="3657" length="31">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="conv.setContact(new Contact())" startPosition="3657" length="30">
                  <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Contact()" startPosition="3673" length="13" resolvedType="//@compilationUnits.7/@types.0">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Contact" startPosition="3677" length="7" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Contact" startPosition="3677" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="3657" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
                  <name lexicalForm="setContact" startPosition="3662" length="10" fullyQualifiedName="setContact" identifier="setContact"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="conv.getContact().setUserId(r.getSender());" startPosition="3692" length="43">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="conv.getContact().setUserId(r.getSender())" startPosition="3692" length="42">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="r.getSender()" startPosition="3720" length="13">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="r" startPosition="3720" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="r" identifier="r"/>
                    <name lexicalForm="getSender" startPosition="3722" length="9" fullyQualifiedName="getSender" identifier="getSender"/>
                  </arguments>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="conv.getContact()" startPosition="3692" length="17" resolvedType="//@compilationUnits.7/@types.0">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="3692" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
                    <name lexicalForm="getContact" startPosition="3697" length="10" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getContact" identifier="getContact"/>
                  </expression>
                  <name lexicalForm="setUserId" startPosition="3710" length="9" fullyQualifiedName="setUserId" identifier="setUserId"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="conv.setMessage(r);" startPosition="3742" length="19">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="conv.setMessage(r)" startPosition="3742" length="18">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="r" startPosition="3758" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="r" identifier="r"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="3742" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
              <name lexicalForm="setMessage" startPosition="3747" length="10" fullyQualifiedName="setMessage" identifier="setMessage"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onRecvMsgChange" startPosition="2988" length="15" fullyQualifiedName="onRecvMsgChange" identifier="onRecvMsgChange" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2983" length="4" code="void"/>
        <parameters lexicalForm="im.model.Message r" startPosition="3004" length="18">
          <name lexicalForm="r" startPosition="3021" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="r" identifier="r" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="3004" length="16" resolvedType="//@compilationUnits.10/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="3004" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
              <name lexicalForm="Message" startPosition="3013" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="3004" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="3007" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3004" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.ContactList getContactList() {&#xA;&#x9;&#x9;return contactList;&#xA;&#x9;}" startPosition="3767" length="71">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3767" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return contactList;&#xA;&#x9;}" startPosition="3812" length="26">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return contactList;" startPosition="3816" length="19">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="contactList" startPosition="3823" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="contactList" identifier="contactList"/>
          </statements>
        </body>
        <name lexicalForm="getContactList" startPosition="3795" length="14" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getContactList" identifier="getContactList" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.ContactList" startPosition="3774" length="20" resolvedType="//@compilationUnits.8/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.ContactList" startPosition="3774" length="20" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="im.model.ContactList">
            <name lexicalForm="ContactList" startPosition="3783" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="ContactList" identifier="ContactList"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="3774" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="3777" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3774" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setContactList(im.model.ContactList contactList) {&#xA;&#x9;&#x9;this.contactList = contactList;&#xA;&#x9;}" startPosition="3841" length="99">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3841" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.contactList = contactList;&#xA;&#x9;}" startPosition="3902" length="38">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contactList = contactList;" startPosition="3906" length="31">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.contactList = contactList" startPosition="3906" length="30" resolvedType="//@compilationUnits.8/@types.0" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.contactList" startPosition="3906" length="16" resolvedType="//@compilationUnits.8/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="3906" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                <name lexicalForm="contactList" startPosition="3911" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="contactList" identifier="contactList"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="contactList" startPosition="3925" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="contactList" identifier="contactList"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setContactList" startPosition="3853" length="14" fullyQualifiedName="setContactList" identifier="setContactList" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3848" length="4" code="void"/>
        <parameters lexicalForm="im.model.ContactList contactList" startPosition="3868" length="32">
          <name lexicalForm="contactList" startPosition="3889" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="contactList" identifier="contactList" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.ContactList" startPosition="3868" length="20" resolvedType="//@compilationUnits.8/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.ContactList" startPosition="3868" length="20" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="im.model.ContactList">
              <name lexicalForm="ContactList" startPosition="3877" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="ContactList" identifier="ContactList"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="3868" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="3871" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3868" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.view.ViewFactory getViewFactory() {&#xA;&#x9;&#x9;return viewFactory;&#xA;&#x9;}" startPosition="3943" length="70">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3943" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return viewFactory;&#xA;&#x9;}" startPosition="3987" length="26">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return viewFactory;" startPosition="3991" length="19">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="viewFactory" startPosition="3998" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="viewFactory" identifier="viewFactory"/>
          </statements>
        </body>
        <name lexicalForm="getViewFactory" startPosition="3970" length="14" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="getViewFactory" identifier="getViewFactory" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ViewFactory" startPosition="3950" length="19" resolvedType="//@compilationUnits.16/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ViewFactory" startPosition="3950" length="19" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="im.view.ViewFactory">
            <name lexicalForm="ViewFactory" startPosition="3958" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="ViewFactory" identifier="ViewFactory"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="3950" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="3953" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3950" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setViewFactory(im.view.ViewFactory viewFactory) {&#xA;&#x9;&#x9;this.viewFactory = viewFactory;&#xA;&#x9;}" startPosition="4016" length="98">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4016" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.viewFactory = viewFactory;&#xA;&#x9;}" startPosition="4076" length="38">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.viewFactory = viewFactory;" startPosition="4080" length="31">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.viewFactory = viewFactory" startPosition="4080" length="30" resolvedType="//@compilationUnits.16/@types.0" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.viewFactory" startPosition="4080" length="16" resolvedType="//@compilationUnits.16/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4080" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                <name lexicalForm="viewFactory" startPosition="4085" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="viewFactory" identifier="viewFactory"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="viewFactory" startPosition="4099" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="viewFactory" identifier="viewFactory"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setViewFactory" startPosition="4028" length="14" fullyQualifiedName="setViewFactory" identifier="setViewFactory" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4023" length="4" code="void"/>
        <parameters lexicalForm="im.view.ViewFactory viewFactory" startPosition="4043" length="31">
          <name lexicalForm="viewFactory" startPosition="4063" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="viewFactory" identifier="viewFactory" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ViewFactory" startPosition="4043" length="19" resolvedType="//@compilationUnits.16/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ViewFactory" startPosition="4043" length="19" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="im.view.ViewFactory">
              <name lexicalForm="ViewFactory" startPosition="4051" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="ViewFactory" identifier="ViewFactory"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="4043" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="4046" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4043" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.edit.ContactListEdit getContactListEdit() {&#xA;&#x9;&#x9;return contactListEdit;&#xA;&#x9;}" startPosition="4117" length="82">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4117" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return contactListEdit;&#xA;&#x9;}" startPosition="4169" length="30">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return contactListEdit;" startPosition="4173" length="23">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="contactListEdit" startPosition="4180" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="contactListEdit" identifier="contactListEdit"/>
          </statements>
        </body>
        <name lexicalForm="getContactListEdit" startPosition="4148" length="18" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="getContactListEdit" identifier="getContactListEdit" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactListEdit" startPosition="4124" length="23" resolvedType="//@compilationUnits.5/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactListEdit" startPosition="4124" length="23" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="im.edit.ContactListEdit">
            <name lexicalForm="ContactListEdit" startPosition="4132" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="ContactListEdit" identifier="ContactListEdit"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="4124" length="7" fullyQualifiedName="im.edit">
              <name lexicalForm="edit" startPosition="4127" length="4" fullyQualifiedName="edit" identifier="edit"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4124" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setContactListEdit(im.edit.ContactListEdit contactListEdit) {&#xA;&#x9;&#x9;this.contactListEdit = contactListEdit;&#xA;&#x9;}" startPosition="4202" length="118">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4202" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.contactListEdit = contactListEdit;&#xA;&#x9;}" startPosition="4274" length="46">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contactListEdit = contactListEdit;" startPosition="4278" length="39">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.contactListEdit = contactListEdit" startPosition="4278" length="38" resolvedType="//@compilationUnits.5/@types.0" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.contactListEdit" startPosition="4278" length="20" resolvedType="//@compilationUnits.5/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4278" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                <name lexicalForm="contactListEdit" startPosition="4283" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="contactListEdit" identifier="contactListEdit"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="contactListEdit" startPosition="4301" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="contactListEdit" identifier="contactListEdit"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setContactListEdit" startPosition="4214" length="18" fullyQualifiedName="setContactListEdit" identifier="setContactListEdit" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4209" length="4" code="void"/>
        <parameters lexicalForm="im.edit.ContactListEdit contactListEdit" startPosition="4233" length="39">
          <name lexicalForm="contactListEdit" startPosition="4257" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="contactListEdit" identifier="contactListEdit" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactListEdit" startPosition="4233" length="23" resolvedType="//@compilationUnits.5/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactListEdit" startPosition="4233" length="23" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="im.edit.ContactListEdit">
              <name lexicalForm="ContactListEdit" startPosition="4241" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="ContactListEdit" identifier="ContactListEdit"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="4233" length="7" fullyQualifiedName="im.edit">
                <name lexicalForm="edit" startPosition="4236" length="4" fullyQualifiedName="edit" identifier="edit"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4233" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.util.Enumeration getConversations() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(conversation&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}" startPosition="4323" length="138">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4323" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(conversation&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}" startPosition="4371" length="90">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new be.ac.vub.util.IteratorEnumerationAdapter(conversation&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());" startPosition="4375" length="83">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new be.ac.vub.util.IteratorEnumerationAdapter(conversation&#xA;&#x9;&#x9;&#x9;&#x9;.iterator())" startPosition="4382" length="75" resolvedType="//@compilationUnits.0/@types.0">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="conversation&#xA;&#x9;&#x9;&#x9;&#x9;.iterator()" startPosition="4428" length="28">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="conversation" startPosition="4428" length="12" fullyQualifiedName="conversation" identifier="conversation"/>
                <name lexicalForm="iterator" startPosition="4446" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
              </arguments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="4386" length="41" resolvedType="//@compilationUnits.0/@types.0">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="4386" length="41" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="be.ac.vub.util.IteratorEnumerationAdapter">
                  <name lexicalForm="IteratorEnumerationAdapter" startPosition="4401" length="26" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="IteratorEnumerationAdapter" identifier="IteratorEnumerationAdapter"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util" startPosition="4386" length="14" fullyQualifiedName="be.ac.vub.util">
                    <name lexicalForm="util" startPosition="4396" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub" startPosition="4386" length="9" fullyQualifiedName="be.ac.vub">
                      <name lexicalForm="vub" startPosition="4392" length="3" fullyQualifiedName="vub" identifier="vub"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac" startPosition="4386" length="5" fullyQualifiedName="be.ac">
                        <name lexicalForm="ac" startPosition="4389" length="2" fullyQualifiedName="ac" identifier="ac"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="be" startPosition="4386" length="2" fullyQualifiedName="be" identifier="be"/>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </name>
              </type>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getConversations" startPosition="4352" length="16" fullyQualifiedName="getConversations" identifier="getConversations" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="4330" length="21">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="4330" length="21" fullyQualifiedName="java.util.Enumeration">
            <name lexicalForm="Enumeration" startPosition="4340" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="4330" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="4335" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="4330" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addConversation(im.model.Conversation conversation) {&#xA;&#x9;&#x9;if (!this.conversation.contains(conversation)) {&#xA;&#x9;&#x9;&#x9;this.conversation.add(conversation);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="4464" length="163">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4464" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (!this.conversation.contains(conversation)) {&#xA;&#x9;&#x9;&#x9;this.conversation.add(conversation);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="4528" length="99">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.conversation.contains(conversation)) {&#xA;&#x9;&#x9;&#x9;this.conversation.add(conversation);&#xA;&#x9;&#x9;}" startPosition="4532" length="92">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.conversation.contains(conversation)" startPosition="4536" length="41" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.conversation.contains(conversation)" startPosition="4537" length="40">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="conversation" startPosition="4564" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conversation" identifier="conversation"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.conversation" startPosition="4537" length="17">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4537" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                  <name lexicalForm="conversation" startPosition="4542" length="12" fullyQualifiedName="conversation" identifier="conversation"/>
                </expression>
                <name lexicalForm="contains" startPosition="4555" length="8" fullyQualifiedName="contains" identifier="contains"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.conversation.add(conversation);&#xA;&#x9;&#x9;}" startPosition="4579" length="45">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.conversation.add(conversation);" startPosition="4584" length="36">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.conversation.add(conversation)" startPosition="4584" length="35">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="conversation" startPosition="4606" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conversation" identifier="conversation"/>
                  <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.conversation" startPosition="4584" length="17">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4584" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                    <name lexicalForm="conversation" startPosition="4589" length="12" fullyQualifiedName="conversation" identifier="conversation"/>
                  </expression>
                  <name lexicalForm="add" startPosition="4602" length="3" fullyQualifiedName="add" identifier="add"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="addConversation" startPosition="4476" length="15" fullyQualifiedName="addConversation" identifier="addConversation" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4471" length="4" code="void"/>
        <parameters lexicalForm="im.model.Conversation conversation" startPosition="4492" length="34">
          <name lexicalForm="conversation" startPosition="4514" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conversation" identifier="conversation" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Conversation" startPosition="4492" length="21" resolvedType="//@compilationUnits.9/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Conversation" startPosition="4492" length="21" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="im.model.Conversation">
              <name lexicalForm="Conversation" startPosition="4501" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="4492" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="4495" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4492" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeConversation(im.model.Conversation conversation) {&#xA;&#x9;&#x9;this.conversation.remove(conversation);&#xA;&#x9;}" startPosition="4630" length="113">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4630" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.conversation.remove(conversation);&#xA;&#x9;}" startPosition="4697" length="46">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.conversation.remove(conversation);" startPosition="4701" length="39">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.conversation.remove(conversation)" startPosition="4701" length="38">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="conversation" startPosition="4726" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conversation" identifier="conversation"/>
              <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.conversation" startPosition="4701" length="17">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4701" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                <name lexicalForm="conversation" startPosition="4706" length="12" fullyQualifiedName="conversation" identifier="conversation"/>
              </expression>
              <name lexicalForm="remove" startPosition="4719" length="6" fullyQualifiedName="remove" identifier="remove"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="removeConversation" startPosition="4642" length="18" fullyQualifiedName="removeConversation" identifier="removeConversation" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4637" length="4" code="void"/>
        <parameters lexicalForm="im.model.Conversation conversation" startPosition="4661" length="34">
          <name lexicalForm="conversation" startPosition="4683" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conversation" identifier="conversation" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Conversation" startPosition="4661" length="21" resolvedType="//@compilationUnits.9/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Conversation" startPosition="4661" length="21" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="im.model.Conversation">
              <name lexicalForm="Conversation" startPosition="4670" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="4661" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="4664" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4661" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.util.Enumeration getNetworks() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(network.iterator());&#xA;&#x9;}" startPosition="4746" length="123">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4746" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(network.iterator());&#xA;&#x9;}" startPosition="4789" length="80">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new be.ac.vub.util.IteratorEnumerationAdapter(network.iterator());" startPosition="4793" length="73">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new be.ac.vub.util.IteratorEnumerationAdapter(network.iterator())" startPosition="4800" length="65" resolvedType="//@compilationUnits.0/@types.0">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="network.iterator()" startPosition="4846" length="18">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="4846" length="7" fullyQualifiedName="network" identifier="network"/>
                <name lexicalForm="iterator" startPosition="4854" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
              </arguments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="4804" length="41" resolvedType="//@compilationUnits.0/@types.0">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="4804" length="41" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="be.ac.vub.util.IteratorEnumerationAdapter">
                  <name lexicalForm="IteratorEnumerationAdapter" startPosition="4819" length="26" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="IteratorEnumerationAdapter" identifier="IteratorEnumerationAdapter"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util" startPosition="4804" length="14" fullyQualifiedName="be.ac.vub.util">
                    <name lexicalForm="util" startPosition="4814" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub" startPosition="4804" length="9" fullyQualifiedName="be.ac.vub">
                      <name lexicalForm="vub" startPosition="4810" length="3" fullyQualifiedName="vub" identifier="vub"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac" startPosition="4804" length="5" fullyQualifiedName="be.ac">
                        <name lexicalForm="ac" startPosition="4807" length="2" fullyQualifiedName="ac" identifier="ac"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="be" startPosition="4804" length="2" fullyQualifiedName="be" identifier="be"/>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </name>
              </type>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getNetworks" startPosition="4775" length="11" fullyQualifiedName="getNetworks" identifier="getNetworks" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="4753" length="21">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="4753" length="21" fullyQualifiedName="java.util.Enumeration">
            <name lexicalForm="Enumeration" startPosition="4763" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="4753" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="4758" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="4753" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;if (!this.network.contains(network)) {&#xA;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.addObserver(this);&#xA;&#x9;}" startPosition="4872" length="186">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4872" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (!this.network.contains(network)) {&#xA;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.addObserver(this);&#xA;&#x9;}" startPosition="4926" length="132">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.network.contains(network)) {&#xA;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;}" startPosition="4930" length="72">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.network.contains(network)" startPosition="4934" length="31" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.network.contains(network)" startPosition="4935" length="30">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="4957" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.network" startPosition="4935" length="12">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4935" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                  <name lexicalForm="network" startPosition="4940" length="7" fullyQualifiedName="network" identifier="network"/>
                </expression>
                <name lexicalForm="contains" startPosition="4948" length="8" fullyQualifiedName="contains" identifier="contains"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;}" startPosition="4967" length="35">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.network.add(network);" startPosition="4972" length="26">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.network.add(network)" startPosition="4972" length="25">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="4989" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                  <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.network" startPosition="4972" length="12">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4972" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                    <name lexicalForm="network" startPosition="4977" length="7" fullyQualifiedName="network" identifier="network"/>
                  </expression>
                  <name lexicalForm="add" startPosition="4985" length="3" fullyQualifiedName="add" identifier="add"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (network != null)&#xA;&#x9;&#x9;&#x9;network.addObserver(this);" startPosition="5005" length="50">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="network != null" startPosition="5009" length="15" operator="!=">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5009" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="5020" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="network.addObserver(this);" startPosition="5029" length="26">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="network.addObserver(this)" startPosition="5029" length="25">
                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5049" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5029" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                <name lexicalForm="addObserver" startPosition="5037" length="11" fullyQualifiedName="addObserver" identifier="addObserver"/>
              </expression>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="addNetwork" startPosition="4884" length="10" fullyQualifiedName="addNetwork" identifier="addNetwork" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4879" length="4" code="void"/>
        <parameters lexicalForm="im.networking.Network network" startPosition="4895" length="29">
          <name lexicalForm="network" startPosition="4917" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="4895" length="21" resolvedType="//@compilationUnits.12/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="4895" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
              <name lexicalForm="Network" startPosition="4909" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="4895" length="13" fullyQualifiedName="im.networking">
                <name lexicalForm="networking" startPosition="4898" length="10" fullyQualifiedName="networking" identifier="networking"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4895" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.deleteObserver(this);&#xA;&#x9;&#x9;this.network.remove(network);&#xA;&#x9;}" startPosition="5061" length="149">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5061" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.deleteObserver(this);&#xA;&#x9;&#x9;this.network.remove(network);&#xA;&#x9;}" startPosition="5118" length="92">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (network != null)&#xA;&#x9;&#x9;&#x9;network.deleteObserver(this);" startPosition="5122" length="53">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="network != null" startPosition="5126" length="15" operator="!=">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5126" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="5137" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="network.deleteObserver(this);" startPosition="5146" length="29">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="network.deleteObserver(this)" startPosition="5146" length="28">
                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5169" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5146" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                <name lexicalForm="deleteObserver" startPosition="5154" length="14" fullyQualifiedName="deleteObserver" identifier="deleteObserver"/>
              </expression>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.network.remove(network);" startPosition="5178" length="29">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.network.remove(network)" startPosition="5178" length="28">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5198" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
              <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.network" startPosition="5178" length="12">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5178" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                <name lexicalForm="network" startPosition="5183" length="7" fullyQualifiedName="network" identifier="network"/>
              </expression>
              <name lexicalForm="remove" startPosition="5191" length="6" fullyQualifiedName="remove" identifier="remove"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="removeNetwork" startPosition="5073" length="13" fullyQualifiedName="removeNetwork" identifier="removeNetwork" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5068" length="4" code="void"/>
        <parameters lexicalForm="im.networking.Network network" startPosition="5087" length="29">
          <name lexicalForm="network" startPosition="5109" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="5087" length="21" resolvedType="//@compilationUnits.12/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="5087" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
              <name lexicalForm="Network" startPosition="5101" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="5087" length="13" fullyQualifiedName="im.networking">
                <name lexicalForm="networking" startPosition="5090" length="10" fullyQualifiedName="networking" identifier="networking"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5087" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.networking.Network getNetworkAt(int index) {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.networking.Network) network.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="5213" length="181">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5213" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.networking.Network) network.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="5266" length="128">
          <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;return (im.networking.Network) network.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}" startPosition="5270" length="121">
            <catchClauses lexicalForm="catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}" startPosition="5334" length="57">
              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}" startPosition="5370" length="21">
                <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return null;" startPosition="5375" length="12">
                  <expression xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="5382" length="4"/>
                </statements>
              </body>
              <exception lexicalForm="IndexOutOfBoundsException e" startPosition="5341" length="27">
                <name lexicalForm="e" startPosition="5367" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="IndexOutOfBoundsException" startPosition="5341" length="25">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="IndexOutOfBoundsException" startPosition="5341" length="25" fullyQualifiedName="IndexOutOfBoundsException" identifier="IndexOutOfBoundsException"/>
                </type>
              </exception>
            </catchClauses>
            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;return (im.networking.Network) network.get(index);&#xA;&#x9;&#x9;}" startPosition="5274" length="59">
              <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return (im.networking.Network) network.get(index);" startPosition="5279" length="50">
                <expression xsi:type="JavaAST:CastExpression" lexicalForm="(im.networking.Network) network.get(index)" startPosition="5286" length="42" resolvedType="//@compilationUnits.12/@types.0">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="network.get(index)" startPosition="5310" length="18">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="5322" length="5" fullyQualifiedName="index" identifier="index"/>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5310" length="7" fullyQualifiedName="network" identifier="network"/>
                    <name lexicalForm="get" startPosition="5318" length="3" fullyQualifiedName="get" identifier="get"/>
                  </expression>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="5287" length="21" resolvedType="//@compilationUnits.12/@types.0">
                    <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="5287" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
                      <name lexicalForm="Network" startPosition="5301" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="5287" length="13" fullyQualifiedName="im.networking">
                        <name lexicalForm="networking" startPosition="5290" length="10" fullyQualifiedName="networking" identifier="networking"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5287" length="2" fullyQualifiedName="im" identifier="im"/>
                      </qualifier>
                    </name>
                  </type>
                </expression>
              </statements>
            </body>
          </statements>
        </body>
        <name lexicalForm="getNetworkAt" startPosition="5242" length="12" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetworkAt" identifier="getNetworkAt" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="5220" length="21" resolvedType="//@compilationUnits.12/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="5220" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
            <name lexicalForm="Network" startPosition="5234" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="5220" length="13" fullyQualifiedName="im.networking">
              <name lexicalForm="networking" startPosition="5223" length="10" fullyQualifiedName="networking" identifier="networking"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5220" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
        <parameters lexicalForm="int index" startPosition="5255" length="9">
          <name lexicalForm="index" startPosition="5259" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="5255" length="3" code="int"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public int getIndexOfNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;return this.network.indexOf(network);&#xA;&#x9;}" startPosition="5397" length="104">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5397" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return this.network.indexOf(network);&#xA;&#x9;}" startPosition="5457" length="44">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return this.network.indexOf(network);" startPosition="5461" length="37">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.network.indexOf(network)" startPosition="5468" length="29">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5489" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
              <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.network" startPosition="5468" length="12">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5468" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                <name lexicalForm="network" startPosition="5473" length="7" fullyQualifiedName="network" identifier="network"/>
              </expression>
              <name lexicalForm="indexOf" startPosition="5481" length="7" fullyQualifiedName="indexOf" identifier="indexOf"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getIndexOfNetwork" startPosition="5408" length="17" fullyQualifiedName="getIndexOfNetwork" identifier="getIndexOfNetwork" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="5404" length="3" code="int"/>
        <parameters lexicalForm="im.networking.Network network" startPosition="5426" length="29">
          <name lexicalForm="network" startPosition="5448" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="5426" length="21" resolvedType="//@compilationUnits.12/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="5426" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
              <name lexicalForm="Network" startPosition="5440" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="5426" length="13" fullyQualifiedName="im.networking">
                <name lexicalForm="networking" startPosition="5429" length="10" fullyQualifiedName="networking" identifier="networking"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5426" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void insertNetwork(im.networking.Network network, int index) {&#xA;&#x9;&#x9;if (!this.network.contains(network)) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(index, network);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.addObserver(this);&#xA;&#x9;}" startPosition="5504" length="296">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5504" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (!this.network.contains(network)) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(index, network);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (network != null)&#xA;&#x9;&#x9;&#x9;network.addObserver(this);&#xA;&#x9;}" startPosition="5572" length="228">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.network.contains(network)) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(index, network);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="5576" length="168">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.network.contains(network)" startPosition="5580" length="31" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.network.contains(network)" startPosition="5581" length="30">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5603" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.network" startPosition="5581" length="12">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5581" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                  <name lexicalForm="network" startPosition="5586" length="7" fullyQualifiedName="network" identifier="network"/>
                </expression>
                <name lexicalForm="contains" startPosition="5594" length="8" fullyQualifiedName="contains" identifier="contains"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(index, network);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="5613" length="131">
              <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(index, network);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;&#x9;}" startPosition="5618" length="122">
                <catchClauses lexicalForm="catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;&#x9;}" startPosition="5667" length="73">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(network);&#xA;&#x9;&#x9;&#x9;}" startPosition="5703" length="37">
                    <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.network.add(network);" startPosition="5709" length="26">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.network.add(network)" startPosition="5709" length="25">
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5726" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                        <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.network" startPosition="5709" length="12">
                          <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5709" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                          <name lexicalForm="network" startPosition="5714" length="7" fullyQualifiedName="network" identifier="network"/>
                        </expression>
                        <name lexicalForm="add" startPosition="5722" length="3" fullyQualifiedName="add" identifier="add"/>
                      </expression>
                    </statements>
                  </body>
                  <exception lexicalForm="IndexOutOfBoundsException e" startPosition="5674" length="27">
                    <name lexicalForm="e" startPosition="5700" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="IndexOutOfBoundsException" startPosition="5674" length="25">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="IndexOutOfBoundsException" startPosition="5674" length="25" fullyQualifiedName="IndexOutOfBoundsException" identifier="IndexOutOfBoundsException"/>
                    </type>
                  </exception>
                </catchClauses>
                <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;this.network.add(index, network);&#xA;&#x9;&#x9;&#x9;}" startPosition="5622" length="44">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.network.add(index, network);" startPosition="5628" length="33">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.network.add(index, network)" startPosition="5628" length="32">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="5645" length="5" fullyQualifiedName="index" identifier="index"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5652" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                      <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.network" startPosition="5628" length="12">
                        <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5628" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                        <name lexicalForm="network" startPosition="5633" length="7" fullyQualifiedName="network" identifier="network"/>
                      </expression>
                      <name lexicalForm="add" startPosition="5641" length="3" fullyQualifiedName="add" identifier="add"/>
                    </expression>
                  </statements>
                </body>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (network != null)&#xA;&#x9;&#x9;&#x9;network.addObserver(this);" startPosition="5747" length="50">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="network != null" startPosition="5751" length="15" operator="!=">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5751" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="5762" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="network.addObserver(this);" startPosition="5771" length="26">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="network.addObserver(this)" startPosition="5771" length="25">
                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5791" length="4" resolvedType="//@compilationUnits.2/@types.0"/>
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="5771" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                <name lexicalForm="addObserver" startPosition="5779" length="11" fullyQualifiedName="addObserver" identifier="addObserver"/>
              </expression>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="insertNetwork" startPosition="5516" length="13" fullyQualifiedName="insertNetwork" identifier="insertNetwork" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5511" length="4" code="void"/>
        <parameters lexicalForm="im.networking.Network network" startPosition="5530" length="29">
          <name lexicalForm="network" startPosition="5552" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="5530" length="21" resolvedType="//@compilationUnits.12/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="5530" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
              <name lexicalForm="Network" startPosition="5544" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="5530" length="13" fullyQualifiedName="im.networking">
                <name lexicalForm="networking" startPosition="5533" length="10" fullyQualifiedName="networking" identifier="networking"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5530" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="int index" startPosition="5561" length="9">
          <name lexicalForm="index" startPosition="5565" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="5561" length="3" code="int"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public static im.InstantMessagingClient getInstance() {&#xA;&#x9;&#x9;if (instance == null) {&#xA;&#x9;&#x9;&#x9;instance = new InstantMessagingClient();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return instance;&#xA;&#x9;}" startPosition="5803" length="151">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5803" length="6" public="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="static" startPosition="5810" length="6" static="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (instance == null) {&#xA;&#x9;&#x9;&#x9;instance = new InstantMessagingClient();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return instance;&#xA;&#x9;}" startPosition="5857" length="97">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (instance == null) {&#xA;&#x9;&#x9;&#x9;instance = new InstantMessagingClient();&#xA;&#x9;&#x9;}" startPosition="5861" length="71">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="instance == null" startPosition="5865" length="16" operator="==">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="instance" startPosition="5865" length="8" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="instance" identifier="instance"/>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="5877" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;instance = new InstantMessagingClient();&#xA;&#x9;&#x9;}" startPosition="5883" length="49">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="instance = new InstantMessagingClient();" startPosition="5888" length="40">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="instance = new InstantMessagingClient()" startPosition="5888" length="39" resolvedType="//@compilationUnits.2/@types.0" operator="=">
                  <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="instance" startPosition="5888" length="8" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="instance" identifier="instance"/>
                  <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new InstantMessagingClient()" startPosition="5899" length="28" resolvedType="//@compilationUnits.2/@types.0">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="InstantMessagingClient" startPosition="5903" length="22" resolvedType="//@compilationUnits.2/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="5903" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                    </type>
                  </rightHandSide>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return instance;" startPosition="5935" length="16">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="instance" startPosition="5942" length="8" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="instance" identifier="instance"/>
          </statements>
        </body>
        <name lexicalForm="getInstance" startPosition="5843" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.InstantMessagingClient" startPosition="5817" length="25" resolvedType="//@compilationUnits.2/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="5817" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
            <name lexicalForm="InstantMessagingClient" startPosition="5820" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5817" length="2" fullyQualifiedName="im" identifier="im"/>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public static void main(java.lang.String[] args) {&#xA;&#x9;&#x9;InstantMessagingClient app = getInstance();&#xA;&#x9;&#x9;app.setRunning(true);&#xA;&#x9;&#x9;final org.eclipse.swt.widgets.Shell shell = app.getShell();&#xA;&#x9;&#x9;final org.eclipse.swt.widgets.Display display = shell.getDisplay();&#xA;&#x9;&#x9;app.init();&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.open();&#xA;&#x9;&#x9;app.start();&#xA;&#x9;&#x9;while (!shell.isDisposed()) {&#xA;&#x9;&#x9;&#x9;if (!display.readAndDispatch()) {&#xA;&#x9;&#x9;&#x9;&#x9;display.sleep();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;app.stop();&#xA;&#x9;&#x9;app.destroy();&#xA;&#x9;&#x9;display.dispose();&#xA;&#x9;}" startPosition="5957" length="467">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5957" length="6" public="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="static" startPosition="5964" length="6" static="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;InstantMessagingClient app = getInstance();&#xA;&#x9;&#x9;app.setRunning(true);&#xA;&#x9;&#x9;final org.eclipse.swt.widgets.Shell shell = app.getShell();&#xA;&#x9;&#x9;final org.eclipse.swt.widgets.Display display = shell.getDisplay();&#xA;&#x9;&#x9;app.init();&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.open();&#xA;&#x9;&#x9;app.start();&#xA;&#x9;&#x9;while (!shell.isDisposed()) {&#xA;&#x9;&#x9;&#x9;if (!display.readAndDispatch()) {&#xA;&#x9;&#x9;&#x9;&#x9;display.sleep();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;app.stop();&#xA;&#x9;&#x9;app.destroy();&#xA;&#x9;&#x9;display.dispose();&#xA;&#x9;}" startPosition="6006" length="418">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="InstantMessagingClient app = getInstance();" startPosition="6010" length="43">
            <fragments lexicalForm="app = getInstance()" startPosition="6033" length="19">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getInstance()" startPosition="6039" length="13" resolvedType="//@compilationUnits.2/@types.0">
                <name lexicalForm="getInstance" startPosition="6039" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
              </initializer>
              <name lexicalForm="app" startPosition="6033" length="3" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="app" identifier="app" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="InstantMessagingClient" startPosition="6010" length="22" resolvedType="//@compilationUnits.2/@types.0">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="6010" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="app.setRunning(true);" startPosition="6056" length="21">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="app.setRunning(true)" startPosition="6056" length="20">
              <arguments xsi:type="JavaAST:BooleanLiteral" lexicalForm="true" startPosition="6071" length="4" booleanValue="true"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="app" startPosition="6056" length="3" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="app" identifier="app"/>
              <name lexicalForm="setRunning" startPosition="6060" length="10" fullyQualifiedName="setRunning" identifier="setRunning"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="final org.eclipse.swt.widgets.Shell shell = app.getShell();" startPosition="6080" length="59">
            <fragments lexicalForm="shell = app.getShell()" startPosition="6116" length="22">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="app.getShell()" startPosition="6124" length="14">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="app" startPosition="6124" length="3" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="app" identifier="app"/>
                <name lexicalForm="getShell" startPosition="6128" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
              </initializer>
              <name lexicalForm="shell" startPosition="6116" length="5" fullyQualifiedName="shell" identifier="shell" declaration="true"/>
            </fragments>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="6080" length="5" final="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="6086" length="29">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="6086" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
                <name lexicalForm="Shell" startPosition="6110" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="6086" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
                  <name lexicalForm="widgets" startPosition="6102" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="6086" length="15" fullyQualifiedName="org.eclipse.swt">
                    <name lexicalForm="swt" startPosition="6098" length="3" fullyQualifiedName="swt" identifier="swt"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="6086" length="11" fullyQualifiedName="org.eclipse">
                      <name lexicalForm="eclipse" startPosition="6090" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="6086" length="3" fullyQualifiedName="org" identifier="org"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="final org.eclipse.swt.widgets.Display display = shell.getDisplay();" startPosition="6142" length="67">
            <fragments lexicalForm="display = shell.getDisplay()" startPosition="6180" length="28">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.getDisplay()" startPosition="6190" length="18">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="6190" length="5" fullyQualifiedName="shell" identifier="shell"/>
                <name lexicalForm="getDisplay" startPosition="6196" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
              </initializer>
              <name lexicalForm="display" startPosition="6180" length="7" fullyQualifiedName="display" identifier="display" declaration="true"/>
            </fragments>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="6142" length="5" final="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Display" startPosition="6148" length="31">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Display" startPosition="6148" length="31" fullyQualifiedName="org.eclipse.swt.widgets.Display">
                <name lexicalForm="Display" startPosition="6172" length="7" fullyQualifiedName="Display" identifier="Display"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="6148" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
                  <name lexicalForm="widgets" startPosition="6164" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="6148" length="15" fullyQualifiedName="org.eclipse.swt">
                    <name lexicalForm="swt" startPosition="6160" length="3" fullyQualifiedName="swt" identifier="swt"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="6148" length="11" fullyQualifiedName="org.eclipse">
                      <name lexicalForm="eclipse" startPosition="6152" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="6148" length="3" fullyQualifiedName="org" identifier="org"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="app.init();" startPosition="6212" length="11">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="app.init()" startPosition="6212" length="10">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="app" startPosition="6212" length="3" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="app" identifier="app"/>
              <name lexicalForm="init" startPosition="6216" length="4" fullyQualifiedName="init" identifier="init"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.pack();" startPosition="6226" length="13">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.pack()" startPosition="6226" length="12">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="6226" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="pack" startPosition="6232" length="4" fullyQualifiedName="pack" identifier="pack"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.open();" startPosition="6242" length="13">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.open()" startPosition="6242" length="12">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="6242" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="open" startPosition="6248" length="4" fullyQualifiedName="open" identifier="open"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="app.start();" startPosition="6258" length="12">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="app.start()" startPosition="6258" length="11">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="app" startPosition="6258" length="3" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="app" identifier="app"/>
              <name lexicalForm="start" startPosition="6262" length="5" fullyQualifiedName="start" identifier="start"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:WhileStatement" lexicalForm="while (!shell.isDisposed()) {&#xA;&#x9;&#x9;&#x9;if (!display.readAndDispatch()) {&#xA;&#x9;&#x9;&#x9;&#x9;display.sleep();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="6273" length="96">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;if (!display.readAndDispatch()) {&#xA;&#x9;&#x9;&#x9;&#x9;display.sleep();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="6301" length="68">
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!display.readAndDispatch()) {&#xA;&#x9;&#x9;&#x9;&#x9;display.sleep();&#xA;&#x9;&#x9;&#x9;}" startPosition="6306" length="59">
                <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!display.readAndDispatch()" startPosition="6310" length="26" operator="!">
                  <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="display.readAndDispatch()" startPosition="6311" length="25">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="display" startPosition="6311" length="7" fullyQualifiedName="display" identifier="display"/>
                    <name lexicalForm="readAndDispatch" startPosition="6319" length="15" fullyQualifiedName="readAndDispatch" identifier="readAndDispatch"/>
                  </operand>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;display.sleep();&#xA;&#x9;&#x9;&#x9;}" startPosition="6338" length="27">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="display.sleep();" startPosition="6344" length="16">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="display.sleep()" startPosition="6344" length="15">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="display" startPosition="6344" length="7" fullyQualifiedName="display" identifier="display"/>
                      <name lexicalForm="sleep" startPosition="6352" length="5" fullyQualifiedName="sleep" identifier="sleep"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!shell.isDisposed()" startPosition="6280" length="19" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.isDisposed()" startPosition="6281" length="18">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="6281" length="5" fullyQualifiedName="shell" identifier="shell"/>
                <name lexicalForm="isDisposed" startPosition="6287" length="10" fullyQualifiedName="isDisposed" identifier="isDisposed"/>
              </operand>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="app.stop();" startPosition="6372" length="11">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="app.stop()" startPosition="6372" length="10">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="app" startPosition="6372" length="3" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="app" identifier="app"/>
              <name lexicalForm="stop" startPosition="6376" length="4" fullyQualifiedName="stop" identifier="stop"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="app.destroy();" startPosition="6386" length="14">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="app.destroy()" startPosition="6386" length="13">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="app" startPosition="6386" length="3" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="app" identifier="app"/>
              <name lexicalForm="destroy" startPosition="6390" length="7" fullyQualifiedName="destroy" identifier="destroy"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="display.dispose();" startPosition="6403" length="18">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="display.dispose()" startPosition="6403" length="17">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="display" startPosition="6403" length="7" fullyQualifiedName="display" identifier="display"/>
              <name lexicalForm="dispose" startPosition="6411" length="7" fullyQualifiedName="dispose" identifier="dispose"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="main" startPosition="5976" length="4" fullyQualifiedName="main" identifier="main" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5971" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String[] args" startPosition="5981" length="23">
          <name lexicalForm="args" startPosition="6000" length="4" fullyQualifiedName="args" identifier="args" declaration="true"/>
          <type xsi:type="JavaAST:ArrayType" lexicalForm="java.lang.String[]" startPosition="5981" length="18" dimensions="1">
            <componentType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="5981" length="16">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="5981" length="16" fullyQualifiedName="java.lang.String">
                <name lexicalForm="String" startPosition="5991" length="6" fullyQualifiedName="String" identifier="String"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="5981" length="9" fullyQualifiedName="java.lang">
                  <name lexicalForm="lang" startPosition="5986" length="4" fullyQualifiedName="lang" identifier="lang"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="5981" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </componentType>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="InstantMessagingClient" startPosition="112" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="swt.SWTApplication" startPosition="143" length="18" resolvedType="//@compilationUnits.27/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="swt.SWTApplication" startPosition="143" length="18" resolvedType="//@compilationUnits.27/@types.0" fullyQualifiedName="swt.SWTApplication">
          <name lexicalForm="SWTApplication" startPosition="147" length="14" resolvedType="//@compilationUnits.27/@types.0" fullyQualifiedName="SWTApplication" identifier="SWTApplication"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="swt" startPosition="143" length="3" fullyQualifiedName="swt" identifier="swt"/>
        </name>
      </superclassType>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observer" startPosition="178" length="18">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observer" startPosition="178" length="18" fullyQualifiedName="java.util.Observer">
          <name lexicalForm="Observer" startPosition="188" length="8" fullyQualifiedName="Observer" identifier="Observer"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="178" length="9" fullyQualifiedName="java.util">
            <name lexicalForm="util" startPosition="183" length="4" fullyQualifiedName="util" identifier="util"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="178" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="im.ExceptionReporter" startPosition="201" length="20" resolvedType="//@compilationUnits.1/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.ExceptionReporter" startPosition="201" length="20" resolvedType="//@compilationUnits.1/@types.0" fullyQualifiedName="im.ExceptionReporter">
          <name lexicalForm="ExceptionReporter" startPosition="204" length="17" resolvedType="//@compilationUnits.1/@types.0" fullyQualifiedName="ExceptionReporter" identifier="ExceptionReporter"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="201" length="2" fullyQualifiedName="im" identifier="im"/>
        </name>
      </superInterfaceTypes>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.edit;&#xA;&#xA;public class ContactEdit implements java.util.Observer {&#xA;&#x9;private im.model.Contact model = null;&#xA;&#xA;&#x9;private im.edit.ContactListEdit listEdit = null;&#xA;&#xA;&#x9;public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public ContactEdit(im.model.Contact c) {&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;}&#xA;&#xA;&#x9;public void onNameChange(java.lang.String n) {&#xA;&#x9;&#x9;onChange();&#xA;&#x9;}&#xA;&#xA;&#x9;public void onStatusChange(java.lang.String s) {&#xA;&#x9;&#x9;onChange();&#xA;&#x9;}&#xA;&#xA;&#x9;public void onChange() {&#xA;&#x9;&#x9;int index = getListEdit().getIndexOfContactEdit(this);&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;getListEdit().getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;getListEdit().getView().addContact(getModel(), index);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Contact getModel() {&#xA;&#x9;&#x9;return model;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setModel(im.model.Contact model) {&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public im.edit.ContactListEdit getListEdit() {&#xA;&#x9;&#x9;return listEdit;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setListEdit(im.edit.ContactListEdit listEdit) {&#xA;&#x9;&#x9;if (this.listEdit != listEdit) {&#xA;&#x9;&#x9;&#x9;if (this.listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;this.listEdit.removeContactEdit(this);&#xA;&#x9;&#x9;&#x9;this.listEdit = listEdit;&#xA;&#x9;&#x9;&#x9;if (listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;listEdit.addContactEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="1761">
    <package lexicalForm="package im.edit;" length="16">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="8" length="7" fullyQualifiedName="im.edit">
        <name lexicalForm="edit" startPosition="11" length="4" fullyQualifiedName="edit" identifier="edit"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class ContactEdit implements java.util.Observer {&#xA;&#x9;private im.model.Contact model = null;&#xA;&#xA;&#x9;private im.edit.ContactListEdit listEdit = null;&#xA;&#xA;&#x9;public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public ContactEdit(im.model.Contact c) {&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;}&#xA;&#xA;&#x9;public void onNameChange(java.lang.String n) {&#xA;&#x9;&#x9;onChange();&#xA;&#x9;}&#xA;&#xA;&#x9;public void onStatusChange(java.lang.String s) {&#xA;&#x9;&#x9;onChange();&#xA;&#x9;}&#xA;&#xA;&#x9;public void onChange() {&#xA;&#x9;&#x9;int index = getListEdit().getIndexOfContactEdit(this);&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;getListEdit().getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;getListEdit().getView().addContact(getModel(), index);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Contact getModel() {&#xA;&#x9;&#x9;return model;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setModel(im.model.Contact model) {&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public im.edit.ContactListEdit getListEdit() {&#xA;&#x9;&#x9;return listEdit;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setListEdit(im.edit.ContactListEdit listEdit) {&#xA;&#x9;&#x9;if (this.listEdit != listEdit) {&#xA;&#x9;&#x9;&#x9;if (this.listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;this.listEdit.removeContactEdit(this);&#xA;&#x9;&#x9;&#x9;this.listEdit = listEdit;&#xA;&#x9;&#x9;&#x9;if (listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;listEdit.addContactEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}" startPosition="18" length="1742" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.5/@types.0/@bodyDeclarations.20/@body/@statements.0/@thenStatement/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@expression/@arguments.0 //@compilationUnits.3/@types.0/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.17/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@elseStatement/@statements.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@elseStatement/@statements.0/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.16/@parameters.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@elseStatement/@statements.0/@fragments.0/@initializer/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.1/@expression/@expression/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@elseStatement/@statements.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.20/@body/@statements.0/@thenStatement/@statements.1/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.16/@parameters.0/@type/@name/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.17/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.1/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.16/@body/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.10/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.19/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.19/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.19/@parameters.0/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.2/@thenStatement/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.16/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@elseStatement/@statements.1/@expression/@rightHandSide/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.20/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.1/@expression/@leftHandSide/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.20/@body/@statements.0/@thenStatement/@statements.0/@body/@statements.0/@expression/@arguments.1 //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.18/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.17/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.18/@name //@compilationUnits.5/@types.0/@bodyDeclarations.19/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.20/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.18/@body/@statements.0/@body/@statements.0/@expression/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.16/@body/@statements.0/@thenStatement/@statements.1/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.16/@body/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@elseStatement/@statements.3/@expression/@arguments.0 //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@leftHandSide/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.17/@body/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.3/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.3/@body/@statements.2/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.18/@returnType/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.18/@body/@statements.0/@body/@statements.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.17/@body/@statements.0/@thenStatement/@statements.1/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.10/@returnType/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.20/@parameters.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.20/@body/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.17/@parameters.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.10/@name //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.0/@fragments.0/@initializer/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.18/@body/@statements.0/@body/@statements.0/@expression/@type/@name/@name" resolvedTypeReferences="//@compilationUnits.5/@types.0/@bodyDeclarations.16/@parameters.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.18/@returnType //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@elseStatement/@statements.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.18/@body/@statements.0/@body/@statements.0/@expression/@type //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.17/@parameters.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.5/@types.0/@bodyDeclarations.19/@parameters.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.20/@parameters.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.10/@returnType">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="18" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.model.Contact model = null;" startPosition="76" length="38">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="76" length="7" private="true"/>
        <fragments lexicalForm="model = null" startPosition="101" length="12">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="109" length="4"/>
          <name lexicalForm="model" startPosition="101" length="5" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="model" identifier="model" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="84" length="16" resolvedType="//@compilationUnits.7/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="84" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
            <name lexicalForm="Contact" startPosition="93" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="84" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="87" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="84" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.edit.ContactListEdit listEdit = null;" startPosition="117" length="48">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="117" length="7" private="true"/>
        <fragments lexicalForm="listEdit = null" startPosition="149" length="15">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="160" length="4"/>
          <name lexicalForm="listEdit" startPosition="149" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactListEdit" startPosition="125" length="23" resolvedType="//@compilationUnits.5/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactListEdit" startPosition="125" length="23" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="im.edit.ContactListEdit">
            <name lexicalForm="ContactListEdit" startPosition="133" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="ContactListEdit" identifier="ContactListEdit"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="125" length="7" fullyQualifiedName="im.edit">
              <name lexicalForm="edit" startPosition="128" length="4" fullyQualifiedName="edit" identifier="edit"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="125" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="168" length="596">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="168" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="233" length="531">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="237" length="524">
            <expression xsi:type="JavaAST:InstanceofExpression" lexicalForm="arg instanceof java.util.Hashtable" startPosition="241" length="34">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="arg" startPosition="241" length="3" fullyQualifiedName="arg" identifier="arg"/>
              <rightOperand xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="256" length="19">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="256" length="19" fullyQualifiedName="java.util.Hashtable">
                  <name lexicalForm="Hashtable" startPosition="266" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="256" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="261" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="256" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="277" length="484">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = (java.util.Hashtable) arg;" startPosition="282" length="50">
                <fragments lexicalForm="e = (java.util.Hashtable) arg" startPosition="302" length="29">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(java.util.Hashtable) arg" startPosition="306" length="25">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="arg" startPosition="328" length="3" fullyQualifiedName="arg" identifier="arg"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="307" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="307" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="317" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="307" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="312" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="307" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="302" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="282" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="282" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="292" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="282" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="287" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="282" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;" startPosition="336" length="58">
                <fragments lexicalForm="mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;" startPosition="343" length="50">
                  <initializer xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;" startPosition="351" length="42" operator="+">
                    <extendedOperands xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Change&quot;" startPosition="385" length="8" escapedValue="&quot;Change&quot;" literalValue="Change"/>
                    <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;on&quot;" startPosition="351" length="4" escapedValue="&quot;on&quot;" literalValue="on"/>
                    <rightOperand xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((String) e.get(&quot;name&quot;))" startPosition="358" length="24">
                      <expression xsi:type="JavaAST:CastExpression" lexicalForm="(String) e.get(&quot;name&quot;)" startPosition="359" length="22">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;name&quot;)" startPosition="368" length="13">
                          <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="374" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="368" length="1" fullyQualifiedName="e" identifier="e"/>
                          <name lexicalForm="get" startPosition="370" length="3" fullyQualifiedName="get" identifier="get"/>
                        </expression>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="360" length="6">
                          <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="360" length="6" fullyQualifiedName="String" identifier="String"/>
                        </type>
                      </expression>
                    </rightOperand>
                  </initializer>
                  <name lexicalForm="mName" startPosition="343" length="5" fullyQualifiedName="mName" identifier="mName" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="336" length="6">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="336" length="6" fullyQualifiedName="String" identifier="String"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};" startPosition="398" length="45">
                <fragments lexicalForm="parmTypes = {(Class) e.get(&quot;class&quot;)}" startPosition="406" length="36">
                  <initializer xsi:type="JavaAST:ArrayInitializer" lexicalForm="{(Class) e.get(&quot;class&quot;)}" startPosition="418" length="24">
                    <expressions xsi:type="JavaAST:CastExpression" lexicalForm="(Class) e.get(&quot;class&quot;)" startPosition="419" length="22">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;class&quot;)" startPosition="427" length="14">
                        <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="433" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="427" length="1" fullyQualifiedName="e" identifier="e"/>
                        <name lexicalForm="get" startPosition="429" length="3" fullyQualifiedName="get" identifier="get"/>
                      </expression>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="Class" startPosition="420" length="5">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="420" length="5" fullyQualifiedName="Class" identifier="Class"/>
                      </type>
                    </expressions>
                  </initializer>
                  <name lexicalForm="parmTypes" startPosition="406" length="9" fullyQualifiedName="parmTypes" identifier="parmTypes" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:ArrayType" lexicalForm="Class[]" startPosition="398" length="7" dimensions="1">
                  <componentType xsi:type="JavaAST:SimpleType" lexicalForm="Class" startPosition="398" length="5">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="398" length="5" fullyQualifiedName="Class" identifier="Class"/>
                  </componentType>
                </type>
              </statements>
              <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="447" length="310">
                <catchClauses lexicalForm="catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;}" startPosition="610" length="58">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;}" startPosition="644" length="24"/>
                  <exception lexicalForm="NoSuchMethodException nex" startPosition="617" length="25">
                    <name lexicalForm="nex" startPosition="639" length="3" fullyQualifiedName="nex" identifier="nex" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="NoSuchMethodException" startPosition="617" length="21">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="NoSuchMethodException" startPosition="617" length="21" fullyQualifiedName="NoSuchMethodException" identifier="NoSuchMethodException"/>
                    </type>
                  </exception>
                </catchClauses>
                <catchClauses lexicalForm="catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="669" length="88">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="690" length="67">
                    <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="ex.printStackTrace();" startPosition="731" length="21">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ex.printStackTrace()" startPosition="731" length="20">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="ex" startPosition="731" length="2" fullyQualifiedName="ex" identifier="ex"/>
                        <name lexicalForm="printStackTrace" startPosition="734" length="15" fullyQualifiedName="printStackTrace" identifier="printStackTrace"/>
                      </expression>
                    </statements>
                  </body>
                  <exception lexicalForm="Exception ex" startPosition="676" length="12">
                    <name lexicalForm="ex" startPosition="686" length="2" fullyQualifiedName="ex" identifier="ex" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="676" length="9">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="676" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                    </type>
                  </exception>
                </catchClauses>
                <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;}" startPosition="451" length="158">
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);" startPosition="457" length="83">
                    <fragments lexicalForm="m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes)" startPosition="482" length="57">
                      <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes)" startPosition="486" length="53">
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="mName" startPosition="522" length="5" fullyQualifiedName="mName" identifier="mName"/>
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="parmTypes" startPosition="529" length="9" fullyQualifiedName="parmTypes" identifier="parmTypes"/>
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getClass()" startPosition="486" length="10">
                          <name lexicalForm="getClass" startPosition="486" length="8" fullyQualifiedName="getClass" identifier="getClass"/>
                        </expression>
                        <name lexicalForm="getDeclaredMethod" startPosition="497" length="17" fullyQualifiedName="getDeclaredMethod" identifier="getDeclaredMethod"/>
                      </initializer>
                      <name lexicalForm="m" startPosition="482" length="1" fullyQualifiedName="m" identifier="m" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.reflect.Method" startPosition="457" length="24">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.reflect.Method" startPosition="457" length="24" fullyQualifiedName="java.lang.reflect.Method">
                        <name lexicalForm="Method" startPosition="475" length="6" fullyQualifiedName="Method" identifier="Method"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.reflect" startPosition="457" length="17" fullyQualifiedName="java.lang.reflect">
                          <name lexicalForm="reflect" startPosition="467" length="7" fullyQualifiedName="reflect" identifier="reflect"/>
                          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="457" length="9" fullyQualifiedName="java.lang">
                            <name lexicalForm="lang" startPosition="462" length="4" fullyQualifiedName="lang" identifier="lang"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="457" length="4" fullyQualifiedName="java" identifier="java"/>
                          </qualifier>
                        </qualifier>
                      </name>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Object[] args = {e.get(&quot;value&quot;)};" startPosition="545" length="33">
                    <fragments lexicalForm="args = {e.get(&quot;value&quot;)}" startPosition="554" length="23">
                      <initializer xsi:type="JavaAST:ArrayInitializer" lexicalForm="{e.get(&quot;value&quot;)}" startPosition="561" length="16">
                        <expressions xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;value&quot;)" startPosition="562" length="14">
                          <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="568" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="562" length="1" fullyQualifiedName="e" identifier="e"/>
                          <name lexicalForm="get" startPosition="564" length="3" fullyQualifiedName="get" identifier="get"/>
                        </expressions>
                      </initializer>
                      <name lexicalForm="args" startPosition="554" length="4" fullyQualifiedName="args" identifier="args" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:ArrayType" lexicalForm="Object[]" startPosition="545" length="8" dimensions="1">
                      <componentType xsi:type="JavaAST:SimpleType" lexicalForm="Object" startPosition="545" length="6">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="Object" startPosition="545" length="6" fullyQualifiedName="Object" identifier="Object"/>
                      </componentType>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="m.invoke(this, args);" startPosition="583" length="21">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="m.invoke(this, args)" startPosition="583" length="20">
                      <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="592" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="args" startPosition="598" length="4" fullyQualifiedName="args" identifier="args"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="m" startPosition="583" length="1" fullyQualifiedName="m" identifier="m"/>
                      <name lexicalForm="invoke" startPosition="585" length="6" fullyQualifiedName="invoke" identifier="invoke"/>
                    </expression>
                  </statements>
                </body>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="update" startPosition="180" length="6" fullyQualifiedName="update" identifier="update" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="175" length="4" code="void"/>
        <parameters lexicalForm="java.util.Observable o" startPosition="187" length="22">
          <name lexicalForm="o" startPosition="208" length="1" fullyQualifiedName="o" identifier="o" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observable" startPosition="187" length="20">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observable" startPosition="187" length="20" fullyQualifiedName="java.util.Observable">
              <name lexicalForm="Observable" startPosition="197" length="10" fullyQualifiedName="Observable" identifier="Observable"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="187" length="9" fullyQualifiedName="java.util">
                <name lexicalForm="util" startPosition="192" length="4" fullyQualifiedName="util" identifier="util"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="187" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="java.lang.Object arg" startPosition="211" length="20">
          <name lexicalForm="arg" startPosition="228" length="3" fullyQualifiedName="arg" identifier="arg" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="211" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="211" length="16" fullyQualifiedName="java.lang.Object">
              <name lexicalForm="Object" startPosition="221" length="6" fullyQualifiedName="Object" identifier="Object"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="211" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="216" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="211" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public ContactEdit(im.model.Contact c) {&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;}" startPosition="767" length="58" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="767" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;}" startPosition="806" length="19">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setModel(c);" startPosition="810" length="12">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setModel(c)" startPosition="810" length="11">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="819" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
              <name lexicalForm="setModel" startPosition="810" length="8" fullyQualifiedName="setModel" identifier="setModel"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="ContactEdit" startPosition="774" length="11" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
        <parameters lexicalForm="im.model.Contact c" startPosition="786" length="18">
          <name lexicalForm="c" startPosition="803" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="786" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="786" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="795" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="786" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="789" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="786" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onNameChange(java.lang.String n) {&#xA;&#x9;&#x9;onChange();&#xA;&#x9;}" startPosition="828" length="63">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="828" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;onChange();&#xA;&#x9;}" startPosition="873" length="18">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="onChange();" startPosition="877" length="11">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="onChange()" startPosition="877" length="10">
              <name lexicalForm="onChange" startPosition="877" length="8" fullyQualifiedName="onChange" identifier="onChange"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onNameChange" startPosition="840" length="12" fullyQualifiedName="onNameChange" identifier="onNameChange" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="835" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String n" startPosition="853" length="18">
          <name lexicalForm="n" startPosition="870" length="1" fullyQualifiedName="n" identifier="n" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="853" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="853" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="863" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="853" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="858" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="853" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onStatusChange(java.lang.String s) {&#xA;&#x9;&#x9;onChange();&#xA;&#x9;}" startPosition="894" length="65">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="894" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;onChange();&#xA;&#x9;}" startPosition="941" length="18">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="onChange();" startPosition="945" length="11">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="onChange()" startPosition="945" length="10">
              <name lexicalForm="onChange" startPosition="945" length="8" fullyQualifiedName="onChange" identifier="onChange"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onStatusChange" startPosition="906" length="14" fullyQualifiedName="onStatusChange" identifier="onStatusChange" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="901" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String s" startPosition="921" length="18">
          <name lexicalForm="s" startPosition="938" length="1" fullyQualifiedName="s" identifier="s" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="921" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="921" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="931" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="921" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="926" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="921" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onChange() {&#xA;&#x9;&#x9;int index = getListEdit().getIndexOfContactEdit(this);&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;getListEdit().getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;getListEdit().getView().addContact(getModel(), index);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="962" length="215">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="962" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;int index = getListEdit().getIndexOfContactEdit(this);&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;getListEdit().getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;getListEdit().getView().addContact(getModel(), index);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="985" length="192">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="int index = getListEdit().getIndexOfContactEdit(this);" startPosition="989" length="54">
            <fragments lexicalForm="index = getListEdit().getIndexOfContactEdit(this)" startPosition="993" length="49">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getListEdit().getIndexOfContactEdit(this)" startPosition="1001" length="41">
                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1037" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getListEdit()" startPosition="1001" length="13" resolvedType="//@compilationUnits.5/@types.0">
                  <name lexicalForm="getListEdit" startPosition="1001" length="11" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="getListEdit" identifier="getListEdit"/>
                </expression>
                <name lexicalForm="getIndexOfContactEdit" startPosition="1015" length="21" fullyQualifiedName="getIndexOfContactEdit" identifier="getIndexOfContactEdit"/>
              </initializer>
              <name lexicalForm="index" startPosition="993" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="989" length="3" code="int"/>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (index > -1) {&#xA;&#x9;&#x9;&#x9;getListEdit().getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;getListEdit().getView().addContact(getModel(), index);&#xA;&#x9;&#x9;}" startPosition="1046" length="128">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="index > -1" startPosition="1050" length="10" operator=">">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1050" length="5" fullyQualifiedName="index" identifier="index"/>
              <rightOperand xsi:type="JavaAST:PrefixExpression" lexicalForm="-1" startPosition="1058" length="2">
                <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="1" startPosition="1059" length="1" token="1"/>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;getListEdit().getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;getListEdit().getView().addContact(getModel(), index);&#xA;&#x9;&#x9;}" startPosition="1062" length="112">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getListEdit().getView().removeContact(index);" startPosition="1067" length="45">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getListEdit().getView().removeContact(index)" startPosition="1067" length="44">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1105" length="5" fullyQualifiedName="index" identifier="index"/>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getListEdit().getView()" startPosition="1067" length="23" resolvedType="//@compilationUnits.17/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getListEdit()" startPosition="1067" length="13" resolvedType="//@compilationUnits.5/@types.0">
                      <name lexicalForm="getListEdit" startPosition="1067" length="11" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="getListEdit" identifier="getListEdit"/>
                    </expression>
                    <name lexicalForm="getView" startPosition="1081" length="7" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                  </expression>
                  <name lexicalForm="removeContact" startPosition="1091" length="13" fullyQualifiedName="removeContact" identifier="removeContact"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getListEdit().getView().addContact(getModel(), index);" startPosition="1116" length="54">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getListEdit().getView().addContact(getModel(), index)" startPosition="1116" length="53">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="1151" length="10" resolvedType="//@compilationUnits.7/@types.0">
                    <name lexicalForm="getModel" startPosition="1151" length="8" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                  </arguments>
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1163" length="5" fullyQualifiedName="index" identifier="index"/>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getListEdit().getView()" startPosition="1116" length="23" resolvedType="//@compilationUnits.17/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getListEdit()" startPosition="1116" length="13" resolvedType="//@compilationUnits.5/@types.0">
                      <name lexicalForm="getListEdit" startPosition="1116" length="11" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="getListEdit" identifier="getListEdit"/>
                    </expression>
                    <name lexicalForm="getView" startPosition="1130" length="7" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                  </expression>
                  <name lexicalForm="addContact" startPosition="1140" length="10" fullyQualifiedName="addContact" identifier="addContact"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="onChange" startPosition="974" length="8" fullyQualifiedName="onChange" identifier="onChange" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="969" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.Contact getModel() {&#xA;&#x9;&#x9;return model;&#xA;&#x9;}" startPosition="1180" length="55">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1180" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return model;&#xA;&#x9;}" startPosition="1215" length="20">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return model;" startPosition="1219" length="13">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="1226" length="5" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="model" identifier="model"/>
          </statements>
        </body>
        <name lexicalForm="getModel" startPosition="1204" length="8" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getModel" identifier="getModel" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1187" length="16" resolvedType="//@compilationUnits.7/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1187" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
            <name lexicalForm="Contact" startPosition="1196" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1187" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="1190" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1187" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setModel(im.model.Contact model) {&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}" startPosition="1238" length="182">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1238" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}" startPosition="1283" length="137">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);" startPosition="1287" length="59">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.model != null" startPosition="1291" length="18" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.model" startPosition="1291" length="10" resolvedType="//@compilationUnits.7/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1291" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                <name lexicalForm="model" startPosition="1296" length="5" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="model" identifier="model"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1305" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.model.deleteObserver(this);" startPosition="1314" length="32">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.model.deleteObserver(this)" startPosition="1314" length="31">
                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1340" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.model" startPosition="1314" length="10" resolvedType="//@compilationUnits.7/@types.0">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1314" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                  <name lexicalForm="model" startPosition="1319" length="5" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="model" identifier="model"/>
                </expression>
                <name lexicalForm="deleteObserver" startPosition="1325" length="14" fullyQualifiedName="deleteObserver" identifier="deleteObserver"/>
              </expression>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.model = model;" startPosition="1349" length="19">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.model = model" startPosition="1349" length="18" resolvedType="//@compilationUnits.7/@types.0" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.model" startPosition="1349" length="10" resolvedType="//@compilationUnits.7/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1349" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                <name lexicalForm="model" startPosition="1354" length="5" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="model" identifier="model"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="1362" length="5" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="model" identifier="model"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);" startPosition="1371" length="46">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="model != null" startPosition="1375" length="13" operator="!=">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="1375" length="5" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="model" identifier="model"/>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1384" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="model.addObserver(this);" startPosition="1393" length="24">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="model.addObserver(this)" startPosition="1393" length="23">
                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1411" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="1393" length="5" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="model" identifier="model"/>
                <name lexicalForm="addObserver" startPosition="1399" length="11" fullyQualifiedName="addObserver" identifier="addObserver"/>
              </expression>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setModel" startPosition="1250" length="8" fullyQualifiedName="setModel" identifier="setModel" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1245" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact model" startPosition="1259" length="22">
          <name lexicalForm="model" startPosition="1276" length="5" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="model" identifier="model" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1259" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1259" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="1268" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1259" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="1262" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1259" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.edit.ContactListEdit getListEdit() {&#xA;&#x9;&#x9;return listEdit;&#xA;&#x9;}" startPosition="1423" length="68">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1423" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return listEdit;&#xA;&#x9;}" startPosition="1468" length="23">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return listEdit;" startPosition="1472" length="16">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="listEdit" startPosition="1479" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit"/>
          </statements>
        </body>
        <name lexicalForm="getListEdit" startPosition="1454" length="11" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="getListEdit" identifier="getListEdit" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactListEdit" startPosition="1430" length="23" resolvedType="//@compilationUnits.5/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactListEdit" startPosition="1430" length="23" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="im.edit.ContactListEdit">
            <name lexicalForm="ContactListEdit" startPosition="1438" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="ContactListEdit" identifier="ContactListEdit"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="1430" length="7" fullyQualifiedName="im.edit">
              <name lexicalForm="edit" startPosition="1433" length="4" fullyQualifiedName="edit" identifier="edit"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1430" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setListEdit(im.edit.ContactListEdit listEdit) {&#xA;&#x9;&#x9;if (this.listEdit != listEdit) {&#xA;&#x9;&#x9;&#x9;if (this.listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;this.listEdit.removeContactEdit(this);&#xA;&#x9;&#x9;&#x9;this.listEdit = listEdit;&#xA;&#x9;&#x9;&#x9;if (listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;listEdit.addContactEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1494" length="263">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1494" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.listEdit != listEdit) {&#xA;&#x9;&#x9;&#x9;if (this.listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;this.listEdit.removeContactEdit(this);&#xA;&#x9;&#x9;&#x9;this.listEdit = listEdit;&#xA;&#x9;&#x9;&#x9;if (listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;listEdit.addContactEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1552" length="205">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.listEdit != listEdit) {&#xA;&#x9;&#x9;&#x9;if (this.listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;this.listEdit.removeContactEdit(this);&#xA;&#x9;&#x9;&#x9;this.listEdit = listEdit;&#xA;&#x9;&#x9;&#x9;if (listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;listEdit.addContactEdit(this);&#xA;&#x9;&#x9;}" startPosition="1556" length="198">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.listEdit != listEdit" startPosition="1560" length="25" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.listEdit" startPosition="1560" length="13" resolvedType="//@compilationUnits.5/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1560" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                <name lexicalForm="listEdit" startPosition="1565" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="listEdit" startPosition="1577" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;if (this.listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;this.listEdit.removeContactEdit(this);&#xA;&#x9;&#x9;&#x9;this.listEdit = listEdit;&#xA;&#x9;&#x9;&#x9;if (listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;listEdit.addContactEdit(this);&#xA;&#x9;&#x9;}" startPosition="1587" length="167">
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;this.listEdit.removeContactEdit(this);" startPosition="1592" length="69">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.listEdit != null" startPosition="1596" length="21" operator="!=">
                  <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.listEdit" startPosition="1596" length="13" resolvedType="//@compilationUnits.5/@types.0">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1596" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                    <name lexicalForm="listEdit" startPosition="1601" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1613" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.listEdit.removeContactEdit(this);" startPosition="1623" length="38">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.listEdit.removeContactEdit(this)" startPosition="1623" length="37">
                    <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1655" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                    <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.listEdit" startPosition="1623" length="13" resolvedType="//@compilationUnits.5/@types.0">
                      <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1623" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                      <name lexicalForm="listEdit" startPosition="1628" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit"/>
                    </expression>
                    <name lexicalForm="removeContactEdit" startPosition="1637" length="17" fullyQualifiedName="removeContactEdit" identifier="removeContactEdit"/>
                  </expression>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.listEdit = listEdit;" startPosition="1665" length="25">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.listEdit = listEdit" startPosition="1665" length="24" resolvedType="//@compilationUnits.5/@types.0" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.listEdit" startPosition="1665" length="13" resolvedType="//@compilationUnits.5/@types.0">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1665" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                    <name lexicalForm="listEdit" startPosition="1670" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="listEdit" startPosition="1681" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (listEdit != null)&#xA;&#x9;&#x9;&#x9;&#x9;listEdit.addContactEdit(this);" startPosition="1694" length="56">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="listEdit != null" startPosition="1698" length="16" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="listEdit" startPosition="1698" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1710" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="listEdit.addContactEdit(this);" startPosition="1720" length="30">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="listEdit.addContactEdit(this)" startPosition="1720" length="29">
                    <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1744" length="4" resolvedType="//@compilationUnits.3/@types.0"/>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="listEdit" startPosition="1720" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit"/>
                    <name lexicalForm="addContactEdit" startPosition="1729" length="14" fullyQualifiedName="addContactEdit" identifier="addContactEdit"/>
                  </expression>
                </thenStatement>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setListEdit" startPosition="1506" length="11" fullyQualifiedName="setListEdit" identifier="setListEdit" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1501" length="4" code="void"/>
        <parameters lexicalForm="im.edit.ContactListEdit listEdit" startPosition="1518" length="32">
          <name lexicalForm="listEdit" startPosition="1542" length="8" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="listEdit" identifier="listEdit" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactListEdit" startPosition="1518" length="23" resolvedType="//@compilationUnits.5/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactListEdit" startPosition="1518" length="23" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="im.edit.ContactListEdit">
              <name lexicalForm="ContactListEdit" startPosition="1526" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="ContactListEdit" identifier="ContactListEdit"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="1518" length="7" fullyQualifiedName="im.edit">
                <name lexicalForm="edit" startPosition="1521" length="4" fullyQualifiedName="edit" identifier="edit"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1518" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="ContactEdit" startPosition="31" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit" declaration="true"/>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observer" startPosition="54" length="18">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observer" startPosition="54" length="18" fullyQualifiedName="java.util.Observer">
          <name lexicalForm="Observer" startPosition="64" length="8" fullyQualifiedName="Observer" identifier="Observer"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="54" length="9" fullyQualifiedName="java.util">
            <name lexicalForm="util" startPosition="59" length="4" fullyQualifiedName="util" identifier="util"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="54" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.edit;&#xA;&#xA;public class ConversationEdit&#xA;&#x9;&#x9;implements&#xA;&#x9;&#x9;&#x9;im.view.ConversationViewListener,&#xA;&#x9;&#x9;&#x9;java.util.Observer {&#xA;&#x9;private im.model.Conversation model = null;&#xA;&#xA;&#x9;private im.view.ConversationView view = null;&#xA;&#xA;&#x9;public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public ConversationEdit(im.model.Conversation c) {&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;setView(client.getViewFactory().createConversationView());&#xA;&#x9;&#x9;getView().addListener(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public void onMessageChange(im.model.Message m) {&#xA;&#x9;&#x9;if (m.getContent() instanceof String) {&#xA;&#x9;&#x9;&#x9;im.model.ContactList list = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getContactList();&#xA;&#x9;&#x9;&#x9;getView().addContent(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.getUserName(m.getSender()) + &quot;: &quot; + m.getContent());&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;getView().addContent(m.getContent());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().toFront();&#xA;&#x9;}&#xA;&#xA;&#x9;public void onContactChange(im.model.Contact c) {&#xA;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getName());&#xA;&#x9;&#x9;} else if (c.getUserId() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getUserId());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().toFront();&#xA;&#x9;}&#xA;&#xA;&#x9;public void onConversationClose() {&#xA;&#x9;&#x9;im.InstantMessagingClient.getInstance().removeConversation(getModel());&#xA;&#x9;}&#xA;&#xA;&#x9;public void onConversationSend() {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;im.model.Contact recipient = getModel().getContact();&#xA;&#x9;&#x9;&#x9;if (recipient == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No recipient available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Contact sender = getSender(recipient);&#xA;&#x9;&#x9;&#x9;if (sender == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No sender available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;&#x9;msg.setNetwork(recipient.getNetwork());&#xA;&#x9;&#x9;&#x9;msg.setSender(sender.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setRecipient(recipient.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setContent(getView().getContent());&#xA;&#x9;&#x9;&#x9;msg.send();&#xA;&#x9;&#x9;&#x9;getModel().setMessage(msg);&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Contact getSender(im.model.Contact recipient) {&#xA;&#x9;&#x9;im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();&#xA;&#x9;&#x9;return c.getContactList().getIdentity(recipient.getNetwork());&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Conversation getModel() {&#xA;&#x9;&#x9;return model;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setModel(im.model.Conversation model) {&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.ConversationView getView() {&#xA;&#x9;&#x9;return view;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setView(im.view.ConversationView view) {&#xA;&#x9;&#x9;this.view = view;&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="3146">
    <package lexicalForm="package im.edit;" length="16">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="8" length="7" fullyQualifiedName="im.edit">
        <name lexicalForm="edit" startPosition="11" length="4" fullyQualifiedName="edit" identifier="edit"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class ConversationEdit&#xA;&#x9;&#x9;implements&#xA;&#x9;&#x9;&#x9;im.view.ConversationViewListener,&#xA;&#x9;&#x9;&#x9;java.util.Observer {&#xA;&#x9;private im.model.Conversation model = null;&#xA;&#xA;&#x9;private im.view.ConversationView view = null;&#xA;&#xA;&#x9;public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public ConversationEdit(im.model.Conversation c) {&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;setView(client.getViewFactory().createConversationView());&#xA;&#x9;&#x9;getView().addListener(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public void onMessageChange(im.model.Message m) {&#xA;&#x9;&#x9;if (m.getContent() instanceof String) {&#xA;&#x9;&#x9;&#x9;im.model.ContactList list = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getContactList();&#xA;&#x9;&#x9;&#x9;getView().addContent(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.getUserName(m.getSender()) + &quot;: &quot; + m.getContent());&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;getView().addContent(m.getContent());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().toFront();&#xA;&#x9;}&#xA;&#xA;&#x9;public void onContactChange(im.model.Contact c) {&#xA;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getName());&#xA;&#x9;&#x9;} else if (c.getUserId() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getUserId());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().toFront();&#xA;&#x9;}&#xA;&#xA;&#x9;public void onConversationClose() {&#xA;&#x9;&#x9;im.InstantMessagingClient.getInstance().removeConversation(getModel());&#xA;&#x9;}&#xA;&#xA;&#x9;public void onConversationSend() {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;im.model.Contact recipient = getModel().getContact();&#xA;&#x9;&#x9;&#x9;if (recipient == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No recipient available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Contact sender = getSender(recipient);&#xA;&#x9;&#x9;&#x9;if (sender == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No sender available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;&#x9;msg.setNetwork(recipient.getNetwork());&#xA;&#x9;&#x9;&#x9;msg.setSender(sender.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setRecipient(recipient.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setContent(getView().getContent());&#xA;&#x9;&#x9;&#x9;msg.send();&#xA;&#x9;&#x9;&#x9;getModel().setMessage(msg);&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Contact getSender(im.model.Contact recipient) {&#xA;&#x9;&#x9;im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();&#xA;&#x9;&#x9;return c.getContactList().getIdentity(recipient.getNetwork());&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Conversation getModel() {&#xA;&#x9;&#x9;return model;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setModel(im.model.Conversation model) {&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.ConversationView getView() {&#xA;&#x9;&#x9;return view;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setView(im.view.ConversationView view) {&#xA;&#x9;&#x9;this.view = view;&#xA;&#x9;}&#xA;&#xA;}" startPosition="18" length="3127" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@expression/@arguments.0 //@compilationUnits.4/@types.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.3/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.3/@body/@statements.2/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.1/@expression/@leftHandSide/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.4/@expression/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.2/@expression/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.4/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@expression/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.2/@thenStatement/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.2/@expression" resolvedTypeReferences="//@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.2/@expression/@type //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.4/@expression/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="18" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.model.Conversation model = null;" startPosition="123" length="43">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="123" length="7" private="true"/>
        <fragments lexicalForm="model = null" startPosition="153" length="12">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="161" length="4"/>
          <name lexicalForm="model" startPosition="153" length="5" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="model" identifier="model" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Conversation" startPosition="131" length="21" resolvedType="//@compilationUnits.9/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Conversation" startPosition="131" length="21" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="im.model.Conversation">
            <name lexicalForm="Conversation" startPosition="140" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="131" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="134" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="131" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.view.ConversationView view = null;" startPosition="169" length="45">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="169" length="7" private="true"/>
        <fragments lexicalForm="view = null" startPosition="202" length="11">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="209" length="4"/>
          <name lexicalForm="view" startPosition="202" length="4" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="view" identifier="view" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ConversationView" startPosition="177" length="24" resolvedType="//@compilationUnits.18/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationView" startPosition="177" length="24" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="im.view.ConversationView">
            <name lexicalForm="ConversationView" startPosition="185" length="16" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="ConversationView" identifier="ConversationView"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="177" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="180" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="177" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="217" length="596">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="217" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="282" length="531">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="286" length="524">
            <expression xsi:type="JavaAST:InstanceofExpression" lexicalForm="arg instanceof java.util.Hashtable" startPosition="290" length="34">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="arg" startPosition="290" length="3" fullyQualifiedName="arg" identifier="arg"/>
              <rightOperand xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="305" length="19">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="305" length="19" fullyQualifiedName="java.util.Hashtable">
                  <name lexicalForm="Hashtable" startPosition="315" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="305" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="310" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="305" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="326" length="484">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = (java.util.Hashtable) arg;" startPosition="331" length="50">
                <fragments lexicalForm="e = (java.util.Hashtable) arg" startPosition="351" length="29">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(java.util.Hashtable) arg" startPosition="355" length="25">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="arg" startPosition="377" length="3" fullyQualifiedName="arg" identifier="arg"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="356" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="356" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="366" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="356" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="361" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="356" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="351" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="331" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="331" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="341" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="331" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="336" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="331" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;" startPosition="385" length="58">
                <fragments lexicalForm="mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;" startPosition="392" length="50">
                  <initializer xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;" startPosition="400" length="42" operator="+">
                    <extendedOperands xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Change&quot;" startPosition="434" length="8" escapedValue="&quot;Change&quot;" literalValue="Change"/>
                    <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;on&quot;" startPosition="400" length="4" escapedValue="&quot;on&quot;" literalValue="on"/>
                    <rightOperand xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((String) e.get(&quot;name&quot;))" startPosition="407" length="24">
                      <expression xsi:type="JavaAST:CastExpression" lexicalForm="(String) e.get(&quot;name&quot;)" startPosition="408" length="22">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;name&quot;)" startPosition="417" length="13">
                          <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="423" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="417" length="1" fullyQualifiedName="e" identifier="e"/>
                          <name lexicalForm="get" startPosition="419" length="3" fullyQualifiedName="get" identifier="get"/>
                        </expression>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="409" length="6">
                          <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="409" length="6" fullyQualifiedName="String" identifier="String"/>
                        </type>
                      </expression>
                    </rightOperand>
                  </initializer>
                  <name lexicalForm="mName" startPosition="392" length="5" fullyQualifiedName="mName" identifier="mName" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="385" length="6">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="385" length="6" fullyQualifiedName="String" identifier="String"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};" startPosition="447" length="45">
                <fragments lexicalForm="parmTypes = {(Class) e.get(&quot;class&quot;)}" startPosition="455" length="36">
                  <initializer xsi:type="JavaAST:ArrayInitializer" lexicalForm="{(Class) e.get(&quot;class&quot;)}" startPosition="467" length="24">
                    <expressions xsi:type="JavaAST:CastExpression" lexicalForm="(Class) e.get(&quot;class&quot;)" startPosition="468" length="22">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;class&quot;)" startPosition="476" length="14">
                        <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="482" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="476" length="1" fullyQualifiedName="e" identifier="e"/>
                        <name lexicalForm="get" startPosition="478" length="3" fullyQualifiedName="get" identifier="get"/>
                      </expression>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="Class" startPosition="469" length="5">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="469" length="5" fullyQualifiedName="Class" identifier="Class"/>
                      </type>
                    </expressions>
                  </initializer>
                  <name lexicalForm="parmTypes" startPosition="455" length="9" fullyQualifiedName="parmTypes" identifier="parmTypes" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:ArrayType" lexicalForm="Class[]" startPosition="447" length="7" dimensions="1">
                  <componentType xsi:type="JavaAST:SimpleType" lexicalForm="Class" startPosition="447" length="5">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="447" length="5" fullyQualifiedName="Class" identifier="Class"/>
                  </componentType>
                </type>
              </statements>
              <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="496" length="310">
                <catchClauses lexicalForm="catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;}" startPosition="659" length="58">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;}" startPosition="693" length="24"/>
                  <exception lexicalForm="NoSuchMethodException nex" startPosition="666" length="25">
                    <name lexicalForm="nex" startPosition="688" length="3" fullyQualifiedName="nex" identifier="nex" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="NoSuchMethodException" startPosition="666" length="21">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="NoSuchMethodException" startPosition="666" length="21" fullyQualifiedName="NoSuchMethodException" identifier="NoSuchMethodException"/>
                    </type>
                  </exception>
                </catchClauses>
                <catchClauses lexicalForm="catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="718" length="88">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="739" length="67">
                    <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="ex.printStackTrace();" startPosition="780" length="21">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ex.printStackTrace()" startPosition="780" length="20">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="ex" startPosition="780" length="2" fullyQualifiedName="ex" identifier="ex"/>
                        <name lexicalForm="printStackTrace" startPosition="783" length="15" fullyQualifiedName="printStackTrace" identifier="printStackTrace"/>
                      </expression>
                    </statements>
                  </body>
                  <exception lexicalForm="Exception ex" startPosition="725" length="12">
                    <name lexicalForm="ex" startPosition="735" length="2" fullyQualifiedName="ex" identifier="ex" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="725" length="9">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="725" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                    </type>
                  </exception>
                </catchClauses>
                <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;}" startPosition="500" length="158">
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);" startPosition="506" length="83">
                    <fragments lexicalForm="m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes)" startPosition="531" length="57">
                      <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes)" startPosition="535" length="53">
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="mName" startPosition="571" length="5" fullyQualifiedName="mName" identifier="mName"/>
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="parmTypes" startPosition="578" length="9" fullyQualifiedName="parmTypes" identifier="parmTypes"/>
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getClass()" startPosition="535" length="10">
                          <name lexicalForm="getClass" startPosition="535" length="8" fullyQualifiedName="getClass" identifier="getClass"/>
                        </expression>
                        <name lexicalForm="getDeclaredMethod" startPosition="546" length="17" fullyQualifiedName="getDeclaredMethod" identifier="getDeclaredMethod"/>
                      </initializer>
                      <name lexicalForm="m" startPosition="531" length="1" fullyQualifiedName="m" identifier="m" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.reflect.Method" startPosition="506" length="24">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.reflect.Method" startPosition="506" length="24" fullyQualifiedName="java.lang.reflect.Method">
                        <name lexicalForm="Method" startPosition="524" length="6" fullyQualifiedName="Method" identifier="Method"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.reflect" startPosition="506" length="17" fullyQualifiedName="java.lang.reflect">
                          <name lexicalForm="reflect" startPosition="516" length="7" fullyQualifiedName="reflect" identifier="reflect"/>
                          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="506" length="9" fullyQualifiedName="java.lang">
                            <name lexicalForm="lang" startPosition="511" length="4" fullyQualifiedName="lang" identifier="lang"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="506" length="4" fullyQualifiedName="java" identifier="java"/>
                          </qualifier>
                        </qualifier>
                      </name>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Object[] args = {e.get(&quot;value&quot;)};" startPosition="594" length="33">
                    <fragments lexicalForm="args = {e.get(&quot;value&quot;)}" startPosition="603" length="23">
                      <initializer xsi:type="JavaAST:ArrayInitializer" lexicalForm="{e.get(&quot;value&quot;)}" startPosition="610" length="16">
                        <expressions xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;value&quot;)" startPosition="611" length="14">
                          <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="617" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="611" length="1" fullyQualifiedName="e" identifier="e"/>
                          <name lexicalForm="get" startPosition="613" length="3" fullyQualifiedName="get" identifier="get"/>
                        </expressions>
                      </initializer>
                      <name lexicalForm="args" startPosition="603" length="4" fullyQualifiedName="args" identifier="args" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:ArrayType" lexicalForm="Object[]" startPosition="594" length="8" dimensions="1">
                      <componentType xsi:type="JavaAST:SimpleType" lexicalForm="Object" startPosition="594" length="6">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="Object" startPosition="594" length="6" fullyQualifiedName="Object" identifier="Object"/>
                      </componentType>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="m.invoke(this, args);" startPosition="632" length="21">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="m.invoke(this, args)" startPosition="632" length="20">
                      <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="641" length="4" resolvedType="//@compilationUnits.4/@types.0"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="args" startPosition="647" length="4" fullyQualifiedName="args" identifier="args"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="m" startPosition="632" length="1" fullyQualifiedName="m" identifier="m"/>
                      <name lexicalForm="invoke" startPosition="634" length="6" fullyQualifiedName="invoke" identifier="invoke"/>
                    </expression>
                  </statements>
                </body>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="update" startPosition="229" length="6" fullyQualifiedName="update" identifier="update" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="224" length="4" code="void"/>
        <parameters lexicalForm="java.util.Observable o" startPosition="236" length="22">
          <name lexicalForm="o" startPosition="257" length="1" fullyQualifiedName="o" identifier="o" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observable" startPosition="236" length="20">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observable" startPosition="236" length="20" fullyQualifiedName="java.util.Observable">
              <name lexicalForm="Observable" startPosition="246" length="10" fullyQualifiedName="Observable" identifier="Observable"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="236" length="9" fullyQualifiedName="java.util">
                <name lexicalForm="util" startPosition="241" length="4" fullyQualifiedName="util" identifier="util"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="236" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="java.lang.Object arg" startPosition="260" length="20">
          <name lexicalForm="arg" startPosition="277" length="3" fullyQualifiedName="arg" identifier="arg" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="260" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="260" length="16" fullyQualifiedName="java.lang.Object">
              <name lexicalForm="Object" startPosition="270" length="6" fullyQualifiedName="Object" identifier="Object"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="260" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="265" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="260" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public ConversationEdit(im.model.Conversation c) {&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;setView(client.getViewFactory().createConversationView());&#xA;&#x9;&#x9;getView().addListener(this);&#xA;&#x9;}" startPosition="816" length="243" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="816" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;setView(client.getViewFactory().createConversationView());&#xA;&#x9;&#x9;getView().addListener(this);&#xA;&#x9;}" startPosition="865" length="194">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setModel(c);" startPosition="869" length="12">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setModel(c)" startPosition="869" length="11">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="878" length="1" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="c" identifier="c"/>
              <name lexicalForm="setModel" startPosition="869" length="8" fullyQualifiedName="setModel" identifier="setModel"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();" startPosition="884" length="80">
            <fragments lexicalForm="client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance()" startPosition="910" length="53">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance()" startPosition="919" length="44" resolvedType="//@compilationUnits.2/@types.0">
                <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="919" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                  <name lexicalForm="InstantMessagingClient" startPosition="922" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="919" length="2" fullyQualifiedName="im" identifier="im"/>
                </expression>
                <name lexicalForm="getInstance" startPosition="950" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
              </initializer>
              <name lexicalForm="client" startPosition="910" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.InstantMessagingClient" startPosition="884" length="25" resolvedType="//@compilationUnits.2/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="884" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                <name lexicalForm="InstantMessagingClient" startPosition="887" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="884" length="2" fullyQualifiedName="im" identifier="im"/>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setView(client.getViewFactory().createConversationView());" startPosition="967" length="58">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setView(client.getViewFactory().createConversationView())" startPosition="967" length="57">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="client.getViewFactory().createConversationView()" startPosition="975" length="48" resolvedType="//@compilationUnits.18/@types.0">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="client.getViewFactory()" startPosition="975" length="23" resolvedType="//@compilationUnits.16/@types.0">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="client" startPosition="975" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client"/>
                  <name lexicalForm="getViewFactory" startPosition="982" length="14" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="getViewFactory" identifier="getViewFactory"/>
                </expression>
                <name lexicalForm="createConversationView" startPosition="999" length="22" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="createConversationView" identifier="createConversationView"/>
              </arguments>
              <name lexicalForm="setView" startPosition="967" length="7" fullyQualifiedName="setView" identifier="setView"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().addListener(this);" startPosition="1028" length="28">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().addListener(this)" startPosition="1028" length="27">
              <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1050" length="4" resolvedType="//@compilationUnits.4/@types.0"/>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1028" length="9" resolvedType="//@compilationUnits.18/@types.0">
                <name lexicalForm="getView" startPosition="1028" length="7" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="getView" identifier="getView"/>
              </expression>
              <name lexicalForm="addListener" startPosition="1038" length="11" fullyQualifiedName="addListener" identifier="addListener"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="ConversationEdit" startPosition="823" length="16" fullyQualifiedName="ConversationEdit" identifier="ConversationEdit"/>
        <parameters lexicalForm="im.model.Conversation c" startPosition="840" length="23">
          <name lexicalForm="c" startPosition="862" length="1" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Conversation" startPosition="840" length="21" resolvedType="//@compilationUnits.9/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Conversation" startPosition="840" length="21" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="im.model.Conversation">
              <name lexicalForm="Conversation" startPosition="849" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="840" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="843" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="840" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onMessageChange(im.model.Message m) {&#xA;&#x9;&#x9;if (m.getContent() instanceof String) {&#xA;&#x9;&#x9;&#x9;im.model.ContactList list = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getContactList();&#xA;&#x9;&#x9;&#x9;getView().addContent(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.getUserName(m.getSender()) + &quot;: &quot; + m.getContent());&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;getView().addContent(m.getContent());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().toFront();&#xA;&#x9;}" startPosition="1062" length="356">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1062" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (m.getContent() instanceof String) {&#xA;&#x9;&#x9;&#x9;im.model.ContactList list = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getContactList();&#xA;&#x9;&#x9;&#x9;getView().addContent(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.getUserName(m.getSender()) + &quot;: &quot; + m.getContent());&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;getView().addContent(m.getContent());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().toFront();&#xA;&#x9;}" startPosition="1110" length="308">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (m.getContent() instanceof String) {&#xA;&#x9;&#x9;&#x9;im.model.ContactList list = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getContactList();&#xA;&#x9;&#x9;&#x9;getView().addContent(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.getUserName(m.getSender()) + &quot;: &quot; + m.getContent());&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;getView().addContent(m.getContent());&#xA;&#x9;&#x9;}" startPosition="1114" length="278">
            <elseStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;getView().addContent(m.getContent());&#xA;&#x9;&#x9;}" startPosition="1346" length="46">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().addContent(m.getContent());" startPosition="1351" length="37">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().addContent(m.getContent())" startPosition="1351" length="36">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="m.getContent()" startPosition="1372" length="14">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="m" startPosition="1372" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="m" identifier="m"/>
                    <name lexicalForm="getContent" startPosition="1374" length="10" fullyQualifiedName="getContent" identifier="getContent"/>
                  </arguments>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1351" length="9" resolvedType="//@compilationUnits.18/@types.0">
                    <name lexicalForm="getView" startPosition="1351" length="7" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                  </expression>
                  <name lexicalForm="addContent" startPosition="1361" length="10" fullyQualifiedName="addContent" identifier="addContent"/>
                </expression>
              </statements>
            </elseStatement>
            <expression xsi:type="JavaAST:InstanceofExpression" lexicalForm="m.getContent() instanceof String" startPosition="1118" length="32">
              <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="m.getContent()" startPosition="1118" length="14">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="m" startPosition="1118" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="m" identifier="m"/>
                <name lexicalForm="getContent" startPosition="1120" length="10" fullyQualifiedName="getContent" identifier="getContent"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="1144" length="6">
                <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="1144" length="6" fullyQualifiedName="String" identifier="String"/>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;im.model.ContactList list = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getContactList();&#xA;&#x9;&#x9;&#x9;getView().addContent(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.getUserName(m.getSender()) + &quot;: &quot; + m.getContent());&#xA;&#x9;&#x9;}" startPosition="1152" length="188">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.ContactList list = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getContactList();" startPosition="1157" length="91">
                <fragments lexicalForm="list = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getContactList()" startPosition="1178" length="69">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getContactList()" startPosition="1185" length="62" resolvedType="//@compilationUnits.8/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="1185" length="39" resolvedType="//@compilationUnits.2/@types.0">
                      <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="1185" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                        <name lexicalForm="InstantMessagingClient" startPosition="1188" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1185" length="2" fullyQualifiedName="im" identifier="im"/>
                      </expression>
                      <name lexicalForm="getInstance" startPosition="1211" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                    </expression>
                    <name lexicalForm="getContactList" startPosition="1231" length="14" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getContactList" identifier="getContactList"/>
                  </initializer>
                  <name lexicalForm="list" startPosition="1178" length="4" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="list" identifier="list" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.ContactList" startPosition="1157" length="20" resolvedType="//@compilationUnits.8/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.ContactList" startPosition="1157" length="20" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="im.model.ContactList">
                    <name lexicalForm="ContactList" startPosition="1166" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="ContactList" identifier="ContactList"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1157" length="8" fullyQualifiedName="im.model">
                      <name lexicalForm="model" startPosition="1160" length="5" fullyQualifiedName="model" identifier="model"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1157" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().addContent(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.getUserName(m.getSender()) + &quot;: &quot; + m.getContent());" startPosition="1252" length="84">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().addContent(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.getUserName(m.getSender()) + &quot;: &quot; + m.getContent())" startPosition="1252" length="83">
                  <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="list.getUserName(m.getSender()) + &quot;: &quot; + m.getContent()" startPosition="1279" length="55" operator="+">
                    <extendedOperands xsi:type="JavaAST:MethodInvocation" lexicalForm="m.getContent()" startPosition="1320" length="14">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="m" startPosition="1320" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="m" identifier="m"/>
                      <name lexicalForm="getContent" startPosition="1322" length="10" fullyQualifiedName="getContent" identifier="getContent"/>
                    </extendedOperands>
                    <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="list.getUserName(m.getSender())" startPosition="1279" length="31">
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="m.getSender()" startPosition="1296" length="13">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="m" startPosition="1296" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="m" identifier="m"/>
                        <name lexicalForm="getSender" startPosition="1298" length="9" fullyQualifiedName="getSender" identifier="getSender"/>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="1279" length="4" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="list" identifier="list"/>
                      <name lexicalForm="getUserName" startPosition="1284" length="11" fullyQualifiedName="getUserName" identifier="getUserName"/>
                    </leftOperand>
                    <rightOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;: &quot;" startPosition="1313" length="4" escapedValue="&quot;: &quot;" literalValue=": "/>
                  </arguments>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1252" length="9" resolvedType="//@compilationUnits.18/@types.0">
                    <name lexicalForm="getView" startPosition="1252" length="7" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                  </expression>
                  <name lexicalForm="addContent" startPosition="1262" length="10" fullyQualifiedName="addContent" identifier="addContent"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().toFront();" startPosition="1395" length="20">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().toFront()" startPosition="1395" length="19">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1395" length="9" resolvedType="//@compilationUnits.18/@types.0">
                <name lexicalForm="getView" startPosition="1395" length="7" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="getView" identifier="getView"/>
              </expression>
              <name lexicalForm="toFront" startPosition="1405" length="7" fullyQualifiedName="toFront" identifier="toFront"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onMessageChange" startPosition="1074" length="15" fullyQualifiedName="onMessageChange" identifier="onMessageChange" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1069" length="4" code="void"/>
        <parameters lexicalForm="im.model.Message m" startPosition="1090" length="18">
          <name lexicalForm="m" startPosition="1107" length="1" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="m" identifier="m" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="1090" length="16" resolvedType="//@compilationUnits.10/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="1090" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
              <name lexicalForm="Message" startPosition="1099" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1090" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="1093" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1090" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onContactChange(im.model.Contact c) {&#xA;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getName());&#xA;&#x9;&#x9;} else if (c.getUserId() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getUserId());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().toFront();&#xA;&#x9;}" startPosition="1421" length="220">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1421" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getName());&#xA;&#x9;&#x9;} else if (c.getUserId() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getUserId());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().toFront();&#xA;&#x9;}" startPosition="1469" length="172">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (c.getName() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getName());&#xA;&#x9;&#x9;} else if (c.getUserId() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getUserId());&#xA;&#x9;&#x9;}" startPosition="1473" length="142">
            <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (c.getUserId() != null) {&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getUserId());&#xA;&#x9;&#x9;}" startPosition="1545" length="70">
              <expression xsi:type="JavaAST:InfixExpression" lexicalForm="c.getUserId() != null" startPosition="1549" length="21" operator="!=">
                <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getUserId()" startPosition="1549" length="13">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1549" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                  <name lexicalForm="getUserId" startPosition="1551" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                </leftOperand>
                <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1566" length="4"/>
              </expression>
              <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getUserId());&#xA;&#x9;&#x9;}" startPosition="1572" length="43">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().setTitle(c.getUserId());" startPosition="1577" length="34">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().setTitle(c.getUserId())" startPosition="1577" length="33">
                    <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getUserId()" startPosition="1596" length="13">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1596" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <name lexicalForm="getUserId" startPosition="1598" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                    </arguments>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1577" length="9" resolvedType="//@compilationUnits.18/@types.0">
                      <name lexicalForm="getView" startPosition="1577" length="7" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                    </expression>
                    <name lexicalForm="setTitle" startPosition="1587" length="8" fullyQualifiedName="setTitle" identifier="setTitle"/>
                  </expression>
                </statements>
              </thenStatement>
            </elseStatement>
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="c.getName() != null" startPosition="1477" length="19" operator="!=">
              <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getName()" startPosition="1477" length="11">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1477" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                <name lexicalForm="getName" startPosition="1479" length="7" fullyQualifiedName="getName" identifier="getName"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1492" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;getView().setTitle(c.getName());&#xA;&#x9;&#x9;}" startPosition="1498" length="41">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().setTitle(c.getName());" startPosition="1503" length="32">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().setTitle(c.getName())" startPosition="1503" length="31">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getName()" startPosition="1522" length="11">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1522" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                    <name lexicalForm="getName" startPosition="1524" length="7" fullyQualifiedName="getName" identifier="getName"/>
                  </arguments>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1503" length="9" resolvedType="//@compilationUnits.18/@types.0">
                    <name lexicalForm="getView" startPosition="1503" length="7" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                  </expression>
                  <name lexicalForm="setTitle" startPosition="1513" length="8" fullyQualifiedName="setTitle" identifier="setTitle"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().toFront();" startPosition="1618" length="20">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().toFront()" startPosition="1618" length="19">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1618" length="9" resolvedType="//@compilationUnits.18/@types.0">
                <name lexicalForm="getView" startPosition="1618" length="7" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="getView" identifier="getView"/>
              </expression>
              <name lexicalForm="toFront" startPosition="1628" length="7" fullyQualifiedName="toFront" identifier="toFront"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onContactChange" startPosition="1433" length="15" fullyQualifiedName="onContactChange" identifier="onContactChange" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1428" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact c" startPosition="1449" length="18">
          <name lexicalForm="c" startPosition="1466" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1449" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1449" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="1458" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1449" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="1452" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1449" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onConversationClose() {&#xA;&#x9;&#x9;im.InstantMessagingClient.getInstance().removeConversation(getModel());&#xA;&#x9;}" startPosition="1644" length="112">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1644" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;im.InstantMessagingClient.getInstance().removeConversation(getModel());&#xA;&#x9;}" startPosition="1678" length="78">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="im.InstantMessagingClient.getInstance().removeConversation(getModel());" startPosition="1682" length="71">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance().removeConversation(getModel())" startPosition="1682" length="70">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="1741" length="10" resolvedType="//@compilationUnits.9/@types.0">
                <name lexicalForm="getModel" startPosition="1741" length="8" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
              </arguments>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="1682" length="39" resolvedType="//@compilationUnits.2/@types.0">
                <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="1682" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                  <name lexicalForm="InstantMessagingClient" startPosition="1685" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1682" length="2" fullyQualifiedName="im" identifier="im"/>
                </expression>
                <name lexicalForm="getInstance" startPosition="1708" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
              </expression>
              <name lexicalForm="removeConversation" startPosition="1722" length="18" fullyQualifiedName="removeConversation" identifier="removeConversation"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onConversationClose" startPosition="1656" length="19" fullyQualifiedName="onConversationClose" identifier="onConversationClose" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1651" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onConversationSend() {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;im.model.Contact recipient = getModel().getContact();&#xA;&#x9;&#x9;&#x9;if (recipient == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No recipient available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Contact sender = getSender(recipient);&#xA;&#x9;&#x9;&#x9;if (sender == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No sender available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;&#x9;msg.setNetwork(recipient.getNetwork());&#xA;&#x9;&#x9;&#x9;msg.setSender(sender.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setRecipient(recipient.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setContent(getView().getContent());&#xA;&#x9;&#x9;&#x9;msg.send();&#xA;&#x9;&#x9;&#x9;getModel().setMessage(msg);&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1759" length="781">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1759" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;im.model.Contact recipient = getModel().getContact();&#xA;&#x9;&#x9;&#x9;if (recipient == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No recipient available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Contact sender = getSender(recipient);&#xA;&#x9;&#x9;&#x9;if (sender == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No sender available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;&#x9;msg.setNetwork(recipient.getNetwork());&#xA;&#x9;&#x9;&#x9;msg.setSender(sender.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setRecipient(recipient.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setContent(getView().getContent());&#xA;&#x9;&#x9;&#x9;msg.send();&#xA;&#x9;&#x9;&#x9;getModel().setMessage(msg);&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1792" length="748">
          <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;im.model.Contact recipient = getModel().getContact();&#xA;&#x9;&#x9;&#x9;if (recipient == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No recipient available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Contact sender = getSender(recipient);&#xA;&#x9;&#x9;&#x9;if (sender == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No sender available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;&#x9;msg.setNetwork(recipient.getNetwork());&#xA;&#x9;&#x9;&#x9;msg.setSender(sender.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setRecipient(recipient.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setContent(getView().getContent());&#xA;&#x9;&#x9;&#x9;msg.send();&#xA;&#x9;&#x9;&#x9;getModel().setMessage(msg);&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}" startPosition="1796" length="741">
            <catchClauses lexicalForm="catch (Exception e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}" startPosition="2458" length="79">
              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}" startPosition="2478" length="59">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="im.InstantMessagingClient.getInstance().report(e);" startPosition="2483" length="50">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance().report(e)" startPosition="2483" length="49">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2530" length="1" fullyQualifiedName="e" identifier="e"/>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="2483" length="39" resolvedType="//@compilationUnits.2/@types.0">
                      <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="2483" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                        <name lexicalForm="InstantMessagingClient" startPosition="2486" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2483" length="2" fullyQualifiedName="im" identifier="im"/>
                      </expression>
                      <name lexicalForm="getInstance" startPosition="2509" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                    </expression>
                    <name lexicalForm="report" startPosition="2523" length="6" fullyQualifiedName="report" identifier="report"/>
                  </expression>
                </statements>
              </body>
              <exception lexicalForm="Exception e" startPosition="2465" length="11">
                <name lexicalForm="e" startPosition="2475" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="2465" length="9">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="2465" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                </type>
              </exception>
            </catchClauses>
            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;im.model.Contact recipient = getModel().getContact();&#xA;&#x9;&#x9;&#x9;if (recipient == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No recipient available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Contact sender = getSender(recipient);&#xA;&#x9;&#x9;&#x9;if (sender == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No sender available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;&#x9;msg.setNetwork(recipient.getNetwork());&#xA;&#x9;&#x9;&#x9;msg.setSender(sender.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setRecipient(recipient.getUserId());&#xA;&#x9;&#x9;&#x9;msg.setContent(getView().getContent());&#xA;&#x9;&#x9;&#x9;msg.send();&#xA;&#x9;&#x9;&#x9;getModel().setMessage(msg);&#xA;&#x9;&#x9;}" startPosition="1800" length="657">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Contact recipient = getModel().getContact();" startPosition="1805" length="53">
                <fragments lexicalForm="recipient = getModel().getContact()" startPosition="1822" length="35">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel().getContact()" startPosition="1834" length="23" resolvedType="//@compilationUnits.7/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="1834" length="10" resolvedType="//@compilationUnits.9/@types.0">
                      <name lexicalForm="getModel" startPosition="1834" length="8" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                    </expression>
                    <name lexicalForm="getContact" startPosition="1845" length="10" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getContact" identifier="getContact"/>
                  </initializer>
                  <name lexicalForm="recipient" startPosition="1822" length="9" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recipient" identifier="recipient" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1805" length="16" resolvedType="//@compilationUnits.7/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1805" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                    <name lexicalForm="Contact" startPosition="1814" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1805" length="8" fullyQualifiedName="im.model">
                      <name lexicalForm="model" startPosition="1808" length="5" fullyQualifiedName="model" identifier="model"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1805" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (recipient == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No recipient available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="1862" length="139">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="recipient == null" startPosition="1866" length="17" operator="==">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="recipient" startPosition="1866" length="9" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recipient" identifier="recipient"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1879" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No recipient available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="1885" length="116">
                  <statements xsi:type="JavaAST:ThrowStatement" lexicalForm="throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No recipient available in ConversationEdit.onConversationSend()&quot;);" startPosition="1891" length="105">
                    <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No recipient available in ConversationEdit.onConversationSend()&quot;)" startPosition="1897" length="98">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;No recipient available in ConversationEdit.onConversationSend()&quot;" startPosition="1929" length="65" escapedValue="&quot;No recipient available in ConversationEdit.onConversationSend()&quot;" literalValue="No recipient available in ConversationEdit.onConversationSend()"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="NullPointerException" startPosition="1901" length="20">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="NullPointerException" startPosition="1901" length="20" fullyQualifiedName="NullPointerException" identifier="NullPointerException"/>
                      </type>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Contact sender = getSender(recipient);" startPosition="2005" length="47">
                <fragments lexicalForm="sender = getSender(recipient)" startPosition="2022" length="29">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getSender(recipient)" startPosition="2031" length="20" resolvedType="//@compilationUnits.7/@types.0">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="recipient" startPosition="2041" length="9" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recipient" identifier="recipient"/>
                    <name lexicalForm="getSender" startPosition="2031" length="9" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getSender" identifier="getSender"/>
                  </initializer>
                  <name lexicalForm="sender" startPosition="2022" length="6" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="sender" identifier="sender" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2005" length="16" resolvedType="//@compilationUnits.7/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2005" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                    <name lexicalForm="Contact" startPosition="2014" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2005" length="8" fullyQualifiedName="im.model">
                      <name lexicalForm="model" startPosition="2008" length="5" fullyQualifiedName="model" identifier="model"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2005" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (sender == null) {&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No sender available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="2056" length="133">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="sender == null" startPosition="2060" length="14" operator="==">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="sender" startPosition="2060" length="6" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="sender" identifier="sender"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="2070" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No sender available in ConversationEdit.onConversationSend()&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="2076" length="113">
                  <statements xsi:type="JavaAST:ThrowStatement" lexicalForm="throw new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No sender available in ConversationEdit.onConversationSend()&quot;);" startPosition="2082" length="102">
                    <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new NullPointerException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;No sender available in ConversationEdit.onConversationSend()&quot;)" startPosition="2088" length="95">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;No sender available in ConversationEdit.onConversationSend()&quot;" startPosition="2120" length="62" escapedValue="&quot;No sender available in ConversationEdit.onConversationSend()&quot;" literalValue="No sender available in ConversationEdit.onConversationSend()"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="NullPointerException" startPosition="2092" length="20">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="NullPointerException" startPosition="2092" length="20" fullyQualifiedName="NullPointerException" identifier="NullPointerException"/>
                      </type>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Message msg = new im.model.Message();" startPosition="2193" length="46">
                <fragments lexicalForm="msg = new im.model.Message()" startPosition="2210" length="28">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new im.model.Message()" startPosition="2216" length="22" resolvedType="//@compilationUnits.10/@types.0">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="2220" length="16" resolvedType="//@compilationUnits.10/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="2220" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                        <name lexicalForm="Message" startPosition="2229" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2220" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="2223" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2220" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="msg" startPosition="2210" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="2193" length="16" resolvedType="//@compilationUnits.10/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="2193" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                    <name lexicalForm="Message" startPosition="2202" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2193" length="8" fullyQualifiedName="im.model">
                      <name lexicalForm="model" startPosition="2196" length="5" fullyQualifiedName="model" identifier="model"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2193" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.setNetwork(recipient.getNetwork());" startPosition="2243" length="39">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.setNetwork(recipient.getNetwork())" startPosition="2243" length="38">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="recipient.getNetwork()" startPosition="2258" length="22" resolvedType="//@compilationUnits.12/@types.0">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="recipient" startPosition="2258" length="9" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recipient" identifier="recipient"/>
                    <name lexicalForm="getNetwork" startPosition="2268" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="2243" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                  <name lexicalForm="setNetwork" startPosition="2247" length="10" fullyQualifiedName="setNetwork" identifier="setNetwork"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.setSender(sender.getUserId());" startPosition="2286" length="34">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.setSender(sender.getUserId())" startPosition="2286" length="33">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="sender.getUserId()" startPosition="2300" length="18">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="sender" startPosition="2300" length="6" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="sender" identifier="sender"/>
                    <name lexicalForm="getUserId" startPosition="2307" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="2286" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                  <name lexicalForm="setSender" startPosition="2290" length="9" fullyQualifiedName="setSender" identifier="setSender"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.setRecipient(recipient.getUserId());" startPosition="2324" length="40">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.setRecipient(recipient.getUserId())" startPosition="2324" length="39">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="recipient.getUserId()" startPosition="2341" length="21">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="recipient" startPosition="2341" length="9" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recipient" identifier="recipient"/>
                    <name lexicalForm="getUserId" startPosition="2351" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="2324" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                  <name lexicalForm="setRecipient" startPosition="2328" length="12" fullyQualifiedName="setRecipient" identifier="setRecipient"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.setContent(getView().getContent());" startPosition="2368" length="39">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.setContent(getView().getContent())" startPosition="2368" length="38">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().getContent()" startPosition="2383" length="22">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="2383" length="9" resolvedType="//@compilationUnits.18/@types.0">
                      <name lexicalForm="getView" startPosition="2383" length="7" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                    </expression>
                    <name lexicalForm="getContent" startPosition="2393" length="10" fullyQualifiedName="getContent" identifier="getContent"/>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="2368" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                  <name lexicalForm="setContent" startPosition="2372" length="10" fullyQualifiedName="setContent" identifier="setContent"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.send();" startPosition="2411" length="11">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.send()" startPosition="2411" length="10">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="2411" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                  <name lexicalForm="send" startPosition="2415" length="4" fullyQualifiedName="send" identifier="send"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getModel().setMessage(msg);" startPosition="2426" length="27">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel().setMessage(msg)" startPosition="2426" length="26">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="2448" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="2426" length="10" resolvedType="//@compilationUnits.9/@types.0">
                    <name lexicalForm="getModel" startPosition="2426" length="8" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                  </expression>
                  <name lexicalForm="setMessage" startPosition="2437" length="10" fullyQualifiedName="setMessage" identifier="setMessage"/>
                </expression>
              </statements>
            </body>
          </statements>
        </body>
        <name lexicalForm="onConversationSend" startPosition="1771" length="18" fullyQualifiedName="onConversationSend" identifier="onConversationSend" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1766" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.Contact getSender(im.model.Contact recipient) {&#xA;&#x9;&#x9;im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();&#xA;&#x9;&#x9;return c.getContactList().getIdentity(recipient.getNetwork());&#xA;&#x9;}" startPosition="2543" length="204">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2543" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();&#xA;&#x9;&#x9;return c.getContactList().getIdentity(recipient.getNetwork());&#xA;&#x9;}" startPosition="2605" length="142">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();" startPosition="2609" length="70">
            <fragments lexicalForm="c = im.InstantMessagingClient.getInstance()" startPosition="2635" length="43">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="2639" length="39" resolvedType="//@compilationUnits.2/@types.0">
                <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="2639" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                  <name lexicalForm="InstantMessagingClient" startPosition="2642" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2639" length="2" fullyQualifiedName="im" identifier="im"/>
                </expression>
                <name lexicalForm="getInstance" startPosition="2665" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
              </initializer>
              <name lexicalForm="c" startPosition="2635" length="1" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.InstantMessagingClient" startPosition="2609" length="25" resolvedType="//@compilationUnits.2/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="2609" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                <name lexicalForm="InstantMessagingClient" startPosition="2612" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2609" length="2" fullyQualifiedName="im" identifier="im"/>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return c.getContactList().getIdentity(recipient.getNetwork());" startPosition="2682" length="62">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getContactList().getIdentity(recipient.getNetwork())" startPosition="2689" length="54" resolvedType="//@compilationUnits.11/@types.0">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="recipient.getNetwork()" startPosition="2720" length="22" resolvedType="//@compilationUnits.12/@types.0">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="recipient" startPosition="2720" length="9" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recipient" identifier="recipient"/>
                <name lexicalForm="getNetwork" startPosition="2730" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
              </arguments>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getContactList()" startPosition="2689" length="18" resolvedType="//@compilationUnits.8/@types.0">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2689" length="1" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="c" identifier="c"/>
                <name lexicalForm="getContactList" startPosition="2691" length="14" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getContactList" identifier="getContactList"/>
              </expression>
              <name lexicalForm="getIdentity" startPosition="2708" length="11" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="getIdentity" identifier="getIdentity"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getSender" startPosition="2567" length="9" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getSender" identifier="getSender" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2550" length="16" resolvedType="//@compilationUnits.7/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2550" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
            <name lexicalForm="Contact" startPosition="2559" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2550" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="2553" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2550" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
        <parameters lexicalForm="im.model.Contact recipient" startPosition="2577" length="26">
          <name lexicalForm="recipient" startPosition="2594" length="9" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recipient" identifier="recipient" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2577" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2577" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="2586" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2577" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="2580" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2577" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.Conversation getModel() {&#xA;&#x9;&#x9;return model;&#xA;&#x9;}" startPosition="2750" length="60">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2750" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return model;&#xA;&#x9;}" startPosition="2790" length="20">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return model;" startPosition="2794" length="13">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="2801" length="5" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="model" identifier="model"/>
          </statements>
        </body>
        <name lexicalForm="getModel" startPosition="2779" length="8" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="getModel" identifier="getModel" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Conversation" startPosition="2757" length="21" resolvedType="//@compilationUnits.9/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Conversation" startPosition="2757" length="21" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="im.model.Conversation">
            <name lexicalForm="Conversation" startPosition="2766" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2757" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="2760" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2757" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setModel(im.model.Conversation model) {&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}" startPosition="2813" length="187">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2813" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}" startPosition="2863" length="137">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);" startPosition="2867" length="59">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.model != null" startPosition="2871" length="18" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.model" startPosition="2871" length="10" resolvedType="//@compilationUnits.9/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="2871" length="4" resolvedType="//@compilationUnits.4/@types.0"/>
                <name lexicalForm="model" startPosition="2876" length="5" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="model" identifier="model"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="2885" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.model.deleteObserver(this);" startPosition="2894" length="32">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.model.deleteObserver(this)" startPosition="2894" length="31">
                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="2920" length="4" resolvedType="//@compilationUnits.4/@types.0"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.model" startPosition="2894" length="10" resolvedType="//@compilationUnits.9/@types.0">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="2894" length="4" resolvedType="//@compilationUnits.4/@types.0"/>
                  <name lexicalForm="model" startPosition="2899" length="5" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="model" identifier="model"/>
                </expression>
                <name lexicalForm="deleteObserver" startPosition="2905" length="14" fullyQualifiedName="deleteObserver" identifier="deleteObserver"/>
              </expression>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.model = model;" startPosition="2929" length="19">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.model = model" startPosition="2929" length="18" resolvedType="//@compilationUnits.9/@types.0" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.model" startPosition="2929" length="10" resolvedType="//@compilationUnits.9/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="2929" length="4" resolvedType="//@compilationUnits.4/@types.0"/>
                <name lexicalForm="model" startPosition="2934" length="5" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="model" identifier="model"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="2942" length="5" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="model" identifier="model"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);" startPosition="2951" length="46">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="model != null" startPosition="2955" length="13" operator="!=">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="2955" length="5" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="model" identifier="model"/>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="2964" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="model.addObserver(this);" startPosition="2973" length="24">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="model.addObserver(this)" startPosition="2973" length="23">
                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="2991" length="4" resolvedType="//@compilationUnits.4/@types.0"/>
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="2973" length="5" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="model" identifier="model"/>
                <name lexicalForm="addObserver" startPosition="2979" length="11" fullyQualifiedName="addObserver" identifier="addObserver"/>
              </expression>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setModel" startPosition="2825" length="8" fullyQualifiedName="setModel" identifier="setModel" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2820" length="4" code="void"/>
        <parameters lexicalForm="im.model.Conversation model" startPosition="2834" length="27">
          <name lexicalForm="model" startPosition="2856" length="5" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="model" identifier="model" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Conversation" startPosition="2834" length="21" resolvedType="//@compilationUnits.9/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Conversation" startPosition="2834" length="21" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="im.model.Conversation">
              <name lexicalForm="Conversation" startPosition="2843" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2834" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="2837" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2834" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.view.ConversationView getView() {&#xA;&#x9;&#x9;return view;&#xA;&#x9;}" startPosition="3003" length="61">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3003" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return view;&#xA;&#x9;}" startPosition="3045" length="19">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return view;" startPosition="3049" length="12">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="view" startPosition="3056" length="4" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="view" identifier="view"/>
          </statements>
        </body>
        <name lexicalForm="getView" startPosition="3035" length="7" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="getView" identifier="getView" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ConversationView" startPosition="3010" length="24" resolvedType="//@compilationUnits.18/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationView" startPosition="3010" length="24" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="im.view.ConversationView">
            <name lexicalForm="ConversationView" startPosition="3018" length="16" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="ConversationView" identifier="ConversationView"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="3010" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="3013" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3010" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setView(im.view.ConversationView view) {&#xA;&#x9;&#x9;this.view = view;&#xA;&#x9;}" startPosition="3067" length="75">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3067" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.view = view;&#xA;&#x9;}" startPosition="3118" length="24">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.view = view;" startPosition="3122" length="17">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.view = view" startPosition="3122" length="16" resolvedType="//@compilationUnits.18/@types.0" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.view" startPosition="3122" length="9" resolvedType="//@compilationUnits.18/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="3122" length="4" resolvedType="//@compilationUnits.4/@types.0"/>
                <name lexicalForm="view" startPosition="3127" length="4" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="view" identifier="view"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="view" startPosition="3134" length="4" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="view" identifier="view"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setView" startPosition="3079" length="7" fullyQualifiedName="setView" identifier="setView" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3074" length="4" code="void"/>
        <parameters lexicalForm="im.view.ConversationView view" startPosition="3087" length="29">
          <name lexicalForm="view" startPosition="3112" length="4" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="view" identifier="view" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ConversationView" startPosition="3087" length="24" resolvedType="//@compilationUnits.18/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationView" startPosition="3087" length="24" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="im.view.ConversationView">
              <name lexicalForm="ConversationView" startPosition="3095" length="16" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="ConversationView" identifier="ConversationView"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="3087" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="3090" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3087" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="ConversationEdit" startPosition="31" length="16" resolvedType="//@compilationUnits.4/@types.0" fullyQualifiedName="ConversationEdit" identifier="ConversationEdit" declaration="true"/>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ConversationViewListener" startPosition="64" length="32" resolvedType="//@compilationUnits.22/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationViewListener" startPosition="64" length="32" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="im.view.ConversationViewListener">
          <name lexicalForm="ConversationViewListener" startPosition="72" length="24" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="ConversationViewListener" identifier="ConversationViewListener"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="64" length="7" fullyQualifiedName="im.view">
            <name lexicalForm="view" startPosition="67" length="4" fullyQualifiedName="view" identifier="view"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="64" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observer" startPosition="101" length="18">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observer" startPosition="101" length="18" fullyQualifiedName="java.util.Observer">
          <name lexicalForm="Observer" startPosition="111" length="8" fullyQualifiedName="Observer" identifier="Observer"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="101" length="9" fullyQualifiedName="java.util">
            <name lexicalForm="util" startPosition="106" length="4" fullyQualifiedName="util" identifier="util"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="101" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.edit;&#xA;&#xA;import im.InstantMessagingClient;&#xA;&#xA;public class ContactListEdit&#xA;&#x9;&#x9;implements&#xA;&#x9;&#x9;&#x9;im.view.NewContactDialogListener,&#xA;&#x9;&#x9;&#x9;im.view.ContactListViewListener,&#xA;&#x9;&#x9;&#x9;java.util.Observer {&#xA;&#x9;private im.model.ContactList model = null;&#xA;&#xA;&#x9;private im.view.ContactListView view = null;&#xA;&#xA;&#x9;private java.util.List contactEdit = new java.util.ArrayList();&#xA;&#xA;&#x9;public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public ContactListEdit(im.model.ContactList c) {&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;&#x9;InstantMessagingClient client = InstantMessagingClient.getInstance();&#xA;&#x9;&#x9;setView(client.getViewFactory().createContactListView());&#xA;&#x9;&#x9;getView().addListener(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public void onContactChange(im.model.Contact c) {&#xA;&#x9;&#x9;int index = getModel().getIndexOfContact(c);&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;ContactEdit edit = new ContactEdit(c);&#xA;&#x9;&#x9;&#x9;insertContactEdit(edit, index);&#xA;&#x9;&#x9;&#x9;getView().addContact(c, index);&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;ContactEdit edit = getContactEditFor(c);&#xA;&#x9;&#x9;&#x9;index = getIndexOfContactEdit(edit);&#xA;&#x9;&#x9;&#x9;getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;removeContactEdit(edit);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void onContactListAdd() {&#xA;&#x9;&#x9;getView().setEnabled(false);&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;im.view.NewContactDialog dlg = client.getViewFactory()&#xA;&#x9;&#x9;&#x9;&#x9;.createNewContactDialog();&#xA;&#x9;&#x9;for (java.util.Enumeration ns = client.getNetworks(); ns&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;dlg&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.addNetwork(((im.networking.Network) ns.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getName());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;dlg.addListener(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public void onContactListRemove() {&#xA;&#x9;&#x9;int index = getView().getSelectedContact();&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;if (c instanceof im.model.Identity) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = (im.model.Identity) c;&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().logout();&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().removeContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;getModel().removeContact(c);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void onContactListAction() {&#xA;&#x9;&#x9;int index = getView().getSelectedContact();&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;&#x9;// reuse existing conversation, if any&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration cs = client.getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Conversation conv = (im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Contact contact = conv.getContact();&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(new im.model.Contact());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;// else new conversation&#xA;&#x9;&#x9;&#x9;im.model.Conversation conv = new im.model.Conversation();&#xA;&#x9;&#x9;&#x9;new ConversationEdit(conv);&#xA;&#x9;&#x9;&#x9;client.addConversation(conv);&#xA;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void onNewContactDialogClose(boolean okClicked,&#xA;&#x9;&#x9;&#x9;im.view.NewContactDialog dlg) {&#xA;&#x9;&#x9;if (okClicked) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c;&#xA;&#x9;&#x9;&#x9;im.networking.Network n = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getNetworkAt(dlg.getNetwork());&#xA;&#x9;&#x9;&#x9;if (getModel().getIdentity(n) == null) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = new im.model.Identity();&#xA;&#x9;&#x9;&#x9;&#x9;id.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;id.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;id.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;id.setPassword(dlg.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;c = id;&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;c.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;c.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;c.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().addContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().setEnabled(true);&#xA;&#x9;}&#xA;&#xA;&#x9;private im.edit.ContactEdit getContactEditFor(im.model.Contact c) {&#xA;&#x9;&#x9;for (java.util.Enumeration ces = getContactEdits(); ces&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;ContactEdit ce = (ContactEdit) ces.nextElement();&#xA;&#x9;&#x9;&#x9;if (ce.getModel().equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;return ce;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.ContactList getModel() {&#xA;&#x9;&#x9;return model;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setModel(im.model.ContactList model) {&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.ContactListView getView() {&#xA;&#x9;&#x9;return view;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setView(im.view.ContactListView view) {&#xA;&#x9;&#x9;this.view = view;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getContactEdits() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(contactEdit&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addContactEdit(im.edit.ContactEdit contactEdit) {&#xA;&#x9;&#x9;if (!this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeContactEdit(im.edit.ContactEdit contactEdit) {&#xA;&#x9;&#x9;if (this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;this.contactEdit.remove(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(null);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.edit.ContactEdit getContactEditAt(int index) {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.edit.ContactEdit) contactEdit.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public int getIndexOfContactEdit(im.edit.ContactEdit contactEdit) {&#xA;&#x9;&#x9;return this.contactEdit.indexOf(contactEdit);&#xA;&#x9;}&#xA;&#xA;&#x9;public void insertContactEdit(im.edit.ContactEdit contactEdit, int index) {&#xA;&#x9;&#x9;if (!this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(index, contactEdit);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="5832">
    <package lexicalForm="package im.edit;" length="16">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="8" length="7" fullyQualifiedName="im.edit">
        <name lexicalForm="edit" startPosition="11" length="4" fullyQualifiedName="edit" identifier="edit"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <imports lexicalForm="import im.InstantMessagingClient;" startPosition="18" length="33">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="25" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
        <name lexicalForm="InstantMessagingClient" startPosition="28" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="25" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </imports>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class ContactListEdit&#xA;&#x9;&#x9;implements&#xA;&#x9;&#x9;&#x9;im.view.NewContactDialogListener,&#xA;&#x9;&#x9;&#x9;im.view.ContactListViewListener,&#xA;&#x9;&#x9;&#x9;java.util.Observer {&#xA;&#x9;private im.model.ContactList model = null;&#xA;&#xA;&#x9;private im.view.ContactListView view = null;&#xA;&#xA;&#x9;private java.util.List contactEdit = new java.util.ArrayList();&#xA;&#xA;&#x9;public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public ContactListEdit(im.model.ContactList c) {&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;&#x9;InstantMessagingClient client = InstantMessagingClient.getInstance();&#xA;&#x9;&#x9;setView(client.getViewFactory().createContactListView());&#xA;&#x9;&#x9;getView().addListener(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public void onContactChange(im.model.Contact c) {&#xA;&#x9;&#x9;int index = getModel().getIndexOfContact(c);&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;ContactEdit edit = new ContactEdit(c);&#xA;&#x9;&#x9;&#x9;insertContactEdit(edit, index);&#xA;&#x9;&#x9;&#x9;getView().addContact(c, index);&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;ContactEdit edit = getContactEditFor(c);&#xA;&#x9;&#x9;&#x9;index = getIndexOfContactEdit(edit);&#xA;&#x9;&#x9;&#x9;getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;removeContactEdit(edit);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void onContactListAdd() {&#xA;&#x9;&#x9;getView().setEnabled(false);&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;im.view.NewContactDialog dlg = client.getViewFactory()&#xA;&#x9;&#x9;&#x9;&#x9;.createNewContactDialog();&#xA;&#x9;&#x9;for (java.util.Enumeration ns = client.getNetworks(); ns&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;dlg&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.addNetwork(((im.networking.Network) ns.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getName());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;dlg.addListener(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public void onContactListRemove() {&#xA;&#x9;&#x9;int index = getView().getSelectedContact();&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;if (c instanceof im.model.Identity) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = (im.model.Identity) c;&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().logout();&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().removeContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;getModel().removeContact(c);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void onContactListAction() {&#xA;&#x9;&#x9;int index = getView().getSelectedContact();&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;&#x9;// reuse existing conversation, if any&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration cs = client.getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Conversation conv = (im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Contact contact = conv.getContact();&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(new im.model.Contact());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;// else new conversation&#xA;&#x9;&#x9;&#x9;im.model.Conversation conv = new im.model.Conversation();&#xA;&#x9;&#x9;&#x9;new ConversationEdit(conv);&#xA;&#x9;&#x9;&#x9;client.addConversation(conv);&#xA;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void onNewContactDialogClose(boolean okClicked,&#xA;&#x9;&#x9;&#x9;im.view.NewContactDialog dlg) {&#xA;&#x9;&#x9;if (okClicked) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c;&#xA;&#x9;&#x9;&#x9;im.networking.Network n = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getNetworkAt(dlg.getNetwork());&#xA;&#x9;&#x9;&#x9;if (getModel().getIdentity(n) == null) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = new im.model.Identity();&#xA;&#x9;&#x9;&#x9;&#x9;id.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;id.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;id.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;id.setPassword(dlg.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;c = id;&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;c.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;c.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;c.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().addContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().setEnabled(true);&#xA;&#x9;}&#xA;&#xA;&#x9;private im.edit.ContactEdit getContactEditFor(im.model.Contact c) {&#xA;&#x9;&#x9;for (java.util.Enumeration ces = getContactEdits(); ces&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;ContactEdit ce = (ContactEdit) ces.nextElement();&#xA;&#x9;&#x9;&#x9;if (ce.getModel().equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;return ce;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.ContactList getModel() {&#xA;&#x9;&#x9;return model;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setModel(im.model.ContactList model) {&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.ContactListView getView() {&#xA;&#x9;&#x9;return view;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setView(im.view.ContactListView view) {&#xA;&#x9;&#x9;this.view = view;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getContactEdits() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(contactEdit&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addContactEdit(im.edit.ContactEdit contactEdit) {&#xA;&#x9;&#x9;if (!this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeContactEdit(im.edit.ContactEdit contactEdit) {&#xA;&#x9;&#x9;if (this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;this.contactEdit.remove(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(null);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.edit.ContactEdit getContactEditAt(int index) {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.edit.ContactEdit) contactEdit.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public int getIndexOfContactEdit(im.edit.ContactEdit contactEdit) {&#xA;&#x9;&#x9;return this.contactEdit.indexOf(contactEdit);&#xA;&#x9;}&#xA;&#xA;&#x9;public void insertContactEdit(im.edit.ContactEdit contactEdit, int index) {&#xA;&#x9;&#x9;if (!this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(index, contactEdit);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}" startPosition="53" length="5778" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.1/@expression/@leftHandSide/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.16/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.2/@thenStatement/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.3/@body/@statements.2/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.18/@body/@statements.0/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.0/@fragments.0/@initializer/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.18/@returnType/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.2/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.18/@returnType/@name //@compilationUnits.3/@types.0/@bodyDeclarations.9/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@expression/@arguments.0 //@compilationUnits.3/@types.0/@bodyDeclarations.9/@body/@statements.0/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.2/@expression/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.9/@body/@statements.1/@body/@statements.2/@expression/@arguments.0 //@compilationUnits.3/@types.0/@bodyDeclarations.10/@parameters.0/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftOperand/@name //@compilationUnits.5/@types.0/@bodyDeclarations.14/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.5/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.19/@body/@statements.0/@expression/@rightHandSide //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@expression/@expression/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.16/@body/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.17/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.5/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.9/@body/@statements.1/@body/@statements.2/@expression/@arguments.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.5/@fragments.0/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.1/@expression/@rightHandSide //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.1/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.20/@body/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.9/@returnType/@name/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.1/@expression/@leftHandSide/@name //@compilationUnits.2/@types.0/@bodyDeclarations.19/@parameters.0/@type/@name/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftOperand //@compilationUnits.3/@types.0/@bodyDeclarations.10/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.20/@body/@statements.0/@thenStatement/@statements.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.2/@thenStatement/@statements.0/@expression/@expression/@name //@compilationUnits.3/@types.0/@bodyDeclarations.9/@name //@compilationUnits.2/@types.0/@bodyDeclarations.19/@parameters.0/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.20/@body/@statements.0/@thenStatement/@statements.1/@expression/@arguments.0 //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.1/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.19/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.17/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.1/@fragments.0/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@expression/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.10/@parameters.0/@name //@compilationUnits.3/@types.0/@bodyDeclarations.1/@type/@name/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.19/@body/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@leftOperand //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.3/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.16/@body/@statements.0/@thenStatement/@statements.1/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.4/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.19/@parameters.0/@name //@compilationUnits.3/@types.0/@bodyDeclarations.1/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.1/@expression/@expression/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.18/@name //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@leftOperand/@name //@compilationUnits.2/@types.0/@bodyDeclarations.19/@body/@statements.0/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.1/@expression/@leftHandSide //@compilationUnits.3/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@rightOperand //@compilationUnits.2/@types.0/@bodyDeclarations.19/@body/@statements.0/@expression/@leftHandSide //@compilationUnits.5/@types.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.20/@body/@statements.0/@thenStatement/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression" resolvedTypeReferences="//@compilationUnits.2/@types.0/@bodyDeclarations.19/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.9/@body/@statements.1/@body/@statements.2/@expression/@arguments.0/@type //@compilationUnits.3/@types.0/@bodyDeclarations.10/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.5/@type //@compilationUnits.3/@types.0/@bodyDeclarations.9/@returnType //@compilationUnits.3/@types.0/@bodyDeclarations.1/@type //@compilationUnits.2/@types.0/@bodyDeclarations.18/@returnType">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="53" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.model.ContactList model = null;" startPosition="193" length="42">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="193" length="7" private="true"/>
        <fragments lexicalForm="model = null" startPosition="222" length="12">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="230" length="4"/>
          <name lexicalForm="model" startPosition="222" length="5" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="model" identifier="model" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.ContactList" startPosition="201" length="20" resolvedType="//@compilationUnits.8/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.ContactList" startPosition="201" length="20" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="im.model.ContactList">
            <name lexicalForm="ContactList" startPosition="210" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="ContactList" identifier="ContactList"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="201" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="204" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="201" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.view.ContactListView view = null;" startPosition="238" length="44">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="238" length="7" private="true"/>
        <fragments lexicalForm="view = null" startPosition="270" length="11">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="277" length="4"/>
          <name lexicalForm="view" startPosition="270" length="4" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="view" identifier="view" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ContactListView" startPosition="246" length="23" resolvedType="//@compilationUnits.17/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListView" startPosition="246" length="23" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="im.view.ContactListView">
            <name lexicalForm="ContactListView" startPosition="254" length="15" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="ContactListView" identifier="ContactListView"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="246" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="249" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="246" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.util.List contactEdit = new java.util.ArrayList();" startPosition="285" length="63">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="285" length="7" private="true"/>
        <fragments lexicalForm="contactEdit = new java.util.ArrayList()" startPosition="308" length="39">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.ArrayList()" startPosition="322" length="25">
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.ArrayList" startPosition="326" length="19">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.ArrayList" startPosition="326" length="19" fullyQualifiedName="java.util.ArrayList">
                <name lexicalForm="ArrayList" startPosition="336" length="9" fullyQualifiedName="ArrayList" identifier="ArrayList"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="326" length="9" fullyQualifiedName="java.util">
                  <name lexicalForm="util" startPosition="331" length="4" fullyQualifiedName="util" identifier="util"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="326" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </initializer>
          <name lexicalForm="contactEdit" startPosition="308" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.List" startPosition="293" length="14">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.List" startPosition="293" length="14" fullyQualifiedName="java.util.List">
            <name lexicalForm="List" startPosition="303" length="4" fullyQualifiedName="List" identifier="List"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="293" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="298" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="293" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void update(java.util.Observable o, java.lang.Object arg) {&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="351" length="596">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="351" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="416" length="531">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (arg instanceof java.util.Hashtable) {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="420" length="524">
            <expression xsi:type="JavaAST:InstanceofExpression" lexicalForm="arg instanceof java.util.Hashtable" startPosition="424" length="34">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="arg" startPosition="424" length="3" fullyQualifiedName="arg" identifier="arg"/>
              <rightOperand xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="439" length="19">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="439" length="19" fullyQualifiedName="java.util.Hashtable">
                  <name lexicalForm="Hashtable" startPosition="449" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="439" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="444" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="439" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = (java.util.Hashtable) arg;&#xA;&#x9;&#x9;&#x9;String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#xA;&#x9;&#x9;&#x9;Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="460" length="484">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = (java.util.Hashtable) arg;" startPosition="465" length="50">
                <fragments lexicalForm="e = (java.util.Hashtable) arg" startPosition="485" length="29">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(java.util.Hashtable) arg" startPosition="489" length="25">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="arg" startPosition="511" length="3" fullyQualifiedName="arg" identifier="arg"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="490" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="490" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="500" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="490" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="495" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="490" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="485" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="465" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="465" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="475" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="465" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="470" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="465" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;" startPosition="519" length="58">
                <fragments lexicalForm="mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;" startPosition="526" length="50">
                  <initializer xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;" startPosition="534" length="42" operator="+">
                    <extendedOperands xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Change&quot;" startPosition="568" length="8" escapedValue="&quot;Change&quot;" literalValue="Change"/>
                    <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;on&quot;" startPosition="534" length="4" escapedValue="&quot;on&quot;" literalValue="on"/>
                    <rightOperand xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((String) e.get(&quot;name&quot;))" startPosition="541" length="24">
                      <expression xsi:type="JavaAST:CastExpression" lexicalForm="(String) e.get(&quot;name&quot;)" startPosition="542" length="22">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;name&quot;)" startPosition="551" length="13">
                          <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="557" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="551" length="1" fullyQualifiedName="e" identifier="e"/>
                          <name lexicalForm="get" startPosition="553" length="3" fullyQualifiedName="get" identifier="get"/>
                        </expression>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="543" length="6">
                          <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="543" length="6" fullyQualifiedName="String" identifier="String"/>
                        </type>
                      </expression>
                    </rightOperand>
                  </initializer>
                  <name lexicalForm="mName" startPosition="526" length="5" fullyQualifiedName="mName" identifier="mName" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="519" length="6">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="519" length="6" fullyQualifiedName="String" identifier="String"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Class[] parmTypes = {(Class) e.get(&quot;class&quot;)};" startPosition="581" length="45">
                <fragments lexicalForm="parmTypes = {(Class) e.get(&quot;class&quot;)}" startPosition="589" length="36">
                  <initializer xsi:type="JavaAST:ArrayInitializer" lexicalForm="{(Class) e.get(&quot;class&quot;)}" startPosition="601" length="24">
                    <expressions xsi:type="JavaAST:CastExpression" lexicalForm="(Class) e.get(&quot;class&quot;)" startPosition="602" length="22">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;class&quot;)" startPosition="610" length="14">
                        <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="616" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="610" length="1" fullyQualifiedName="e" identifier="e"/>
                        <name lexicalForm="get" startPosition="612" length="3" fullyQualifiedName="get" identifier="get"/>
                      </expression>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="Class" startPosition="603" length="5">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="603" length="5" fullyQualifiedName="Class" identifier="Class"/>
                      </type>
                    </expressions>
                  </initializer>
                  <name lexicalForm="parmTypes" startPosition="589" length="9" fullyQualifiedName="parmTypes" identifier="parmTypes" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:ArrayType" lexicalForm="Class[]" startPosition="581" length="7" dimensions="1">
                  <componentType xsi:type="JavaAST:SimpleType" lexicalForm="Class" startPosition="581" length="5">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="581" length="5" fullyQualifiedName="Class" identifier="Class"/>
                  </componentType>
                </type>
              </statements>
              <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;} catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;} catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="630" length="310">
                <catchClauses lexicalForm="catch (NoSuchMethodException nex) {&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;}" startPosition="793" length="58">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;// no handler&#xA;&#x9;&#x9;&#x9;}" startPosition="827" length="24"/>
                  <exception lexicalForm="NoSuchMethodException nex" startPosition="800" length="25">
                    <name lexicalForm="nex" startPosition="822" length="3" fullyQualifiedName="nex" identifier="nex" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="NoSuchMethodException" startPosition="800" length="21">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="NoSuchMethodException" startPosition="800" length="21" fullyQualifiedName="NoSuchMethodException" identifier="NoSuchMethodException"/>
                    </type>
                  </exception>
                </catchClauses>
                <catchClauses lexicalForm="catch (Exception ex) {&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="852" length="88">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;// wrong handler configuration&#xA;&#x9;&#x9;&#x9;&#x9;ex.printStackTrace();&#xA;&#x9;&#x9;&#x9;}" startPosition="873" length="67">
                    <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="ex.printStackTrace();" startPosition="914" length="21">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ex.printStackTrace()" startPosition="914" length="20">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="ex" startPosition="914" length="2" fullyQualifiedName="ex" identifier="ex"/>
                        <name lexicalForm="printStackTrace" startPosition="917" length="15" fullyQualifiedName="printStackTrace" identifier="printStackTrace"/>
                      </expression>
                    </statements>
                  </body>
                  <exception lexicalForm="Exception ex" startPosition="859" length="12">
                    <name lexicalForm="ex" startPosition="869" length="2" fullyQualifiedName="ex" identifier="ex" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="859" length="9">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="859" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                    </type>
                  </exception>
                </catchClauses>
                <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);&#xA;&#x9;&#x9;&#x9;&#x9;Object[] args = {e.get(&quot;value&quot;)};&#xA;&#x9;&#x9;&#x9;&#x9;m.invoke(this, args);&#xA;&#x9;&#x9;&#x9;}" startPosition="634" length="158">
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.lang.reflect.Method m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes);" startPosition="640" length="83">
                    <fragments lexicalForm="m = getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes)" startPosition="665" length="57">
                      <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getClass().getDeclaredMethod(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mName, parmTypes)" startPosition="669" length="53">
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="mName" startPosition="705" length="5" fullyQualifiedName="mName" identifier="mName"/>
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="parmTypes" startPosition="712" length="9" fullyQualifiedName="parmTypes" identifier="parmTypes"/>
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getClass()" startPosition="669" length="10">
                          <name lexicalForm="getClass" startPosition="669" length="8" fullyQualifiedName="getClass" identifier="getClass"/>
                        </expression>
                        <name lexicalForm="getDeclaredMethod" startPosition="680" length="17" fullyQualifiedName="getDeclaredMethod" identifier="getDeclaredMethod"/>
                      </initializer>
                      <name lexicalForm="m" startPosition="665" length="1" fullyQualifiedName="m" identifier="m" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.reflect.Method" startPosition="640" length="24">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.reflect.Method" startPosition="640" length="24" fullyQualifiedName="java.lang.reflect.Method">
                        <name lexicalForm="Method" startPosition="658" length="6" fullyQualifiedName="Method" identifier="Method"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.reflect" startPosition="640" length="17" fullyQualifiedName="java.lang.reflect">
                          <name lexicalForm="reflect" startPosition="650" length="7" fullyQualifiedName="reflect" identifier="reflect"/>
                          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="640" length="9" fullyQualifiedName="java.lang">
                            <name lexicalForm="lang" startPosition="645" length="4" fullyQualifiedName="lang" identifier="lang"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="640" length="4" fullyQualifiedName="java" identifier="java"/>
                          </qualifier>
                        </qualifier>
                      </name>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Object[] args = {e.get(&quot;value&quot;)};" startPosition="728" length="33">
                    <fragments lexicalForm="args = {e.get(&quot;value&quot;)}" startPosition="737" length="23">
                      <initializer xsi:type="JavaAST:ArrayInitializer" lexicalForm="{e.get(&quot;value&quot;)}" startPosition="744" length="16">
                        <expressions xsi:type="JavaAST:MethodInvocation" lexicalForm="e.get(&quot;value&quot;)" startPosition="745" length="14">
                          <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="751" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="745" length="1" fullyQualifiedName="e" identifier="e"/>
                          <name lexicalForm="get" startPosition="747" length="3" fullyQualifiedName="get" identifier="get"/>
                        </expressions>
                      </initializer>
                      <name lexicalForm="args" startPosition="737" length="4" fullyQualifiedName="args" identifier="args" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:ArrayType" lexicalForm="Object[]" startPosition="728" length="8" dimensions="1">
                      <componentType xsi:type="JavaAST:SimpleType" lexicalForm="Object" startPosition="728" length="6">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="Object" startPosition="728" length="6" fullyQualifiedName="Object" identifier="Object"/>
                      </componentType>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="m.invoke(this, args);" startPosition="766" length="21">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="m.invoke(this, args)" startPosition="766" length="20">
                      <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="775" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="args" startPosition="781" length="4" fullyQualifiedName="args" identifier="args"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="m" startPosition="766" length="1" fullyQualifiedName="m" identifier="m"/>
                      <name lexicalForm="invoke" startPosition="768" length="6" fullyQualifiedName="invoke" identifier="invoke"/>
                    </expression>
                  </statements>
                </body>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="update" startPosition="363" length="6" fullyQualifiedName="update" identifier="update" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="358" length="4" code="void"/>
        <parameters lexicalForm="java.util.Observable o" startPosition="370" length="22">
          <name lexicalForm="o" startPosition="391" length="1" fullyQualifiedName="o" identifier="o" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observable" startPosition="370" length="20">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observable" startPosition="370" length="20" fullyQualifiedName="java.util.Observable">
              <name lexicalForm="Observable" startPosition="380" length="10" fullyQualifiedName="Observable" identifier="Observable"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="370" length="9" fullyQualifiedName="java.util">
                <name lexicalForm="util" startPosition="375" length="4" fullyQualifiedName="util" identifier="util"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="370" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="java.lang.Object arg" startPosition="394" length="20">
          <name lexicalForm="arg" startPosition="411" length="3" fullyQualifiedName="arg" identifier="arg" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="394" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="394" length="16" fullyQualifiedName="java.lang.Object">
              <name lexicalForm="Object" startPosition="404" length="6" fullyQualifiedName="Object" identifier="Object"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="394" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="399" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="394" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public ContactListEdit(im.model.ContactList c) {&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;&#x9;InstantMessagingClient client = InstantMessagingClient.getInstance();&#xA;&#x9;&#x9;setView(client.getViewFactory().createContactListView());&#xA;&#x9;&#x9;getView().addListener(this);&#xA;&#x9;}" startPosition="950" length="229" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="950" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;setModel(c);&#xA;&#x9;&#x9;InstantMessagingClient client = InstantMessagingClient.getInstance();&#xA;&#x9;&#x9;setView(client.getViewFactory().createContactListView());&#xA;&#x9;&#x9;getView().addListener(this);&#xA;&#x9;}" startPosition="997" length="182">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setModel(c);" startPosition="1001" length="12">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setModel(c)" startPosition="1001" length="11">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1010" length="1" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="c" identifier="c"/>
              <name lexicalForm="setModel" startPosition="1001" length="8" fullyQualifiedName="setModel" identifier="setModel"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="InstantMessagingClient client = InstantMessagingClient.getInstance();" startPosition="1016" length="69">
            <fragments lexicalForm="client = InstantMessagingClient.getInstance()" startPosition="1039" length="45">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance()" startPosition="1048" length="36" resolvedType="//@compilationUnits.2/@types.0">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="1048" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                <name lexicalForm="getInstance" startPosition="1071" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
              </initializer>
              <name lexicalForm="client" startPosition="1039" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="InstantMessagingClient" startPosition="1016" length="22" resolvedType="//@compilationUnits.2/@types.0">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="1016" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setView(client.getViewFactory().createContactListView());" startPosition="1088" length="57">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setView(client.getViewFactory().createContactListView())" startPosition="1088" length="56">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="client.getViewFactory().createContactListView()" startPosition="1096" length="47" resolvedType="//@compilationUnits.17/@types.0">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="client.getViewFactory()" startPosition="1096" length="23" resolvedType="//@compilationUnits.16/@types.0">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="client" startPosition="1096" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client"/>
                  <name lexicalForm="getViewFactory" startPosition="1103" length="14" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="getViewFactory" identifier="getViewFactory"/>
                </expression>
                <name lexicalForm="createContactListView" startPosition="1120" length="21" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="createContactListView" identifier="createContactListView"/>
              </arguments>
              <name lexicalForm="setView" startPosition="1088" length="7" fullyQualifiedName="setView" identifier="setView"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().addListener(this);" startPosition="1148" length="28">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().addListener(this)" startPosition="1148" length="27">
              <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1170" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1148" length="9" resolvedType="//@compilationUnits.17/@types.0">
                <name lexicalForm="getView" startPosition="1148" length="7" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="getView" identifier="getView"/>
              </expression>
              <name lexicalForm="addListener" startPosition="1158" length="11" fullyQualifiedName="addListener" identifier="addListener"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="ContactListEdit" startPosition="957" length="15" fullyQualifiedName="ContactListEdit" identifier="ContactListEdit"/>
        <parameters lexicalForm="im.model.ContactList c" startPosition="973" length="22">
          <name lexicalForm="c" startPosition="994" length="1" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.ContactList" startPosition="973" length="20" resolvedType="//@compilationUnits.8/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.ContactList" startPosition="973" length="20" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="im.model.ContactList">
              <name lexicalForm="ContactList" startPosition="982" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="ContactList" identifier="ContactList"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="973" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="976" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="973" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onContactChange(im.model.Contact c) {&#xA;&#x9;&#x9;int index = getModel().getIndexOfContact(c);&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;ContactEdit edit = new ContactEdit(c);&#xA;&#x9;&#x9;&#x9;insertContactEdit(edit, index);&#xA;&#x9;&#x9;&#x9;getView().addContact(c, index);&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;ContactEdit edit = getContactEditFor(c);&#xA;&#x9;&#x9;&#x9;index = getIndexOfContactEdit(edit);&#xA;&#x9;&#x9;&#x9;getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;removeContactEdit(edit);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1182" length="393">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1182" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;int index = getModel().getIndexOfContact(c);&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;ContactEdit edit = new ContactEdit(c);&#xA;&#x9;&#x9;&#x9;insertContactEdit(edit, index);&#xA;&#x9;&#x9;&#x9;getView().addContact(c, index);&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;ContactEdit edit = getContactEditFor(c);&#xA;&#x9;&#x9;&#x9;index = getIndexOfContactEdit(edit);&#xA;&#x9;&#x9;&#x9;getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;removeContactEdit(edit);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1230" length="345">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="int index = getModel().getIndexOfContact(c);" startPosition="1234" length="44">
            <fragments lexicalForm="index = getModel().getIndexOfContact(c)" startPosition="1238" length="39">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel().getIndexOfContact(c)" startPosition="1246" length="31">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1275" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="1246" length="10" resolvedType="//@compilationUnits.8/@types.0">
                  <name lexicalForm="getModel" startPosition="1246" length="8" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                </expression>
                <name lexicalForm="getIndexOfContact" startPosition="1257" length="17" fullyQualifiedName="getIndexOfContact" identifier="getIndexOfContact"/>
              </initializer>
              <name lexicalForm="index" startPosition="1238" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="1234" length="3" code="int"/>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (index > -1) {&#xA;&#x9;&#x9;&#x9;ContactEdit edit = new ContactEdit(c);&#xA;&#x9;&#x9;&#x9;insertContactEdit(edit, index);&#xA;&#x9;&#x9;&#x9;getView().addContact(c, index);&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;ContactEdit edit = getContactEditFor(c);&#xA;&#x9;&#x9;&#x9;index = getIndexOfContactEdit(edit);&#xA;&#x9;&#x9;&#x9;getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;removeContactEdit(edit);&#xA;&#x9;&#x9;}" startPosition="1281" length="291">
            <elseStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;ContactEdit edit = getContactEditFor(c);&#xA;&#x9;&#x9;&#x9;index = getIndexOfContactEdit(edit);&#xA;&#x9;&#x9;&#x9;getView().removeContact(index);&#xA;&#x9;&#x9;&#x9;removeContactEdit(edit);&#xA;&#x9;&#x9;}" startPosition="1420" length="152">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="ContactEdit edit = getContactEditFor(c);" startPosition="1425" length="40">
                <fragments lexicalForm="edit = getContactEditFor(c)" startPosition="1437" length="27">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactEditFor(c)" startPosition="1444" length="20" resolvedType="//@compilationUnits.3/@types.0">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1462" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                    <name lexicalForm="getContactEditFor" startPosition="1444" length="17" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="getContactEditFor" identifier="getContactEditFor"/>
                  </initializer>
                  <name lexicalForm="edit" startPosition="1437" length="4" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="edit" identifier="edit" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="ContactEdit" startPosition="1425" length="11" resolvedType="//@compilationUnits.3/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="ContactEdit" startPosition="1425" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="index = getIndexOfContactEdit(edit);" startPosition="1469" length="36">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="index = getIndexOfContactEdit(edit)" startPosition="1469" length="35" operator="=">
                  <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1469" length="5" fullyQualifiedName="index" identifier="index"/>
                  <rightHandSide xsi:type="JavaAST:MethodInvocation" lexicalForm="getIndexOfContactEdit(edit)" startPosition="1477" length="27">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="edit" startPosition="1499" length="4" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="edit" identifier="edit"/>
                    <name lexicalForm="getIndexOfContactEdit" startPosition="1477" length="21" fullyQualifiedName="getIndexOfContactEdit" identifier="getIndexOfContactEdit"/>
                  </rightHandSide>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().removeContact(index);" startPosition="1509" length="31">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().removeContact(index)" startPosition="1509" length="30">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1533" length="5" fullyQualifiedName="index" identifier="index"/>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1509" length="9" resolvedType="//@compilationUnits.17/@types.0">
                    <name lexicalForm="getView" startPosition="1509" length="7" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                  </expression>
                  <name lexicalForm="removeContact" startPosition="1519" length="13" fullyQualifiedName="removeContact" identifier="removeContact"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="removeContactEdit(edit);" startPosition="1544" length="24">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="removeContactEdit(edit)" startPosition="1544" length="23">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="edit" startPosition="1562" length="4" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="edit" identifier="edit"/>
                  <name lexicalForm="removeContactEdit" startPosition="1544" length="17" fullyQualifiedName="removeContactEdit" identifier="removeContactEdit"/>
                </expression>
              </statements>
            </elseStatement>
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="index > -1" startPosition="1285" length="10" operator=">">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1285" length="5" fullyQualifiedName="index" identifier="index"/>
              <rightOperand xsi:type="JavaAST:PrefixExpression" lexicalForm="-1" startPosition="1293" length="2">
                <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="1" startPosition="1294" length="1" token="1"/>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;ContactEdit edit = new ContactEdit(c);&#xA;&#x9;&#x9;&#x9;insertContactEdit(edit, index);&#xA;&#x9;&#x9;&#x9;getView().addContact(c, index);&#xA;&#x9;&#x9;}" startPosition="1297" length="117">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="ContactEdit edit = new ContactEdit(c);" startPosition="1302" length="38">
                <fragments lexicalForm="edit = new ContactEdit(c)" startPosition="1314" length="25">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new ContactEdit(c)" startPosition="1321" length="18" resolvedType="//@compilationUnits.3/@types.0">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1337" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="ContactEdit" startPosition="1325" length="11" resolvedType="//@compilationUnits.3/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="ContactEdit" startPosition="1325" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
                    </type>
                  </initializer>
                  <name lexicalForm="edit" startPosition="1314" length="4" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="edit" identifier="edit" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="ContactEdit" startPosition="1302" length="11" resolvedType="//@compilationUnits.3/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="ContactEdit" startPosition="1302" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="insertContactEdit(edit, index);" startPosition="1344" length="31">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="insertContactEdit(edit, index)" startPosition="1344" length="30">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="edit" startPosition="1362" length="4" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="edit" identifier="edit"/>
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1368" length="5" fullyQualifiedName="index" identifier="index"/>
                  <name lexicalForm="insertContactEdit" startPosition="1344" length="17" fullyQualifiedName="insertContactEdit" identifier="insertContactEdit"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().addContact(c, index);" startPosition="1379" length="31">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().addContact(c, index)" startPosition="1379" length="30">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1400" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1403" length="5" fullyQualifiedName="index" identifier="index"/>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1379" length="9" resolvedType="//@compilationUnits.17/@types.0">
                    <name lexicalForm="getView" startPosition="1379" length="7" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                  </expression>
                  <name lexicalForm="addContact" startPosition="1389" length="10" fullyQualifiedName="addContact" identifier="addContact"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="onContactChange" startPosition="1194" length="15" fullyQualifiedName="onContactChange" identifier="onContactChange" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1189" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact c" startPosition="1210" length="18">
          <name lexicalForm="c" startPosition="1227" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1210" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1210" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="1219" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1210" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="1213" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1210" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onContactListAdd() {&#xA;&#x9;&#x9;getView().setEnabled(false);&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;im.view.NewContactDialog dlg = client.getViewFactory()&#xA;&#x9;&#x9;&#x9;&#x9;.createNewContactDialog();&#xA;&#x9;&#x9;for (java.util.Enumeration ns = client.getNetworks(); ns&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;dlg&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.addNetwork(((im.networking.Network) ns.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getName());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;dlg.addListener(this);&#xA;&#x9;}" startPosition="1578" length="439">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1578" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;getView().setEnabled(false);&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;im.view.NewContactDialog dlg = client.getViewFactory()&#xA;&#x9;&#x9;&#x9;&#x9;.createNewContactDialog();&#xA;&#x9;&#x9;for (java.util.Enumeration ns = client.getNetworks(); ns&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;dlg&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.addNetwork(((im.networking.Network) ns.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getName());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;dlg.addListener(this);&#xA;&#x9;}" startPosition="1609" length="408">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().setEnabled(false);" startPosition="1613" length="28">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().setEnabled(false)" startPosition="1613" length="27">
              <arguments xsi:type="JavaAST:BooleanLiteral" lexicalForm="false" startPosition="1634" length="5"/>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="1613" length="9" resolvedType="//@compilationUnits.17/@types.0">
                <name lexicalForm="getView" startPosition="1613" length="7" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="getView" identifier="getView"/>
              </expression>
              <name lexicalForm="setEnabled" startPosition="1623" length="10" fullyQualifiedName="setEnabled" identifier="setEnabled"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();" startPosition="1644" length="80">
            <fragments lexicalForm="client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance()" startPosition="1670" length="53">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance()" startPosition="1679" length="44" resolvedType="//@compilationUnits.2/@types.0">
                <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="1679" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                  <name lexicalForm="InstantMessagingClient" startPosition="1682" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1679" length="2" fullyQualifiedName="im" identifier="im"/>
                </expression>
                <name lexicalForm="getInstance" startPosition="1710" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
              </initializer>
              <name lexicalForm="client" startPosition="1670" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.InstantMessagingClient" startPosition="1644" length="25" resolvedType="//@compilationUnits.2/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="1644" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                <name lexicalForm="InstantMessagingClient" startPosition="1647" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1644" length="2" fullyQualifiedName="im" identifier="im"/>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.view.NewContactDialog dlg = client.getViewFactory()&#xA;&#x9;&#x9;&#x9;&#x9;.createNewContactDialog();" startPosition="1727" length="85">
            <fragments lexicalForm="dlg = client.getViewFactory()&#xA;&#x9;&#x9;&#x9;&#x9;.createNewContactDialog()" startPosition="1752" length="59">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="client.getViewFactory()&#xA;&#x9;&#x9;&#x9;&#x9;.createNewContactDialog()" startPosition="1758" length="53" resolvedType="//@compilationUnits.21/@types.0">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="client.getViewFactory()" startPosition="1758" length="23" resolvedType="//@compilationUnits.16/@types.0">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="client" startPosition="1758" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client"/>
                  <name lexicalForm="getViewFactory" startPosition="1765" length="14" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="getViewFactory" identifier="getViewFactory"/>
                </expression>
                <name lexicalForm="createNewContactDialog" startPosition="1787" length="22" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="createNewContactDialog" identifier="createNewContactDialog"/>
              </initializer>
              <name lexicalForm="dlg" startPosition="1752" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.NewContactDialog" startPosition="1727" length="24" resolvedType="//@compilationUnits.21/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialog" startPosition="1727" length="24" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="im.view.NewContactDialog">
                <name lexicalForm="NewContactDialog" startPosition="1735" length="16" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="NewContactDialog" identifier="NewContactDialog"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="1727" length="7" fullyQualifiedName="im.view">
                  <name lexicalForm="view" startPosition="1730" length="4" fullyQualifiedName="view" identifier="view"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1727" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ns = client.getNetworks(); ns&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;dlg&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.addNetwork(((im.networking.Network) ns.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getName());&#xA;&#x9;&#x9;}" startPosition="1815" length="174">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;dlg&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.addNetwork(((im.networking.Network) ns.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getName());&#xA;&#x9;&#x9;}" startPosition="1897" length="92">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="dlg&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.addNetwork(((im.networking.Network) ns.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getName());" startPosition="1902" length="83">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="dlg&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.addNetwork(((im.networking.Network) ns.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getName())" startPosition="1902" length="82">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="((im.networking.Network) ns.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getName()" startPosition="1923" length="60">
                    <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((im.networking.Network) ns.nextElement())" startPosition="1923" length="42" resolvedType="//@compilationUnits.12/@types.0">
                      <expression xsi:type="JavaAST:CastExpression" lexicalForm="(im.networking.Network) ns.nextElement()" startPosition="1924" length="40" resolvedType="//@compilationUnits.12/@types.0">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ns.nextElement()" startPosition="1948" length="16">
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="ns" startPosition="1948" length="2" fullyQualifiedName="ns" identifier="ns"/>
                          <name lexicalForm="nextElement" startPosition="1951" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                        </expression>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="1925" length="21" resolvedType="//@compilationUnits.12/@types.0">
                          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="1925" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
                            <name lexicalForm="Network" startPosition="1939" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
                            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="1925" length="13" fullyQualifiedName="im.networking">
                              <name lexicalForm="networking" startPosition="1928" length="10" fullyQualifiedName="networking" identifier="networking"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1925" length="2" fullyQualifiedName="im" identifier="im"/>
                            </qualifier>
                          </name>
                        </type>
                      </expression>
                    </expression>
                    <name lexicalForm="getName" startPosition="1974" length="7" fullyQualifiedName="getName" identifier="getName"/>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="dlg" startPosition="1902" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg"/>
                  <name lexicalForm="addNetwork" startPosition="1912" length="10" fullyQualifiedName="addNetwork" identifier="addNetwork"/>
                </expression>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ns&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements()" startPosition="1869" length="25">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ns" startPosition="1869" length="2" fullyQualifiedName="ns" identifier="ns"/>
              <name lexicalForm="hasMoreElements" startPosition="1877" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ns = client.getNetworks()" startPosition="1820" length="47">
              <fragments lexicalForm="ns = client.getNetworks()" startPosition="1842" length="25">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="client.getNetworks()" startPosition="1847" length="20">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="client" startPosition="1847" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client"/>
                  <name lexicalForm="getNetworks" startPosition="1854" length="11" fullyQualifiedName="getNetworks" identifier="getNetworks"/>
                </initializer>
                <name lexicalForm="ns" startPosition="1842" length="2" fullyQualifiedName="ns" identifier="ns" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="1820" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="1820" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="1830" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1820" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="1825" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1820" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="dlg.addListener(this);" startPosition="1992" length="22">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="dlg.addListener(this)" startPosition="1992" length="21">
              <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="2008" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="dlg" startPosition="1992" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg"/>
              <name lexicalForm="addListener" startPosition="1996" length="11" fullyQualifiedName="addListener" identifier="addListener"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onContactListAdd" startPosition="1590" length="16" fullyQualifiedName="onContactListAdd" identifier="onContactListAdd" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1585" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onContactListRemove() {&#xA;&#x9;&#x9;int index = getView().getSelectedContact();&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;if (c instanceof im.model.Identity) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = (im.model.Identity) c;&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().logout();&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().removeContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;getModel().removeContact(c);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="2020" length="371">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2020" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;int index = getView().getSelectedContact();&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;if (c instanceof im.model.Identity) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = (im.model.Identity) c;&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().logout();&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().removeContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;getModel().removeContact(c);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="2054" length="337">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="int index = getView().getSelectedContact();" startPosition="2058" length="43">
            <fragments lexicalForm="index = getView().getSelectedContact()" startPosition="2062" length="38">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().getSelectedContact()" startPosition="2070" length="30">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="2070" length="9" resolvedType="//@compilationUnits.17/@types.0">
                  <name lexicalForm="getView" startPosition="2070" length="7" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                </expression>
                <name lexicalForm="getSelectedContact" startPosition="2080" length="18" fullyQualifiedName="getSelectedContact" identifier="getSelectedContact"/>
              </initializer>
              <name lexicalForm="index" startPosition="2062" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="2058" length="3" code="int"/>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (index > -1) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;if (c instanceof im.model.Identity) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = (im.model.Identity) c;&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().logout();&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().removeContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;getModel().removeContact(c);&#xA;&#x9;&#x9;}" startPosition="2104" length="284">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="index > -1" startPosition="2108" length="10" operator=">">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="2108" length="5" fullyQualifiedName="index" identifier="index"/>
              <rightOperand xsi:type="JavaAST:PrefixExpression" lexicalForm="-1" startPosition="2116" length="2">
                <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="1" startPosition="2117" length="1" token="1"/>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;if (c instanceof im.model.Identity) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = (im.model.Identity) c;&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().logout();&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().removeContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;getModel().removeContact(c);&#xA;&#x9;&#x9;}" startPosition="2120" length="268">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Contact c = getModel().getContactAt(index);" startPosition="2125" length="52">
                <fragments lexicalForm="c = getModel().getContactAt(index)" startPosition="2142" length="34">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel().getContactAt(index)" startPosition="2146" length="30" resolvedType="//@compilationUnits.7/@types.0">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="2170" length="5" fullyQualifiedName="index" identifier="index"/>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="2146" length="10" resolvedType="//@compilationUnits.8/@types.0">
                      <name lexicalForm="getModel" startPosition="2146" length="8" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                    </expression>
                    <name lexicalForm="getContactAt" startPosition="2157" length="12" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getContactAt" identifier="getContactAt"/>
                  </initializer>
                  <name lexicalForm="c" startPosition="2142" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2125" length="16" resolvedType="//@compilationUnits.7/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2125" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                    <name lexicalForm="Contact" startPosition="2134" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2125" length="8" fullyQualifiedName="im.model">
                      <name lexicalForm="model" startPosition="2128" length="5" fullyQualifiedName="model" identifier="model"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2125" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (c instanceof im.model.Identity) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = (im.model.Identity) c;&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().logout();&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().removeContact(c);&#xA;&#x9;&#x9;&#x9;}" startPosition="2181" length="171">
                <elseStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().removeContact(c);&#xA;&#x9;&#x9;&#x9;}" startPosition="2309" length="43">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.getNetwork().removeContact(c);" startPosition="2315" length="32">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getNetwork().removeContact(c)" startPosition="2315" length="31">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2344" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getNetwork()" startPosition="2315" length="14" resolvedType="//@compilationUnits.12/@types.0">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2315" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                        <name lexicalForm="getNetwork" startPosition="2317" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
                      </expression>
                      <name lexicalForm="removeContact" startPosition="2330" length="13" fullyQualifiedName="removeContact" identifier="removeContact"/>
                    </expression>
                  </statements>
                </elseStatement>
                <expression xsi:type="JavaAST:InstanceofExpression" lexicalForm="c instanceof im.model.Identity" startPosition="2185" length="30">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2185" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                  <rightOperand xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Identity" startPosition="2198" length="17" resolvedType="//@compilationUnits.11/@types.0">
                    <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Identity" startPosition="2198" length="17" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="im.model.Identity">
                      <name lexicalForm="Identity" startPosition="2207" length="8" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="Identity" identifier="Identity"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2198" length="8" fullyQualifiedName="im.model">
                        <name lexicalForm="model" startPosition="2201" length="5" fullyQualifiedName="model" identifier="model"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2198" length="2" fullyQualifiedName="im" identifier="im"/>
                      </qualifier>
                    </name>
                  </rightOperand>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = (im.model.Identity) c;&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().logout();&#xA;&#x9;&#x9;&#x9;}" startPosition="2217" length="86">
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Identity id = (im.model.Identity) c;" startPosition="2223" length="45">
                    <fragments lexicalForm="id = (im.model.Identity) c" startPosition="2241" length="26">
                      <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(im.model.Identity) c" startPosition="2246" length="21" resolvedType="//@compilationUnits.11/@types.0">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2266" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Identity" startPosition="2247" length="17" resolvedType="//@compilationUnits.11/@types.0">
                          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Identity" startPosition="2247" length="17" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="im.model.Identity">
                            <name lexicalForm="Identity" startPosition="2256" length="8" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="Identity" identifier="Identity"/>
                            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2247" length="8" fullyQualifiedName="im.model">
                              <name lexicalForm="model" startPosition="2250" length="5" fullyQualifiedName="model" identifier="model"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2247" length="2" fullyQualifiedName="im" identifier="im"/>
                            </qualifier>
                          </name>
                        </type>
                      </initializer>
                      <name lexicalForm="id" startPosition="2241" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Identity" startPosition="2223" length="17" resolvedType="//@compilationUnits.11/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Identity" startPosition="2223" length="17" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="im.model.Identity">
                        <name lexicalForm="Identity" startPosition="2232" length="8" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="Identity" identifier="Identity"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2223" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="2226" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2223" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="id.getNetwork().logout();" startPosition="2273" length="25">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="id.getNetwork().logout()" startPosition="2273" length="24">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="id.getNetwork()" startPosition="2273" length="15" resolvedType="//@compilationUnits.12/@types.0">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="2273" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                        <name lexicalForm="getNetwork" startPosition="2276" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
                      </expression>
                      <name lexicalForm="logout" startPosition="2289" length="6" fullyQualifiedName="logout" identifier="logout"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getModel().removeContact(c);" startPosition="2356" length="28">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel().removeContact(c)" startPosition="2356" length="27">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2381" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="2356" length="10" resolvedType="//@compilationUnits.8/@types.0">
                    <name lexicalForm="getModel" startPosition="2356" length="8" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                  </expression>
                  <name lexicalForm="removeContact" startPosition="2367" length="13" fullyQualifiedName="removeContact" identifier="removeContact"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="onContactListRemove" startPosition="2032" length="19" fullyQualifiedName="onContactListRemove" identifier="onContactListRemove" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2027" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onContactListAction() {&#xA;&#x9;&#x9;int index = getView().getSelectedContact();&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;&#x9;// reuse existing conversation, if any&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration cs = client.getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Conversation conv = (im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Contact contact = conv.getContact();&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(new im.model.Contact());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;// else new conversation&#xA;&#x9;&#x9;&#x9;im.model.Conversation conv = new im.model.Conversation();&#xA;&#x9;&#x9;&#x9;new ConversationEdit(conv);&#xA;&#x9;&#x9;&#x9;client.addConversation(conv);&#xA;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="2394" length="816">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2394" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;int index = getView().getSelectedContact();&#xA;&#x9;&#x9;if (index > -1) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;&#x9;// reuse existing conversation, if any&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration cs = client.getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Conversation conv = (im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Contact contact = conv.getContact();&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(new im.model.Contact());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;// else new conversation&#xA;&#x9;&#x9;&#x9;im.model.Conversation conv = new im.model.Conversation();&#xA;&#x9;&#x9;&#x9;new ConversationEdit(conv);&#xA;&#x9;&#x9;&#x9;client.addConversation(conv);&#xA;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="2428" length="782">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="int index = getView().getSelectedContact();" startPosition="2432" length="43">
            <fragments lexicalForm="index = getView().getSelectedContact()" startPosition="2436" length="38">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().getSelectedContact()" startPosition="2444" length="30">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="2444" length="9" resolvedType="//@compilationUnits.17/@types.0">
                  <name lexicalForm="getView" startPosition="2444" length="7" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="getView" identifier="getView"/>
                </expression>
                <name lexicalForm="getSelectedContact" startPosition="2454" length="18" fullyQualifiedName="getSelectedContact" identifier="getSelectedContact"/>
              </initializer>
              <name lexicalForm="index" startPosition="2436" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="2432" length="3" code="int"/>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (index > -1) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;&#x9;// reuse existing conversation, if any&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration cs = client.getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Conversation conv = (im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Contact contact = conv.getContact();&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(new im.model.Contact());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;// else new conversation&#xA;&#x9;&#x9;&#x9;im.model.Conversation conv = new im.model.Conversation();&#xA;&#x9;&#x9;&#x9;new ConversationEdit(conv);&#xA;&#x9;&#x9;&#x9;client.addConversation(conv);&#xA;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;}" startPosition="2478" length="729">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="index > -1" startPosition="2482" length="10" operator=">">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="2482" length="5" fullyQualifiedName="index" identifier="index"/>
              <rightOperand xsi:type="JavaAST:PrefixExpression" lexicalForm="-1" startPosition="2490" length="2">
                <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="1" startPosition="2491" length="1" token="1"/>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;im.model.Contact c = getModel().getContactAt(index);&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;&#x9;// reuse existing conversation, if any&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration cs = client.getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Conversation conv = (im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Contact contact = conv.getContact();&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(new im.model.Contact());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;// else new conversation&#xA;&#x9;&#x9;&#x9;im.model.Conversation conv = new im.model.Conversation();&#xA;&#x9;&#x9;&#x9;new ConversationEdit(conv);&#xA;&#x9;&#x9;&#x9;client.addConversation(conv);&#xA;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;}" startPosition="2494" length="713">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Contact c = getModel().getContactAt(index);" startPosition="2499" length="52">
                <fragments lexicalForm="c = getModel().getContactAt(index)" startPosition="2516" length="34">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel().getContactAt(index)" startPosition="2520" length="30" resolvedType="//@compilationUnits.7/@types.0">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="2544" length="5" fullyQualifiedName="index" identifier="index"/>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="2520" length="10" resolvedType="//@compilationUnits.8/@types.0">
                      <name lexicalForm="getModel" startPosition="2520" length="8" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                    </expression>
                    <name lexicalForm="getContactAt" startPosition="2531" length="12" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getContactAt" identifier="getContactAt"/>
                  </initializer>
                  <name lexicalForm="c" startPosition="2516" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2499" length="16" resolvedType="//@compilationUnits.7/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2499" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                    <name lexicalForm="Contact" startPosition="2508" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2499" length="8" fullyQualifiedName="im.model">
                      <name lexicalForm="model" startPosition="2502" length="5" fullyQualifiedName="model" identifier="model"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2499" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getInstance();" startPosition="2555" length="81">
                <fragments lexicalForm="client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getInstance()" startPosition="2581" length="54">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getInstance()" startPosition="2590" length="45" resolvedType="//@compilationUnits.2/@types.0">
                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="2590" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                      <name lexicalForm="InstantMessagingClient" startPosition="2593" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2590" length="2" fullyQualifiedName="im" identifier="im"/>
                    </expression>
                    <name lexicalForm="getInstance" startPosition="2622" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                  </initializer>
                  <name lexicalForm="client" startPosition="2581" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.InstantMessagingClient" startPosition="2555" length="25" resolvedType="//@compilationUnits.2/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="2555" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                    <name lexicalForm="InstantMessagingClient" startPosition="2558" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2555" length="2" fullyQualifiedName="im" identifier="im"/>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration cs = client.getConversations(); cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Conversation conv = (im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Contact contact = conv.getContact();&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(new im.model.Contact());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="2682" length="345">
                <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Conversation conv = (im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Contact contact = conv.getContact();&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(new im.model.Contact());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="2770" length="257">
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Conversation conv = (im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();" startPosition="2776" length="77">
                    <fragments lexicalForm="conv = (im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement()" startPosition="2798" length="54">
                      <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(im.model.Conversation) cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement()" startPosition="2805" length="47" resolvedType="//@compilationUnits.9/@types.0">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement()" startPosition="2829" length="23">
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="2829" length="2" fullyQualifiedName="cs" identifier="cs"/>
                          <name lexicalForm="nextElement" startPosition="2839" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                        </expression>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Conversation" startPosition="2806" length="21" resolvedType="//@compilationUnits.9/@types.0">
                          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Conversation" startPosition="2806" length="21" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="im.model.Conversation">
                            <name lexicalForm="Conversation" startPosition="2815" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
                            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2806" length="8" fullyQualifiedName="im.model">
                              <name lexicalForm="model" startPosition="2809" length="5" fullyQualifiedName="model" identifier="model"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2806" length="2" fullyQualifiedName="im" identifier="im"/>
                            </qualifier>
                          </name>
                        </type>
                      </initializer>
                      <name lexicalForm="conv" startPosition="2798" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Conversation" startPosition="2776" length="21" resolvedType="//@compilationUnits.9/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Conversation" startPosition="2776" length="21" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="im.model.Conversation">
                        <name lexicalForm="Conversation" startPosition="2785" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2776" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="2779" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2776" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Contact contact = conv.getContact();" startPosition="2858" length="45">
                    <fragments lexicalForm="contact = conv.getContact()" startPosition="2875" length="27">
                      <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="conv.getContact()" startPosition="2885" length="17" resolvedType="//@compilationUnits.7/@types.0">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="2885" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
                        <name lexicalForm="getContact" startPosition="2890" length="10" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getContact" identifier="getContact"/>
                      </initializer>
                      <name lexicalForm="contact" startPosition="2875" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2858" length="16" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2858" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                        <name lexicalForm="Contact" startPosition="2867" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2858" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="2861" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2858" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (contact.equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(new im.model.Contact());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2908" length="114">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contact.equals(c)" startPosition="2912" length="17">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2927" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="2912" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                      <name lexicalForm="equals" startPosition="2920" length="6" fullyQualifiedName="equals" identifier="equals"/>
                    </expression>
                    <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(new im.model.Contact());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;conv.setContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2931" length="91">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="conv.setContact(new im.model.Contact());" startPosition="2938" length="40">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="conv.setContact(new im.model.Contact())" startPosition="2938" length="39">
                          <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new im.model.Contact()" startPosition="2954" length="22" resolvedType="//@compilationUnits.7/@types.0">
                            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2958" length="16" resolvedType="//@compilationUnits.7/@types.0">
                              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2958" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                                <name lexicalForm="Contact" startPosition="2967" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2958" length="8" fullyQualifiedName="im.model">
                                  <name lexicalForm="model" startPosition="2961" length="5" fullyQualifiedName="model" identifier="model"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2958" length="2" fullyQualifiedName="im" identifier="im"/>
                                </qualifier>
                              </name>
                            </type>
                          </arguments>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="2938" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
                          <name lexicalForm="setContact" startPosition="2943" length="10" fullyQualifiedName="setContact" identifier="setContact"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="conv.setContact(c);" startPosition="2984" length="19">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="conv.setContact(c)" startPosition="2984" length="18">
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3000" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="2984" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
                          <name lexicalForm="setContact" startPosition="2989" length="10" fullyQualifiedName="setContact" identifier="setContact"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return;" startPosition="3009" length="7"/>
                    </thenStatement>
                  </statements>
                </body>
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements()" startPosition="2741" length="26">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="2741" length="2" fullyQualifiedName="cs" identifier="cs"/>
                  <name lexicalForm="hasMoreElements" startPosition="2750" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
                </expression>
                <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration cs = client.getConversations()" startPosition="2687" length="52">
                  <fragments lexicalForm="cs = client.getConversations()" startPosition="2709" length="30">
                    <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="client.getConversations()" startPosition="2714" length="25">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="client" startPosition="2714" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client"/>
                      <name lexicalForm="getConversations" startPosition="2721" length="16" fullyQualifiedName="getConversations" identifier="getConversations"/>
                    </initializer>
                    <name lexicalForm="cs" startPosition="2709" length="2" fullyQualifiedName="cs" identifier="cs" declaration="true"/>
                  </fragments>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="2687" length="21">
                    <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="2687" length="21" fullyQualifiedName="java.util.Enumeration">
                      <name lexicalForm="Enumeration" startPosition="2697" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="2687" length="9" fullyQualifiedName="java.util">
                        <name lexicalForm="util" startPosition="2692" length="4" fullyQualifiedName="util" identifier="util"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="2687" length="4" fullyQualifiedName="java" identifier="java"/>
                      </qualifier>
                    </name>
                  </type>
                </initializers>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Conversation conv = new im.model.Conversation();" startPosition="3059" length="57">
                <fragments lexicalForm="conv = new im.model.Conversation()" startPosition="3081" length="34">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new im.model.Conversation()" startPosition="3088" length="27" resolvedType="//@compilationUnits.9/@types.0">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Conversation" startPosition="3092" length="21" resolvedType="//@compilationUnits.9/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Conversation" startPosition="3092" length="21" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="im.model.Conversation">
                        <name lexicalForm="Conversation" startPosition="3101" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="3092" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="3095" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3092" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="conv" startPosition="3081" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Conversation" startPosition="3059" length="21" resolvedType="//@compilationUnits.9/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Conversation" startPosition="3059" length="21" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="im.model.Conversation">
                    <name lexicalForm="Conversation" startPosition="3068" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="3059" length="8" fullyQualifiedName="im.model">
                      <name lexicalForm="model" startPosition="3062" length="5" fullyQualifiedName="model" identifier="model"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3059" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="new ConversationEdit(conv);" startPosition="3120" length="27">
                <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new ConversationEdit(conv)" startPosition="3120" length="26" resolvedType="//@compilationUnits.4/@types.0">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="3141" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="ConversationEdit" startPosition="3124" length="16" resolvedType="//@compilationUnits.4/@types.0">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="ConversationEdit" startPosition="3124" length="16" resolvedType="//@compilationUnits.4/@types.0" fullyQualifiedName="ConversationEdit" identifier="ConversationEdit"/>
                  </type>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="client.addConversation(conv);" startPosition="3151" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="client.addConversation(conv)" startPosition="3151" length="28">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="3174" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="client" startPosition="3151" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client"/>
                  <name lexicalForm="addConversation" startPosition="3158" length="15" fullyQualifiedName="addConversation" identifier="addConversation"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="conv.setContact(c);" startPosition="3184" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="conv.setContact(c)" startPosition="3184" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3200" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="conv" startPosition="3184" length="4" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="conv" identifier="conv"/>
                  <name lexicalForm="setContact" startPosition="3189" length="10" fullyQualifiedName="setContact" identifier="setContact"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="onContactListAction" startPosition="2406" length="19" fullyQualifiedName="onContactListAction" identifier="onContactListAction" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2401" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onNewContactDialogClose(boolean okClicked,&#xA;&#x9;&#x9;&#x9;im.view.NewContactDialog dlg) {&#xA;&#x9;&#x9;if (okClicked) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c;&#xA;&#x9;&#x9;&#x9;im.networking.Network n = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getNetworkAt(dlg.getNetwork());&#xA;&#x9;&#x9;&#x9;if (getModel().getIdentity(n) == null) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = new im.model.Identity();&#xA;&#x9;&#x9;&#x9;&#x9;id.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;id.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;id.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;id.setPassword(dlg.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;c = id;&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;c.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;c.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;c.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().addContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().setEnabled(true);&#xA;&#x9;}" startPosition="3213" length="793">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3213" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (okClicked) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c;&#xA;&#x9;&#x9;&#x9;im.networking.Network n = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getNetworkAt(dlg.getNetwork());&#xA;&#x9;&#x9;&#x9;if (getModel().getIdentity(n) == null) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = new im.model.Identity();&#xA;&#x9;&#x9;&#x9;&#x9;id.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;id.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;id.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;id.setPassword(dlg.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;c = id;&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;c.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;c.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;c.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().addContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;getView().setEnabled(true);&#xA;&#x9;}" startPosition="3301" length="705">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (okClicked) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c;&#xA;&#x9;&#x9;&#x9;im.networking.Network n = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getNetworkAt(dlg.getNetwork());&#xA;&#x9;&#x9;&#x9;if (getModel().getIdentity(n) == null) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = new im.model.Identity();&#xA;&#x9;&#x9;&#x9;&#x9;id.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;id.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;id.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;id.setPassword(dlg.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;c = id;&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;c.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;c.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;c.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().addContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="3305" length="668">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="okClicked" startPosition="3309" length="9" fullyQualifiedName="okClicked" identifier="okClicked"/>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;im.model.Contact c;&#xA;&#x9;&#x9;&#x9;im.networking.Network n = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getNetworkAt(dlg.getNetwork());&#xA;&#x9;&#x9;&#x9;if (getModel().getIdentity(n) == null) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = new im.model.Identity();&#xA;&#x9;&#x9;&#x9;&#x9;id.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;id.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;id.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;id.setPassword(dlg.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;c = id;&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;c.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;c.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;c.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().addContact(c);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="3320" length="653">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Contact c;" startPosition="3325" length="19">
                <fragments lexicalForm="c" startPosition="3342" length="1">
                  <name lexicalForm="c" startPosition="3342" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="3325" length="16" resolvedType="//@compilationUnits.7/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="3325" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                    <name lexicalForm="Contact" startPosition="3334" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="3325" length="8" fullyQualifiedName="im.model">
                      <name lexicalForm="model" startPosition="3328" length="5" fullyQualifiedName="model" identifier="model"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3325" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.networking.Network n = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getNetworkAt(dlg.getNetwork());" startPosition="3348" length="103">
                <fragments lexicalForm="n = im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getNetworkAt(dlg.getNetwork())" startPosition="3370" length="80">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getNetworkAt(dlg.getNetwork())" startPosition="3374" length="76" resolvedType="//@compilationUnits.12/@types.0">
                    <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="dlg.getNetwork()" startPosition="3433" length="16">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="dlg" startPosition="3433" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg"/>
                      <name lexicalForm="getNetwork" startPosition="3437" length="10" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
                    </arguments>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="3374" length="39" resolvedType="//@compilationUnits.2/@types.0">
                      <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="3374" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                        <name lexicalForm="InstantMessagingClient" startPosition="3377" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3374" length="2" fullyQualifiedName="im" identifier="im"/>
                      </expression>
                      <name lexicalForm="getInstance" startPosition="3400" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                    </expression>
                    <name lexicalForm="getNetworkAt" startPosition="3420" length="12" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetworkAt" identifier="getNetworkAt"/>
                  </initializer>
                  <name lexicalForm="n" startPosition="3370" length="1" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="n" identifier="n" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="3348" length="21" resolvedType="//@compilationUnits.12/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="3348" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
                    <name lexicalForm="Network" startPosition="3362" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="3348" length="13" fullyQualifiedName="im.networking">
                      <name lexicalForm="networking" startPosition="3351" length="10" fullyQualifiedName="networking" identifier="networking"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3348" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (getModel().getIdentity(n) == null) {&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = new im.model.Identity();&#xA;&#x9;&#x9;&#x9;&#x9;id.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;id.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;id.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;id.setPassword(dlg.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;c = id;&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;c.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;c.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;c.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().addContact(c);&#xA;&#x9;&#x9;&#x9;}" startPosition="3455" length="514">
                <elseStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;c.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;c.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;c.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;c.getNetwork().addContact(c);&#xA;&#x9;&#x9;&#x9;}" startPosition="3785" length="184">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c = new im.model.Contact();" startPosition="3791" length="27">
                    <expression xsi:type="JavaAST:Assignment" lexicalForm="c = new im.model.Contact()" startPosition="3791" length="26" resolvedType="//@compilationUnits.7/@types.0" operator="=">
                      <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3791" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new im.model.Contact()" startPosition="3795" length="22" resolvedType="//@compilationUnits.7/@types.0">
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="3799" length="16" resolvedType="//@compilationUnits.7/@types.0">
                          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="3799" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                            <name lexicalForm="Contact" startPosition="3808" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="3799" length="8" fullyQualifiedName="im.model">
                              <name lexicalForm="model" startPosition="3802" length="5" fullyQualifiedName="model" identifier="model"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3799" length="2" fullyQualifiedName="im" identifier="im"/>
                            </qualifier>
                          </name>
                        </type>
                      </rightHandSide>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setNetwork(n);" startPosition="3823" length="16">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setNetwork(n)" startPosition="3823" length="15">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="n" startPosition="3836" length="1" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="n" identifier="n"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3823" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <name lexicalForm="setNetwork" startPosition="3825" length="10" fullyQualifiedName="setNetwork" identifier="setNetwork"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setUserId(dlg.getUid());" startPosition="3844" length="26">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setUserId(dlg.getUid())" startPosition="3844" length="25">
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="dlg.getUid()" startPosition="3856" length="12">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="dlg" startPosition="3856" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg"/>
                        <name lexicalForm="getUid" startPosition="3860" length="6" fullyQualifiedName="getUid" identifier="getUid"/>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3844" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <name lexicalForm="setUserId" startPosition="3846" length="9" fullyQualifiedName="setUserId" identifier="setUserId"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setName(dlg.getName());" startPosition="3875" length="25">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setName(dlg.getName())" startPosition="3875" length="24">
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="dlg.getName()" startPosition="3885" length="13">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="dlg" startPosition="3885" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg"/>
                        <name lexicalForm="getName" startPosition="3889" length="7" fullyQualifiedName="getName" identifier="getName"/>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3875" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <name lexicalForm="setName" startPosition="3877" length="7" fullyQualifiedName="setName" identifier="setName"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getModel().addContact(c);" startPosition="3905" length="25">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel().addContact(c)" startPosition="3905" length="24">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3927" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="3905" length="10" resolvedType="//@compilationUnits.8/@types.0">
                        <name lexicalForm="getModel" startPosition="3905" length="8" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                      </expression>
                      <name lexicalForm="addContact" startPosition="3916" length="10" fullyQualifiedName="addContact" identifier="addContact"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.getNetwork().addContact(c);" startPosition="3935" length="29">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getNetwork().addContact(c)" startPosition="3935" length="28">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3961" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getNetwork()" startPosition="3935" length="14" resolvedType="//@compilationUnits.12/@types.0">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3935" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                        <name lexicalForm="getNetwork" startPosition="3937" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
                      </expression>
                      <name lexicalForm="addContact" startPosition="3950" length="10" fullyQualifiedName="addContact" identifier="addContact"/>
                    </expression>
                  </statements>
                </elseStatement>
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="getModel().getIdentity(n) == null" startPosition="3459" length="33" operator="==">
                  <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel().getIdentity(n)" startPosition="3459" length="25" resolvedType="//@compilationUnits.11/@types.0">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="n" startPosition="3482" length="1" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="n" identifier="n"/>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="3459" length="10" resolvedType="//@compilationUnits.8/@types.0">
                      <name lexicalForm="getModel" startPosition="3459" length="8" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                    </expression>
                    <name lexicalForm="getIdentity" startPosition="3470" length="11" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="getIdentity" identifier="getIdentity"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="3488" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;im.model.Identity id = new im.model.Identity();&#xA;&#x9;&#x9;&#x9;&#x9;id.setNetwork(n);&#xA;&#x9;&#x9;&#x9;&#x9;id.setUserId(dlg.getUid());&#xA;&#x9;&#x9;&#x9;&#x9;id.setName(dlg.getName());&#xA;&#x9;&#x9;&#x9;&#x9;id.setPassword(dlg.getPassword());&#xA;&#x9;&#x9;&#x9;&#x9;c = id;&#xA;&#x9;&#x9;&#x9;&#x9;getModel().addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;id.getNetwork().login(id.getUserId(), id.getPassword());&#xA;&#x9;&#x9;&#x9;}" startPosition="3494" length="285">
                  <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Identity id = new im.model.Identity();" startPosition="3500" length="47">
                    <fragments lexicalForm="id = new im.model.Identity()" startPosition="3518" length="28">
                      <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new im.model.Identity()" startPosition="3523" length="23" resolvedType="//@compilationUnits.11/@types.0">
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Identity" startPosition="3527" length="17" resolvedType="//@compilationUnits.11/@types.0">
                          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Identity" startPosition="3527" length="17" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="im.model.Identity">
                            <name lexicalForm="Identity" startPosition="3536" length="8" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="Identity" identifier="Identity"/>
                            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="3527" length="8" fullyQualifiedName="im.model">
                              <name lexicalForm="model" startPosition="3530" length="5" fullyQualifiedName="model" identifier="model"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3527" length="2" fullyQualifiedName="im" identifier="im"/>
                            </qualifier>
                          </name>
                        </type>
                      </initializer>
                      <name lexicalForm="id" startPosition="3518" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id" declaration="true"/>
                    </fragments>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Identity" startPosition="3500" length="17" resolvedType="//@compilationUnits.11/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Identity" startPosition="3500" length="17" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="im.model.Identity">
                        <name lexicalForm="Identity" startPosition="3509" length="8" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="Identity" identifier="Identity"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="3500" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="3503" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3500" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="id.setNetwork(n);" startPosition="3552" length="17">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="id.setNetwork(n)" startPosition="3552" length="16">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="n" startPosition="3566" length="1" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="n" identifier="n"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="3552" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                      <name lexicalForm="setNetwork" startPosition="3555" length="10" fullyQualifiedName="setNetwork" identifier="setNetwork"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="id.setUserId(dlg.getUid());" startPosition="3574" length="27">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="id.setUserId(dlg.getUid())" startPosition="3574" length="26">
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="dlg.getUid()" startPosition="3587" length="12">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="dlg" startPosition="3587" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg"/>
                        <name lexicalForm="getUid" startPosition="3591" length="6" fullyQualifiedName="getUid" identifier="getUid"/>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="3574" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                      <name lexicalForm="setUserId" startPosition="3577" length="9" fullyQualifiedName="setUserId" identifier="setUserId"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="id.setName(dlg.getName());" startPosition="3606" length="26">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="id.setName(dlg.getName())" startPosition="3606" length="25">
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="dlg.getName()" startPosition="3617" length="13">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="dlg" startPosition="3617" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg"/>
                        <name lexicalForm="getName" startPosition="3621" length="7" fullyQualifiedName="getName" identifier="getName"/>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="3606" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                      <name lexicalForm="setName" startPosition="3609" length="7" fullyQualifiedName="setName" identifier="setName"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="id.setPassword(dlg.getPassword());" startPosition="3637" length="34">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="id.setPassword(dlg.getPassword())" startPosition="3637" length="33">
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="dlg.getPassword()" startPosition="3652" length="17">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="dlg" startPosition="3652" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg"/>
                        <name lexicalForm="getPassword" startPosition="3656" length="11" fullyQualifiedName="getPassword" identifier="getPassword"/>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="3637" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                      <name lexicalForm="setPassword" startPosition="3640" length="11" fullyQualifiedName="setPassword" identifier="setPassword"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c = id;" startPosition="3676" length="7">
                    <expression xsi:type="JavaAST:Assignment" lexicalForm="c = id" startPosition="3676" length="6" resolvedType="//@compilationUnits.7/@types.0" operator="=">
                      <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3676" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="3680" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getModel().addContact(c);" startPosition="3688" length="25">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel().addContact(c)" startPosition="3688" length="24">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="3710" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getModel()" startPosition="3688" length="10" resolvedType="//@compilationUnits.8/@types.0">
                        <name lexicalForm="getModel" startPosition="3688" length="8" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                      </expression>
                      <name lexicalForm="addContact" startPosition="3699" length="10" fullyQualifiedName="addContact" identifier="addContact"/>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="id.getNetwork().login(id.getUserId(), id.getPassword());" startPosition="3718" length="56">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="id.getNetwork().login(id.getUserId(), id.getPassword())" startPosition="3718" length="55">
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="id.getUserId()" startPosition="3740" length="14">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="3740" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                        <name lexicalForm="getUserId" startPosition="3743" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                      </arguments>
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="id.getPassword()" startPosition="3756" length="16">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="3756" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                        <name lexicalForm="getPassword" startPosition="3759" length="11" fullyQualifiedName="getPassword" identifier="getPassword"/>
                      </arguments>
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="id.getNetwork()" startPosition="3718" length="15" resolvedType="//@compilationUnits.12/@types.0">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="id" startPosition="3718" length="2" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="id" identifier="id"/>
                        <name lexicalForm="getNetwork" startPosition="3721" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
                      </expression>
                      <name lexicalForm="login" startPosition="3734" length="5" fullyQualifiedName="login" identifier="login"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getView().setEnabled(true);" startPosition="3976" length="27">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView().setEnabled(true)" startPosition="3976" length="26">
              <arguments xsi:type="JavaAST:BooleanLiteral" lexicalForm="true" startPosition="3997" length="4" booleanValue="true"/>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getView()" startPosition="3976" length="9" resolvedType="//@compilationUnits.17/@types.0">
                <name lexicalForm="getView" startPosition="3976" length="7" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="getView" identifier="getView"/>
              </expression>
              <name lexicalForm="setEnabled" startPosition="3986" length="10" fullyQualifiedName="setEnabled" identifier="setEnabled"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onNewContactDialogClose" startPosition="3225" length="23" fullyQualifiedName="onNewContactDialogClose" identifier="onNewContactDialogClose" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3220" length="4" code="void"/>
        <parameters lexicalForm="boolean okClicked" startPosition="3249" length="17">
          <name lexicalForm="okClicked" startPosition="3257" length="9" fullyQualifiedName="okClicked" identifier="okClicked" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="3249" length="7" code="boolean"/>
        </parameters>
        <parameters lexicalForm="im.view.NewContactDialog dlg" startPosition="3271" length="28">
          <name lexicalForm="dlg" startPosition="3296" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.NewContactDialog" startPosition="3271" length="24" resolvedType="//@compilationUnits.21/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialog" startPosition="3271" length="24" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="im.view.NewContactDialog">
              <name lexicalForm="NewContactDialog" startPosition="3279" length="16" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="NewContactDialog" identifier="NewContactDialog"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="3271" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="3274" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3271" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private im.edit.ContactEdit getContactEditFor(im.model.Contact c) {&#xA;&#x9;&#x9;for (java.util.Enumeration ces = getContactEdits(); ces&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;ContactEdit ce = (ContactEdit) ces.nextElement();&#xA;&#x9;&#x9;&#x9;if (ce.getModel().equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;return ce;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}" startPosition="4009" length="281">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="4009" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration ces = getContactEdits(); ces&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;ContactEdit ce = (ContactEdit) ces.nextElement();&#xA;&#x9;&#x9;&#x9;if (ce.getModel().equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;return ce;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}" startPosition="4075" length="215">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ces = getContactEdits(); ces&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;ContactEdit ce = (ContactEdit) ces.nextElement();&#xA;&#x9;&#x9;&#x9;if (ce.getModel().equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;return ce;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="4079" length="193">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;ContactEdit ce = (ContactEdit) ces.nextElement();&#xA;&#x9;&#x9;&#x9;if (ce.getModel().equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;return ce;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="4160" length="112">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="ContactEdit ce = (ContactEdit) ces.nextElement();" startPosition="4165" length="49">
                <fragments lexicalForm="ce = (ContactEdit) ces.nextElement()" startPosition="4177" length="36">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(ContactEdit) ces.nextElement()" startPosition="4182" length="31" resolvedType="//@compilationUnits.3/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ces.nextElement()" startPosition="4196" length="17">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="ces" startPosition="4196" length="3" fullyQualifiedName="ces" identifier="ces"/>
                      <name lexicalForm="nextElement" startPosition="4200" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                    </expression>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="ContactEdit" startPosition="4183" length="11" resolvedType="//@compilationUnits.3/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="ContactEdit" startPosition="4183" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
                    </type>
                  </initializer>
                  <name lexicalForm="ce" startPosition="4177" length="2" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ce" identifier="ce" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="ContactEdit" startPosition="4165" length="11" resolvedType="//@compilationUnits.3/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="ContactEdit" startPosition="4165" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (ce.getModel().equals(c)) {&#xA;&#x9;&#x9;&#x9;&#x9;return ce;&#xA;&#x9;&#x9;&#x9;}" startPosition="4218" length="50">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ce.getModel().equals(c)" startPosition="4222" length="23">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="4243" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ce.getModel()" startPosition="4222" length="13" resolvedType="//@compilationUnits.7/@types.0">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="ce" startPosition="4222" length="2" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ce" identifier="ce"/>
                    <name lexicalForm="getModel" startPosition="4225" length="8" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getModel" identifier="getModel"/>
                  </expression>
                  <name lexicalForm="equals" startPosition="4236" length="6" fullyQualifiedName="equals" identifier="equals"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;return ce;&#xA;&#x9;&#x9;&#x9;}" startPosition="4247" length="21">
                  <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return ce;" startPosition="4253" length="10">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="ce" startPosition="4260" length="2" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ce" identifier="ce"/>
                  </statements>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ces&#xA;&#x9;&#x9;&#x9;&#x9;.hasMoreElements()" startPosition="4131" length="26">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ces" startPosition="4131" length="3" fullyQualifiedName="ces" identifier="ces"/>
              <name lexicalForm="hasMoreElements" startPosition="4140" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ces = getContactEdits()" startPosition="4084" length="45">
              <fragments lexicalForm="ces = getContactEdits()" startPosition="4106" length="23">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getContactEdits()" startPosition="4112" length="17">
                  <name lexicalForm="getContactEdits" startPosition="4112" length="15" fullyQualifiedName="getContactEdits" identifier="getContactEdits"/>
                </initializer>
                <name lexicalForm="ces" startPosition="4106" length="3" fullyQualifiedName="ces" identifier="ces" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="4084" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="4084" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="4094" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="4084" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="4089" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="4084" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return null;" startPosition="4275" length="12">
            <expression xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="4282" length="4"/>
          </statements>
        </body>
        <name lexicalForm="getContactEditFor" startPosition="4037" length="17" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="getContactEditFor" identifier="getContactEditFor" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactEdit" startPosition="4017" length="19" resolvedType="//@compilationUnits.3/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactEdit" startPosition="4017" length="19" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="im.edit.ContactEdit">
            <name lexicalForm="ContactEdit" startPosition="4025" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="4017" length="7" fullyQualifiedName="im.edit">
              <name lexicalForm="edit" startPosition="4020" length="4" fullyQualifiedName="edit" identifier="edit"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4017" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
        <parameters lexicalForm="im.model.Contact c" startPosition="4055" length="18">
          <name lexicalForm="c" startPosition="4072" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="4055" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="4055" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="4064" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="4055" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="4058" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4055" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.ContactList getModel() {&#xA;&#x9;&#x9;return model;&#xA;&#x9;}" startPosition="4293" length="59">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4293" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return model;&#xA;&#x9;}" startPosition="4332" length="20">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return model;" startPosition="4336" length="13">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="4343" length="5" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="model" identifier="model"/>
          </statements>
        </body>
        <name lexicalForm="getModel" startPosition="4321" length="8" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="getModel" identifier="getModel" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.ContactList" startPosition="4300" length="20" resolvedType="//@compilationUnits.8/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.ContactList" startPosition="4300" length="20" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="im.model.ContactList">
            <name lexicalForm="ContactList" startPosition="4309" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="ContactList" identifier="ContactList"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="4300" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="4303" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4300" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setModel(im.model.ContactList model) {&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}" startPosition="4355" length="186">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4355" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);&#xA;&#x9;&#x9;this.model = model;&#xA;&#x9;&#x9;if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);&#xA;&#x9;}" startPosition="4404" length="137">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.model != null)&#xA;&#x9;&#x9;&#x9;this.model.deleteObserver(this);" startPosition="4408" length="59">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.model != null" startPosition="4412" length="18" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.model" startPosition="4412" length="10" resolvedType="//@compilationUnits.8/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4412" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                <name lexicalForm="model" startPosition="4417" length="5" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="model" identifier="model"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="4426" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.model.deleteObserver(this);" startPosition="4435" length="32">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.model.deleteObserver(this)" startPosition="4435" length="31">
                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4461" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.model" startPosition="4435" length="10" resolvedType="//@compilationUnits.8/@types.0">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4435" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                  <name lexicalForm="model" startPosition="4440" length="5" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="model" identifier="model"/>
                </expression>
                <name lexicalForm="deleteObserver" startPosition="4446" length="14" fullyQualifiedName="deleteObserver" identifier="deleteObserver"/>
              </expression>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.model = model;" startPosition="4470" length="19">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.model = model" startPosition="4470" length="18" resolvedType="//@compilationUnits.8/@types.0" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.model" startPosition="4470" length="10" resolvedType="//@compilationUnits.8/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4470" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                <name lexicalForm="model" startPosition="4475" length="5" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="model" identifier="model"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="4483" length="5" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="model" identifier="model"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (model != null)&#xA;&#x9;&#x9;&#x9;model.addObserver(this);" startPosition="4492" length="46">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="model != null" startPosition="4496" length="13" operator="!=">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="4496" length="5" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="model" identifier="model"/>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="4505" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="model.addObserver(this);" startPosition="4514" length="24">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="model.addObserver(this)" startPosition="4514" length="23">
                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4532" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="model" startPosition="4514" length="5" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="model" identifier="model"/>
                <name lexicalForm="addObserver" startPosition="4520" length="11" fullyQualifiedName="addObserver" identifier="addObserver"/>
              </expression>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setModel" startPosition="4367" length="8" fullyQualifiedName="setModel" identifier="setModel" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4362" length="4" code="void"/>
        <parameters lexicalForm="im.model.ContactList model" startPosition="4376" length="26">
          <name lexicalForm="model" startPosition="4397" length="5" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="model" identifier="model" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.ContactList" startPosition="4376" length="20" resolvedType="//@compilationUnits.8/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.ContactList" startPosition="4376" length="20" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="im.model.ContactList">
              <name lexicalForm="ContactList" startPosition="4385" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="ContactList" identifier="ContactList"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="4376" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="4379" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4376" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.view.ContactListView getView() {&#xA;&#x9;&#x9;return view;&#xA;&#x9;}" startPosition="4544" length="60">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4544" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return view;&#xA;&#x9;}" startPosition="4585" length="19">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return view;" startPosition="4589" length="12">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="view" startPosition="4596" length="4" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="view" identifier="view"/>
          </statements>
        </body>
        <name lexicalForm="getView" startPosition="4575" length="7" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="getView" identifier="getView" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ContactListView" startPosition="4551" length="23" resolvedType="//@compilationUnits.17/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListView" startPosition="4551" length="23" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="im.view.ContactListView">
            <name lexicalForm="ContactListView" startPosition="4559" length="15" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="ContactListView" identifier="ContactListView"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="4551" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="4554" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4551" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setView(im.view.ContactListView view) {&#xA;&#x9;&#x9;this.view = view;&#xA;&#x9;}" startPosition="4607" length="74">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4607" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.view = view;&#xA;&#x9;}" startPosition="4657" length="24">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.view = view;" startPosition="4661" length="17">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.view = view" startPosition="4661" length="16" resolvedType="//@compilationUnits.17/@types.0" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.view" startPosition="4661" length="9" resolvedType="//@compilationUnits.17/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4661" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                <name lexicalForm="view" startPosition="4666" length="4" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="view" identifier="view"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="view" startPosition="4673" length="4" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="view" identifier="view"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setView" startPosition="4619" length="7" fullyQualifiedName="setView" identifier="setView" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4614" length="4" code="void"/>
        <parameters lexicalForm="im.view.ContactListView view" startPosition="4627" length="28">
          <name lexicalForm="view" startPosition="4651" length="4" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="view" identifier="view" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ContactListView" startPosition="4627" length="23" resolvedType="//@compilationUnits.17/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListView" startPosition="4627" length="23" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="im.view.ContactListView">
              <name lexicalForm="ContactListView" startPosition="4635" length="15" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="ContactListView" identifier="ContactListView"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="4627" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="4630" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4627" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.util.Enumeration getContactEdits() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(contactEdit&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}" startPosition="4684" length="136">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4684" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(contactEdit&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}" startPosition="4731" length="89">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new be.ac.vub.util.IteratorEnumerationAdapter(contactEdit&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());" startPosition="4735" length="82">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new be.ac.vub.util.IteratorEnumerationAdapter(contactEdit&#xA;&#x9;&#x9;&#x9;&#x9;.iterator())" startPosition="4742" length="74" resolvedType="//@compilationUnits.0/@types.0">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="contactEdit&#xA;&#x9;&#x9;&#x9;&#x9;.iterator()" startPosition="4788" length="27">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="4788" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                <name lexicalForm="iterator" startPosition="4805" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
              </arguments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="4746" length="41" resolvedType="//@compilationUnits.0/@types.0">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="4746" length="41" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="be.ac.vub.util.IteratorEnumerationAdapter">
                  <name lexicalForm="IteratorEnumerationAdapter" startPosition="4761" length="26" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="IteratorEnumerationAdapter" identifier="IteratorEnumerationAdapter"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util" startPosition="4746" length="14" fullyQualifiedName="be.ac.vub.util">
                    <name lexicalForm="util" startPosition="4756" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub" startPosition="4746" length="9" fullyQualifiedName="be.ac.vub">
                      <name lexicalForm="vub" startPosition="4752" length="3" fullyQualifiedName="vub" identifier="vub"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac" startPosition="4746" length="5" fullyQualifiedName="be.ac">
                        <name lexicalForm="ac" startPosition="4749" length="2" fullyQualifiedName="ac" identifier="ac"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="be" startPosition="4746" length="2" fullyQualifiedName="be" identifier="be"/>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </name>
              </type>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getContactEdits" startPosition="4713" length="15" fullyQualifiedName="getContactEdits" identifier="getContactEdits" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="4691" length="21">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="4691" length="21" fullyQualifiedName="java.util.Enumeration">
            <name lexicalForm="Enumeration" startPosition="4701" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="4691" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="4696" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="4691" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addContactEdit(im.edit.ContactEdit contactEdit) {&#xA;&#x9;&#x9;if (!this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="4823" length="189">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4823" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (!this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="4883" length="129">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}" startPosition="4887" length="122">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.contactEdit.contains(contactEdit)" startPosition="4891" length="39" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contactEdit.contains(contactEdit)" startPosition="4892" length="38">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="4918" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contactEdit" startPosition="4892" length="16">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4892" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                  <name lexicalForm="contactEdit" startPosition="4897" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                </expression>
                <name lexicalForm="contains" startPosition="4909" length="8" fullyQualifiedName="contains" identifier="contains"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}" startPosition="4932" length="77">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contactEdit.add(contactEdit);" startPosition="4937" length="34">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contactEdit.add(contactEdit)" startPosition="4937" length="33">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="4958" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                  <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contactEdit" startPosition="4937" length="16">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4937" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                    <name lexicalForm="contactEdit" startPosition="4942" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                  </expression>
                  <name lexicalForm="add" startPosition="4954" length="3" fullyQualifiedName="add" identifier="add"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="contactEdit.setListEdit(this);" startPosition="4975" length="30">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contactEdit.setListEdit(this)" startPosition="4975" length="29">
                  <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4999" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="4975" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                  <name lexicalForm="setListEdit" startPosition="4987" length="11" fullyQualifiedName="setListEdit" identifier="setListEdit"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="addContactEdit" startPosition="4835" length="14" fullyQualifiedName="addContactEdit" identifier="addContactEdit" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4830" length="4" code="void"/>
        <parameters lexicalForm="im.edit.ContactEdit contactEdit" startPosition="4850" length="31">
          <name lexicalForm="contactEdit" startPosition="4870" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactEdit" startPosition="4850" length="19" resolvedType="//@compilationUnits.3/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactEdit" startPosition="4850" length="19" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="im.edit.ContactEdit">
              <name lexicalForm="ContactEdit" startPosition="4858" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="4850" length="7" fullyQualifiedName="im.edit">
                <name lexicalForm="edit" startPosition="4853" length="4" fullyQualifiedName="edit" identifier="edit"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4850" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeContactEdit(im.edit.ContactEdit contactEdit) {&#xA;&#x9;&#x9;if (this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;this.contactEdit.remove(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(null);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="5015" length="194">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5015" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;this.contactEdit.remove(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(null);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="5078" length="131">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;this.contactEdit.remove(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(null);&#xA;&#x9;&#x9;}" startPosition="5082" length="124">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contactEdit.contains(contactEdit)" startPosition="5086" length="38">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="5112" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
              <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contactEdit" startPosition="5086" length="16">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5086" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                <name lexicalForm="contactEdit" startPosition="5091" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
              </expression>
              <name lexicalForm="contains" startPosition="5103" length="8" fullyQualifiedName="contains" identifier="contains"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.contactEdit.remove(contactEdit);&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(null);&#xA;&#x9;&#x9;}" startPosition="5126" length="80">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contactEdit.remove(contactEdit);" startPosition="5131" length="37">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contactEdit.remove(contactEdit)" startPosition="5131" length="36">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="5155" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                  <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contactEdit" startPosition="5131" length="16">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5131" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                    <name lexicalForm="contactEdit" startPosition="5136" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                  </expression>
                  <name lexicalForm="remove" startPosition="5148" length="6" fullyQualifiedName="remove" identifier="remove"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="contactEdit.setListEdit(null);" startPosition="5172" length="30">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contactEdit.setListEdit(null)" startPosition="5172" length="29">
                  <arguments xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="5196" length="4"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="5172" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                  <name lexicalForm="setListEdit" startPosition="5184" length="11" fullyQualifiedName="setListEdit" identifier="setListEdit"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="removeContactEdit" startPosition="5027" length="17" fullyQualifiedName="removeContactEdit" identifier="removeContactEdit" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5022" length="4" code="void"/>
        <parameters lexicalForm="im.edit.ContactEdit contactEdit" startPosition="5045" length="31">
          <name lexicalForm="contactEdit" startPosition="5065" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactEdit" startPosition="5045" length="19" resolvedType="//@compilationUnits.3/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactEdit" startPosition="5045" length="19" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="im.edit.ContactEdit">
              <name lexicalForm="ContactEdit" startPosition="5053" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="5045" length="7" fullyQualifiedName="im.edit">
                <name lexicalForm="edit" startPosition="5048" length="4" fullyQualifiedName="edit" identifier="edit"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5045" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.edit.ContactEdit getContactEditAt(int index) {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.edit.ContactEdit) contactEdit.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="5212" length="185">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5212" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.edit.ContactEdit) contactEdit.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="5267" length="130">
          <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;return (im.edit.ContactEdit) contactEdit.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}" startPosition="5271" length="123">
            <catchClauses lexicalForm="catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}" startPosition="5337" length="57">
              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}" startPosition="5373" length="21">
                <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return null;" startPosition="5378" length="12">
                  <expression xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="5385" length="4"/>
                </statements>
              </body>
              <exception lexicalForm="IndexOutOfBoundsException e" startPosition="5344" length="27">
                <name lexicalForm="e" startPosition="5370" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="IndexOutOfBoundsException" startPosition="5344" length="25">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="IndexOutOfBoundsException" startPosition="5344" length="25" fullyQualifiedName="IndexOutOfBoundsException" identifier="IndexOutOfBoundsException"/>
                </type>
              </exception>
            </catchClauses>
            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;return (im.edit.ContactEdit) contactEdit.get(index);&#xA;&#x9;&#x9;}" startPosition="5275" length="61">
              <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return (im.edit.ContactEdit) contactEdit.get(index);" startPosition="5280" length="52">
                <expression xsi:type="JavaAST:CastExpression" lexicalForm="(im.edit.ContactEdit) contactEdit.get(index)" startPosition="5287" length="44" resolvedType="//@compilationUnits.3/@types.0">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contactEdit.get(index)" startPosition="5309" length="22">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="5325" length="5" fullyQualifiedName="index" identifier="index"/>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="5309" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                    <name lexicalForm="get" startPosition="5321" length="3" fullyQualifiedName="get" identifier="get"/>
                  </expression>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactEdit" startPosition="5288" length="19" resolvedType="//@compilationUnits.3/@types.0">
                    <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactEdit" startPosition="5288" length="19" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="im.edit.ContactEdit">
                      <name lexicalForm="ContactEdit" startPosition="5296" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="5288" length="7" fullyQualifiedName="im.edit">
                        <name lexicalForm="edit" startPosition="5291" length="4" fullyQualifiedName="edit" identifier="edit"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5288" length="2" fullyQualifiedName="im" identifier="im"/>
                      </qualifier>
                    </name>
                  </type>
                </expression>
              </statements>
            </body>
          </statements>
        </body>
        <name lexicalForm="getContactEditAt" startPosition="5239" length="16" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="getContactEditAt" identifier="getContactEditAt" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactEdit" startPosition="5219" length="19" resolvedType="//@compilationUnits.3/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactEdit" startPosition="5219" length="19" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="im.edit.ContactEdit">
            <name lexicalForm="ContactEdit" startPosition="5227" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="5219" length="7" fullyQualifiedName="im.edit">
              <name lexicalForm="edit" startPosition="5222" length="4" fullyQualifiedName="edit" identifier="edit"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5219" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
        <parameters lexicalForm="int index" startPosition="5256" length="9">
          <name lexicalForm="index" startPosition="5260" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="5256" length="3" code="int"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public int getIndexOfContactEdit(im.edit.ContactEdit contactEdit) {&#xA;&#x9;&#x9;return this.contactEdit.indexOf(contactEdit);&#xA;&#x9;}" startPosition="5400" length="118">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5400" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return this.contactEdit.indexOf(contactEdit);&#xA;&#x9;}" startPosition="5466" length="52">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return this.contactEdit.indexOf(contactEdit);" startPosition="5470" length="45">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contactEdit.indexOf(contactEdit)" startPosition="5477" length="37">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="5502" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
              <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contactEdit" startPosition="5477" length="16">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5477" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                <name lexicalForm="contactEdit" startPosition="5482" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
              </expression>
              <name lexicalForm="indexOf" startPosition="5494" length="7" fullyQualifiedName="indexOf" identifier="indexOf"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getIndexOfContactEdit" startPosition="5411" length="21" fullyQualifiedName="getIndexOfContactEdit" identifier="getIndexOfContactEdit" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="5407" length="3" code="int"/>
        <parameters lexicalForm="im.edit.ContactEdit contactEdit" startPosition="5433" length="31">
          <name lexicalForm="contactEdit" startPosition="5453" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactEdit" startPosition="5433" length="19" resolvedType="//@compilationUnits.3/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactEdit" startPosition="5433" length="19" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="im.edit.ContactEdit">
              <name lexicalForm="ContactEdit" startPosition="5441" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="5433" length="7" fullyQualifiedName="im.edit">
                <name lexicalForm="edit" startPosition="5436" length="4" fullyQualifiedName="edit" identifier="edit"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5433" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void insertContactEdit(im.edit.ContactEdit contactEdit, int index) {&#xA;&#x9;&#x9;if (!this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(index, contactEdit);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="5521" length="307">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5521" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (!this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(index, contactEdit);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="5595" length="233">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.contactEdit.contains(contactEdit)) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(index, contactEdit);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}" startPosition="5599" length="226">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.contactEdit.contains(contactEdit)" startPosition="5603" length="39" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contactEdit.contains(contactEdit)" startPosition="5604" length="38">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="5630" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contactEdit" startPosition="5604" length="16">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5604" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                  <name lexicalForm="contactEdit" startPosition="5609" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                </expression>
                <name lexicalForm="contains" startPosition="5621" length="8" fullyQualifiedName="contains" identifier="contains"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(index, contactEdit);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;contactEdit.setListEdit(this);&#xA;&#x9;&#x9;}" startPosition="5644" length="181">
              <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(index, contactEdit);&#xA;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;}" startPosition="5649" length="138">
                <catchClauses lexicalForm="catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;}" startPosition="5706" length="81">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(contactEdit);&#xA;&#x9;&#x9;&#x9;}" startPosition="5742" length="45">
                    <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contactEdit.add(contactEdit);" startPosition="5748" length="34">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contactEdit.add(contactEdit)" startPosition="5748" length="33">
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="5769" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                        <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contactEdit" startPosition="5748" length="16">
                          <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5748" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                          <name lexicalForm="contactEdit" startPosition="5753" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                        </expression>
                        <name lexicalForm="add" startPosition="5765" length="3" fullyQualifiedName="add" identifier="add"/>
                      </expression>
                    </statements>
                  </body>
                  <exception lexicalForm="IndexOutOfBoundsException e" startPosition="5713" length="27">
                    <name lexicalForm="e" startPosition="5739" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="IndexOutOfBoundsException" startPosition="5713" length="25">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="IndexOutOfBoundsException" startPosition="5713" length="25" fullyQualifiedName="IndexOutOfBoundsException" identifier="IndexOutOfBoundsException"/>
                    </type>
                  </exception>
                </catchClauses>
                <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;this.contactEdit.add(index, contactEdit);&#xA;&#x9;&#x9;&#x9;}" startPosition="5653" length="52">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contactEdit.add(index, contactEdit);" startPosition="5659" length="41">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contactEdit.add(index, contactEdit)" startPosition="5659" length="40">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="5680" length="5" fullyQualifiedName="index" identifier="index"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="5687" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                      <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contactEdit" startPosition="5659" length="16">
                        <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5659" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                        <name lexicalForm="contactEdit" startPosition="5664" length="11" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                      </expression>
                      <name lexicalForm="add" startPosition="5676" length="3" fullyQualifiedName="add" identifier="add"/>
                    </expression>
                  </statements>
                </body>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="contactEdit.setListEdit(this);" startPosition="5791" length="30">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contactEdit.setListEdit(this)" startPosition="5791" length="29">
                  <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5815" length="4" resolvedType="//@compilationUnits.5/@types.0"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="contactEdit" startPosition="5791" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit"/>
                  <name lexicalForm="setListEdit" startPosition="5803" length="11" fullyQualifiedName="setListEdit" identifier="setListEdit"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="insertContactEdit" startPosition="5533" length="17" fullyQualifiedName="insertContactEdit" identifier="insertContactEdit" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5528" length="4" code="void"/>
        <parameters lexicalForm="im.edit.ContactEdit contactEdit" startPosition="5551" length="31">
          <name lexicalForm="contactEdit" startPosition="5571" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="contactEdit" identifier="contactEdit" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.edit.ContactEdit" startPosition="5551" length="19" resolvedType="//@compilationUnits.3/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit.ContactEdit" startPosition="5551" length="19" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="im.edit.ContactEdit">
              <name lexicalForm="ContactEdit" startPosition="5559" length="11" resolvedType="//@compilationUnits.3/@types.0" fullyQualifiedName="ContactEdit" identifier="ContactEdit"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.edit" startPosition="5551" length="7" fullyQualifiedName="im.edit">
                <name lexicalForm="edit" startPosition="5554" length="4" fullyQualifiedName="edit" identifier="edit"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5551" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="int index" startPosition="5584" length="9">
          <name lexicalForm="index" startPosition="5588" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="5584" length="3" code="int"/>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="ContactListEdit" startPosition="66" length="15" resolvedType="//@compilationUnits.5/@types.0" fullyQualifiedName="ContactListEdit" identifier="ContactListEdit" declaration="true"/>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="im.view.NewContactDialogListener" startPosition="98" length="32" resolvedType="//@compilationUnits.19/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialogListener" startPosition="98" length="32" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="im.view.NewContactDialogListener">
          <name lexicalForm="NewContactDialogListener" startPosition="106" length="24" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="NewContactDialogListener" identifier="NewContactDialogListener"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="98" length="7" fullyQualifiedName="im.view">
            <name lexicalForm="view" startPosition="101" length="4" fullyQualifiedName="view" identifier="view"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="98" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ContactListViewListener" startPosition="135" length="31" resolvedType="//@compilationUnits.20/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListViewListener" startPosition="135" length="31" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="im.view.ContactListViewListener">
          <name lexicalForm="ContactListViewListener" startPosition="143" length="23" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="ContactListViewListener" identifier="ContactListViewListener"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="135" length="7" fullyQualifiedName="im.view">
            <name lexicalForm="view" startPosition="138" length="4" fullyQualifiedName="view" identifier="view"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="135" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observer" startPosition="171" length="18">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observer" startPosition="171" length="18" fullyQualifiedName="java.util.Observer">
          <name lexicalForm="Observer" startPosition="181" length="8" fullyQualifiedName="Observer" identifier="Observer"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="171" length="9" fullyQualifiedName="java.util">
            <name lexicalForm="util" startPosition="176" length="4" fullyQualifiedName="util" identifier="util"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="171" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.model;&#xA;&#xA;public abstract class NetworkSpecificData extends java.util.Observable {&#xA;&#x9;private im.networking.Network network = null;&#xA;&#xA;&#x9;public im.networking.Network getNetwork() {&#xA;&#x9;&#x9;return network;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;if (this.network != network) {&#xA;&#x9;&#x9;&#x9;this.network = network;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Network&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.networking.Network.class);&#xA;&#x9;&#x9;&#x9;if (network != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="565">
    <package lexicalForm="package im.model;" length="17">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="8" length="8" fullyQualifiedName="im.model">
        <name lexicalForm="model" startPosition="11" length="5" fullyQualifiedName="model" identifier="model"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public abstract class NetworkSpecificData extends java.util.Observable {&#xA;&#x9;private im.networking.Network network = null;&#xA;&#xA;&#x9;public im.networking.Network getNetwork() {&#xA;&#x9;&#x9;return network;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;if (this.network != network) {&#xA;&#x9;&#x9;&#x9;this.network = network;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Network&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.networking.Network.class);&#xA;&#x9;&#x9;&#x9;if (network != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}" startPosition="19" length="545" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.6/@types.0/@name //@compilationUnits.10/@types.0/@superclassType/@name/@name //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.7/@types.0/@superclassType/@name/@name //@compilationUnits.7/@types.0/@superclassType/@name //@compilationUnits.10/@types.0/@superclassType/@name" resolvedTypeReferences="//@compilationUnits.7/@types.0/@superclassType //@compilationUnits.10/@types.0/@superclassType">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="19" length="6" public="true"/>
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="26" length="8" abstract="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.networking.Network network = null;" startPosition="93" length="45">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="93" length="7" private="true"/>
        <fragments lexicalForm="network = null" startPosition="123" length="14">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="133" length="4"/>
          <name lexicalForm="network" startPosition="123" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="101" length="21" resolvedType="//@compilationUnits.12/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="101" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
            <name lexicalForm="Network" startPosition="115" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="101" length="13" fullyQualifiedName="im.networking">
              <name lexicalForm="networking" startPosition="104" length="10" fullyQualifiedName="networking" identifier="networking"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="101" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.networking.Network getNetwork() {&#xA;&#x9;&#x9;return network;&#xA;&#x9;}" startPosition="141" length="64">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="141" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return network;&#xA;&#x9;}" startPosition="183" length="22">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return network;" startPosition="187" length="15">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="194" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
          </statements>
        </body>
        <name lexicalForm="getNetwork" startPosition="170" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="148" length="21" resolvedType="//@compilationUnits.12/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="148" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
            <name lexicalForm="Network" startPosition="162" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="148" length="13" fullyQualifiedName="im.networking">
              <name lexicalForm="networking" startPosition="151" length="10" fullyQualifiedName="networking" identifier="networking"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="148" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setNetwork(im.networking.Network network) {&#xA;&#x9;&#x9;if (this.network != network) {&#xA;&#x9;&#x9;&#x9;this.network = network;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Network&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.networking.Network.class);&#xA;&#x9;&#x9;&#x9;if (network != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="208" length="353">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="208" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.network != network) {&#xA;&#x9;&#x9;&#x9;this.network = network;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Network&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.networking.Network.class);&#xA;&#x9;&#x9;&#x9;if (network != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="262" length="299">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.network != network) {&#xA;&#x9;&#x9;&#x9;this.network = network;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Network&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.networking.Network.class);&#xA;&#x9;&#x9;&#x9;if (network != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="266" length="292">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.network != network" startPosition="270" length="23" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.network" startPosition="270" length="12" resolvedType="//@compilationUnits.12/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="270" length="4" resolvedType="//@compilationUnits.6/@types.0"/>
                <name lexicalForm="network" startPosition="275" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="286" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.network = network;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Network&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.networking.Network.class);&#xA;&#x9;&#x9;&#x9;if (network != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, network);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="295" length="263">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.network = network;" startPosition="300" length="23">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.network = network" startPosition="300" length="22" resolvedType="//@compilationUnits.12/@types.0" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.network" startPosition="300" length="12" resolvedType="//@compilationUnits.12/@types.0">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="300" length="4" resolvedType="//@compilationUnits.6/@types.0"/>
                    <name lexicalForm="network" startPosition="305" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="315" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="327" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="327" length="12">
                  <name lexicalForm="setChanged" startPosition="327" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="344" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="364" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="368" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="372" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="372" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="382" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="372" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="377" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="372" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="364" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="344" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="344" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="354" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="344" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="349" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="344" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Network&quot;);" startPosition="398" length="25">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Network&quot;)" startPosition="398" length="24">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="404" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Network&quot;" startPosition="412" length="9" escapedValue="&quot;Network&quot;" literalValue="Network"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="398" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="400" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, im.networking.Network.class);" startPosition="427" length="44">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, im.networking.Network.class)" startPosition="427" length="43">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="433" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="im.networking.Network.class" startPosition="442" length="27">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="442" length="21" resolvedType="//@compilationUnits.12/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="442" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
                        <name lexicalForm="Network" startPosition="456" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="442" length="13" fullyQualifiedName="im.networking">
                          <name lexicalForm="networking" startPosition="445" length="10" fullyQualifiedName="networking" identifier="networking"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="442" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="427" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="429" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (network != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, network);&#xA;&#x9;&#x9;&#x9;}" startPosition="475" length="56">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="network != null" startPosition="479" length="15" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="479" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="490" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, network);&#xA;&#x9;&#x9;&#x9;}" startPosition="496" length="35">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, network);" startPosition="502" length="24">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, network)" startPosition="502" length="23">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="508" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="517" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="502" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="504" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="535" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="535" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="551" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="535" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setNetwork" startPosition="220" length="10" fullyQualifiedName="setNetwork" identifier="setNetwork" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="215" length="4" code="void"/>
        <parameters lexicalForm="im.networking.Network network" startPosition="231" length="29">
          <name lexicalForm="network" startPosition="253" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="network" identifier="network" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="231" length="21" resolvedType="//@compilationUnits.12/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="231" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
              <name lexicalForm="Network" startPosition="245" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="231" length="13" fullyQualifiedName="im.networking">
                <name lexicalForm="networking" startPosition="234" length="10" fullyQualifiedName="networking" identifier="networking"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="231" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="NetworkSpecificData" startPosition="41" length="19" resolvedType="//@compilationUnits.6/@types.0" fullyQualifiedName="NetworkSpecificData" identifier="NetworkSpecificData" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observable" startPosition="69" length="20">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observable" startPosition="69" length="20" fullyQualifiedName="java.util.Observable">
          <name lexicalForm="Observable" startPosition="79" length="10" fullyQualifiedName="Observable" identifier="Observable"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="69" length="9" fullyQualifiedName="java.util">
            <name lexicalForm="util" startPosition="74" length="4" fullyQualifiedName="util" identifier="util"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="69" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </name>
      </superclassType>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.model;&#xA;&#xA;public class Contact extends im.model.NetworkSpecificData {&#xA;&#x9;public class Contact_toStringBehavior {&#xA;&#x9;}&#xA;&#xA;&#x9;private java.lang.String userId = null;&#xA;&#xA;&#x9;private java.lang.String name = null;&#xA;&#xA;&#x9;private java.lang.String status = null;&#xA;&#xA;&#x9;public java.lang.String toString() {&#xA;&#x9;&#x9;final StringBuffer fmt = new StringBuffer();&#xA;&#x9;&#x9;final String name = getName();&#xA;&#x9;&#x9;final String status = getStatus();&#xA;&#x9;&#x9;fmt.append(&quot;  &quot;);&#xA;&#x9;&#x9;fmt.append((name == null) ? getUserId() : name);&#xA;&#x9;&#x9;if (getNetwork() != null) {&#xA;&#x9;&#x9;&#x9;fmt.append(&quot; - &quot;);&#xA;&#x9;&#x9;&#x9;fmt.append(getNetwork().getName());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;fmt.append(&quot; (&quot;);&#xA;&#x9;&#x9;fmt.append((status == null) ? &quot;offline&quot; : status);&#xA;&#x9;&#x9;fmt.append(&quot;)&quot;);&#xA;&#x9;&#x9;return fmt.toString();&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getUserId() {&#xA;&#x9;&#x9;return userId;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setUserId(java.lang.String userId) {&#xA;&#x9;&#x9;if (this.userId != userId) {&#xA;&#x9;&#x9;&#x9;this.userId = userId;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;UserId&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (userId != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, userId);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getName() {&#xA;&#x9;&#x9;return name;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setName(java.lang.String name) {&#xA;&#x9;&#x9;if (this.name != name) {&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getStatus() {&#xA;&#x9;&#x9;return status;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setStatus(java.lang.String status) {&#xA;&#x9;&#x9;if (this.status != status) {&#xA;&#x9;&#x9;&#x9;this.status = status;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Status&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (status != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, status);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="1831">
    <package lexicalForm="package im.model;" length="17">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="8" length="8" fullyQualifiedName="im.model">
        <name lexicalForm="model" startPosition="11" length="5" fullyQualifiedName="model" identifier="model"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class Contact extends im.model.NetworkSpecificData {&#xA;&#x9;public class Contact_toStringBehavior {&#xA;&#x9;}&#xA;&#xA;&#x9;private java.lang.String userId = null;&#xA;&#xA;&#x9;private java.lang.String name = null;&#xA;&#xA;&#x9;private java.lang.String status = null;&#xA;&#xA;&#x9;public java.lang.String toString() {&#xA;&#x9;&#x9;final StringBuffer fmt = new StringBuffer();&#xA;&#x9;&#x9;final String name = getName();&#xA;&#x9;&#x9;final String status = getStatus();&#xA;&#x9;&#x9;fmt.append(&quot;  &quot;);&#xA;&#x9;&#x9;fmt.append((name == null) ? getUserId() : name);&#xA;&#x9;&#x9;if (getNetwork() != null) {&#xA;&#x9;&#x9;&#x9;fmt.append(&quot; - &quot;);&#xA;&#x9;&#x9;&#x9;fmt.append(getNetwork().getName());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;fmt.append(&quot; (&quot;);&#xA;&#x9;&#x9;fmt.append((status == null) ? &quot;offline&quot; : status);&#xA;&#x9;&#x9;fmt.append(&quot;)&quot;);&#xA;&#x9;&#x9;return fmt.toString();&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getUserId() {&#xA;&#x9;&#x9;return userId;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setUserId(java.lang.String userId) {&#xA;&#x9;&#x9;if (this.userId != userId) {&#xA;&#x9;&#x9;&#x9;this.userId = userId;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;UserId&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (userId != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, userId);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getName() {&#xA;&#x9;&#x9;return name;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setName(java.lang.String name) {&#xA;&#x9;&#x9;if (this.name != name) {&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getStatus() {&#xA;&#x9;&#x9;return status;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setStatus(java.lang.String status) {&#xA;&#x9;&#x9;if (this.status != status) {&#xA;&#x9;&#x9;&#x9;this.status = status;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Status&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (status != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, status);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}" startPosition="19" length="1811" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.0/@expression/@leftOperand/@name //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.3/@parameters.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@parameters.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.1/@fragments.0/@initializer/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.6/@expression/@arguments.0 //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@body/@statements.0/@expression/@arguments.1 //@compilationUnits.13/@types.0/@bodyDeclarations.9/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.3/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.8/@parameters.0/@name //@compilationUnits.7/@types.0/@bodyDeclarations.8/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.3/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.2/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.0/@expression/@rightHandSide/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.2/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.1/@expression/@expression/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.1/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.1/@expression/@arguments.0/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name/@name //@compilationUnits.17/@types.0/@bodyDeclarations.0/@parameters.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.4/@expression/@arguments.1/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.3/@expression/@leftOperand //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.5/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.1/@expression/@arguments.0/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@body/@statements.0/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.2/@body/@statements.0/@body/@statements.1/@expression/@expression/@expression //@compilationUnits.7/@types.0/@bodyDeclarations.6/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@expression/@arguments.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.1/@fragments.0/@initializer/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.1/@expression/@arguments.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@body/@statements.1/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@elseStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.11/@types.0/@superclassType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.0/@type/@name/@name //@compilationUnits.12/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@expression/@leftOperand //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.1/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.0/@expression/@leftHandSide //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.5/@expression/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.12/@parameters.0/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.1/@fragments.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.5/@parameters.0/@name //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@leftHandSide/@name //@compilationUnits.12/@types.0/@bodyDeclarations.6/@parameters.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.2/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.5/@expression/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.7/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.1/@expression/@leftOperand //@compilationUnits.8/@types.0/@bodyDeclarations.6/@body/@statements.0/@body/@statements.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.2/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.0/@fragments.0/@initializer/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.1/@expression/@leftOperand/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@name //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@statements.5/@expression/@leftOperand //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.1/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.2/@expression/@arguments.0 //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.4/@thenStatement/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.8/@parameters.0/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.4/@parameters.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.12/@types.0/@bodyDeclarations.12/@parameters.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.0/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.2/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@statements.0/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.2/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.2/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.5/@parameters.0/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.11/@name //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@name //@compilationUnits.9/@types.0/@bodyDeclarations.1/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.9/@parameters.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.2/@parameters.0/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.4/@elseStatement/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.0/@expression/@rightHandSide/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.0/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@expression/@expression/@name //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@expression/@rightOperand/@expression/@leftOperand/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@expression/@leftOperand //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.3/@expression/@expression //@compilationUnits.7/@types.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.5/@expression/@leftHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.3/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.2/@thenStatement/@statements.1/@expression/@arguments.0 //@compilationUnits.3/@types.0/@bodyDeclarations.7/@body/@statements.0/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.4/@parameters.0/@name //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.5/@thenStatement/@statements.0/@expression/@arguments.1 //@compilationUnits.8/@types.0/@bodyDeclarations.7/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.4/@expression/@arguments.0 //@compilationUnits.23/@types.0/@bodyDeclarations.6/@parameters.0/@name //@compilationUnits.3/@types.0/@bodyDeclarations.0/@type/@name/@name //@compilationUnits.12/@types.0/@bodyDeclarations.12/@parameters.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.8/@returnType/@name/@name //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@parameters.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.0/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.2/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.5/@parameters.0/@name //@compilationUnits.11/@types.0/@superclassType/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.5/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.1/@fragments.0/@initializer/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@name //@compilationUnits.8/@types.0/@bodyDeclarations.2/@body/@statements.0/@body/@statements.0/@type/@name //@compilationUnits.9/@types.0/@bodyDeclarations.4/@returnType/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@parameters.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@thenStatement/@statements.1/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.3/@parameters.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.1/@expression/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.5/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.6/@fragments.0/@initializer/@arguments.0/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.4/@parameters.0/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.7/@returnType/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.0/@fragments.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.7/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.7/@expression/@arguments.0/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.2/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.6/@name //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.2/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.5/@parameters.0/@name //@compilationUnits.23/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@arguments.0/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.3/@expression/@arguments.0/@arguments.0/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.12/@parameters.0/@type/@name/@name //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.2/@thenStatement/@expression/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.1/@fragments.0/@initializer/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@parameters.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.5/@expression/@arguments.0/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.8/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.2/@fragments.0/@initializer/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.8/@parameters.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@body/@statements.0/@fragments.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.3/@parameters.0/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@parameters.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@body/@statements.1/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.1/@fragments.0/@initializer //@compilationUnits.7/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@body/@statements.1/@expression/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.6/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@parameters.0/@name //@compilationUnits.8/@types.0/@bodyDeclarations.5/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.9/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name/@name //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@expression/@rightOperand //@compilationUnits.8/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.8/@types.0/@bodyDeclarations.7/@parameters.0/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.6/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.0/@fragments.0/@initializer/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.1/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.0/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@elseStatement/@statements.0/@fragments.0/@initializer/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.1/@fragments.0/@initializer/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.5/@expression/@arguments.0 //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@leftOperand //@compilationUnits.3/@types.0/@bodyDeclarations.7/@returnType/@name/@name //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.2/@expression/@leftOperand //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.0/@fragments.0/@name //@compilationUnits.8/@types.0/@bodyDeclarations.2/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.8/@types.0/@bodyDeclarations.2/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@leftHandSide //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@expression/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.5/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.5/@body/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@arguments.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.10/@parameters.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@parameters.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.1/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@arguments.0/@expression //@compilationUnits.7/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.0/@fragments.0/@name //@compilationUnits.12/@types.0/@bodyDeclarations.6/@parameters.0/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.6/@parameters.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@expression/@leftOperand/@name //@compilationUnits.23/@types.0/@bodyDeclarations.6/@parameters.0/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.2/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.4/@name //@compilationUnits.5/@types.0/@bodyDeclarations.10/@parameters.0/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.2/@fragments.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.2/@fragments.0/@initializer/@type/@name //@compilationUnits.3/@types.0/@bodyDeclarations.3/@parameters.0/@type/@name //@compilationUnits.9/@types.0/@bodyDeclarations.1/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@parameters.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@body/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.4/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@elseStatement/@statements.0/@expression/@expression/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.5/@thenStatement/@statements.0/@expression/@arguments.1 //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@name //@compilationUnits.12/@types.0/@bodyDeclarations.6/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.1/@type/@name //@compilationUnits.17/@types.0/@bodyDeclarations.0/@parameters.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@body/@statements.0/@elseStatement/@expression/@leftOperand/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@rightHandSide //@compilationUnits.8/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name //@compilationUnits.9/@types.0/@bodyDeclarations.5/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.0/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.5/@expression/@leftOperand //@compilationUnits.3/@types.0/@bodyDeclarations.0/@fragments.0/@name //@compilationUnits.23/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@arguments.0/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.2/@expression/@arguments.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.1/@fragments.0/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.5/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.0/@fragments.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.2/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.4/@expression/@arguments.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.2/@expression/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.2/@body/@statements.0/@body/@statements.0/@fragments.0/@name //@compilationUnits.3/@types.0/@bodyDeclarations.8/@parameters.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.2/@fragments.0/@initializer/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.1/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.2/@fragments.0/@initializer //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.0/@type/@name/@name //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.1/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.0/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.11/@body/@statements.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.10/@parameters.0/@type/@name/@name //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@leftOperand/@name //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.0/@expression/@leftOperand //@compilationUnits.12/@types.0/@bodyDeclarations.1/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.5/@expression/@leftOperand //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@rightOperand //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.1/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.5/@expression/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@arguments.0/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@expression/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@expression/@leftOperand/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.3/@expression/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@expression/@leftOperand/@expression/@leftOperand //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.2/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@parameters.0/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.2/@parameters.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.10/@parameters.0/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.5/@thenStatement/@statements.0/@expression/@arguments.1 //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.4/@expression/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.9/@parameters.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.2/@expression/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.4/@body/@statements.0/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.7/@name //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.1/@fragments.0/@initializer //@compilationUnits.13/@types.0/@bodyDeclarations.10/@parameters.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.8/@returnType/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@thenStatement/@statements.0/@expression/@arguments.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.1/@expression/@arguments.0 //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.5/@thenStatement/@statements.0/@expression/@arguments.1 //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@thenStatement/@statements.1/@expression/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.6/@returnType/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.5/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.10/@parameters.0/@name //@compilationUnits.8/@types.0/@bodyDeclarations.6/@body/@statements.0/@body/@statements.0/@expression/@type/@name/@name //@compilationUnits.9/@types.0/@bodyDeclarations.4/@returnType/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.10/@body/@statements.0/@body/@statements.1/@expression/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@parameters.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.1/@type/@name/@name //@compilationUnits.12/@types.0/@bodyDeclarations.11/@returnType/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@body/@statements.1/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.12/@types.0/@bodyDeclarations.11/@returnType/@name/@name //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.9/@parameters.0/@type/@name/@name //@compilationUnits.17/@types.0/@bodyDeclarations.0/@parameters.0/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.7/@parameters.0/@name //@compilationUnits.8/@types.0/@bodyDeclarations.6/@body/@statements.0/@body/@statements.0/@expression/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.6/@expression/@arguments.0/@expression //@compilationUnits.7/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.3/@parameters.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.0/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.2/@parameters.0/@name //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@statements.0/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@statements.5/@thenStatement/@statements.0/@expression/@arguments.1 //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.0/@expression/@rightHandSide //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.6/@expression/@arguments.0 //@compilationUnits.12/@types.0/@bodyDeclarations.1/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.5/@expression/@leftOperand //@compilationUnits.4/@types.0/@bodyDeclarations.8/@name //@compilationUnits.7/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.8/@parameters.0/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@parameters.0/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@parameters.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.0/@fragments.0/@initializer //@compilationUnits.8/@types.0/@bodyDeclarations.8/@parameters.0/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.2/@fragments.0/@initializer/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.8/@parameters.0/@type/@name" resolvedTypeReferences="//@compilationUnits.3/@types.0/@bodyDeclarations.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.0/@type //@compilationUnits.3/@types.0/@bodyDeclarations.7/@returnType //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.2/@parameters.0/@type //@compilationUnits.8/@types.0/@bodyDeclarations.2/@body/@statements.0/@body/@statements.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.12/@parameters.0/@type //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.9/@types.0/@bodyDeclarations.5/@parameters.0/@type //@compilationUnits.13/@types.0/@bodyDeclarations.9/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@thenStatement/@statements.0/@expression/@arguments.0/@type //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@parameters.0/@type //@compilationUnits.12/@types.0/@bodyDeclarations.11/@returnType //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.0/@expression/@rightHandSide/@type //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.2/@fragments.0/@initializer/@type //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.8/@types.0/@bodyDeclarations.2/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.8/@types.0/@bodyDeclarations.4/@parameters.0/@type //@compilationUnits.9/@types.0/@bodyDeclarations.1/@type //@compilationUnits.9/@types.0/@bodyDeclarations.4/@returnType //@compilationUnits.8/@types.0/@bodyDeclarations.8/@parameters.0/@type //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.0/@type //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.3/@parameters.0/@type //@compilationUnits.11/@types.0/@superclassType //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.1/@fragments.0/@initializer/@type //@compilationUnits.4/@types.0/@bodyDeclarations.5/@parameters.0/@type //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.0/@type //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.0/@type //@compilationUnits.23/@types.0/@bodyDeclarations.6/@parameters.0/@type //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type //@compilationUnits.13/@types.0/@bodyDeclarations.10/@parameters.0/@type //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.4/@parameters.0/@type //@compilationUnits.12/@types.0/@bodyDeclarations.6/@parameters.0/@type //@compilationUnits.12/@types.0/@bodyDeclarations.5/@parameters.0/@type //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type //@compilationUnits.8/@types.0/@bodyDeclarations.6/@body/@statements.0/@body/@statements.0/@expression/@type //@compilationUnits.4/@types.0/@bodyDeclarations.8/@parameters.0/@type //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type //@compilationUnits.4/@types.0/@bodyDeclarations.8/@returnType //@compilationUnits.5/@types.0/@bodyDeclarations.10/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@body/@statements.0/@type //@compilationUnits.12/@types.0/@bodyDeclarations.12/@parameters.0/@type //@compilationUnits.8/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type //@compilationUnits.8/@types.0/@bodyDeclarations.7/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@body/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.2/@type //@compilationUnits.17/@types.0/@bodyDeclarations.0/@parameters.0/@type //@compilationUnits.3/@types.0/@bodyDeclarations.8/@parameters.0/@type //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.5/@parameters.0/@type //@compilationUnits.3/@types.0/@bodyDeclarations.3/@parameters.0/@type //@compilationUnits.12/@types.0/@bodyDeclarations.1/@type //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.1/@type //@compilationUnits.5/@types.0/@bodyDeclarations.5/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.0/@type //@compilationUnits.8/@types.0/@bodyDeclarations.6/@returnType //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.1/@type //@compilationUnits.8/@types.0/@bodyDeclarations.5/@parameters.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.0/@type //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.2/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="19" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class Contact_toStringBehavior {&#xA;&#x9;}" startPosition="80" length="42" memberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.7/@types.0/@bodyDeclarations.0/@name">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="80" length="6" public="true"/>
        <name lexicalForm="Contact_toStringBehavior" startPosition="93" length="24" resolvedType="//@compilationUnits.7/@types.0/@bodyDeclarations.0" fullyQualifiedName="Contact_toStringBehavior" identifier="Contact_toStringBehavior" declaration="true"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.lang.String userId = null;" startPosition="125" length="39">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="125" length="7" private="true"/>
        <fragments lexicalForm="userId = null" startPosition="150" length="13">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="159" length="4"/>
          <name lexicalForm="userId" startPosition="150" length="6" fullyQualifiedName="userId" identifier="userId" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="133" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="133" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="143" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="133" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="138" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="133" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.lang.String name = null;" startPosition="167" length="37">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="167" length="7" private="true"/>
        <fragments lexicalForm="name = null" startPosition="192" length="11">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="199" length="4"/>
          <name lexicalForm="name" startPosition="192" length="4" fullyQualifiedName="name" identifier="name" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="175" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="175" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="185" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="175" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="180" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="175" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.lang.String status = null;" startPosition="207" length="39">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="207" length="7" private="true"/>
        <fragments lexicalForm="status = null" startPosition="232" length="13">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="241" length="4"/>
          <name lexicalForm="status" startPosition="232" length="6" fullyQualifiedName="status" identifier="status" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="215" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="215" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="225" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="215" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="220" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="215" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String toString() {&#xA;&#x9;&#x9;final StringBuffer fmt = new StringBuffer();&#xA;&#x9;&#x9;final String name = getName();&#xA;&#x9;&#x9;final String status = getStatus();&#xA;&#x9;&#x9;fmt.append(&quot;  &quot;);&#xA;&#x9;&#x9;fmt.append((name == null) ? getUserId() : name);&#xA;&#x9;&#x9;if (getNetwork() != null) {&#xA;&#x9;&#x9;&#x9;fmt.append(&quot; - &quot;);&#xA;&#x9;&#x9;&#x9;fmt.append(getNetwork().getName());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;fmt.append(&quot; (&quot;);&#xA;&#x9;&#x9;fmt.append((status == null) ? &quot;offline&quot; : status);&#xA;&#x9;&#x9;fmt.append(&quot;)&quot;);&#xA;&#x9;&#x9;return fmt.toString();&#xA;&#x9;}" startPosition="249" length="439">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="249" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;final StringBuffer fmt = new StringBuffer();&#xA;&#x9;&#x9;final String name = getName();&#xA;&#x9;&#x9;final String status = getStatus();&#xA;&#x9;&#x9;fmt.append(&quot;  &quot;);&#xA;&#x9;&#x9;fmt.append((name == null) ? getUserId() : name);&#xA;&#x9;&#x9;if (getNetwork() != null) {&#xA;&#x9;&#x9;&#x9;fmt.append(&quot; - &quot;);&#xA;&#x9;&#x9;&#x9;fmt.append(getNetwork().getName());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;fmt.append(&quot; (&quot;);&#xA;&#x9;&#x9;fmt.append((status == null) ? &quot;offline&quot; : status);&#xA;&#x9;&#x9;fmt.append(&quot;)&quot;);&#xA;&#x9;&#x9;return fmt.toString();&#xA;&#x9;}" startPosition="284" length="404">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="final StringBuffer fmt = new StringBuffer();" startPosition="288" length="44">
            <fragments lexicalForm="fmt = new StringBuffer()" startPosition="307" length="24">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new StringBuffer()" startPosition="313" length="18">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="StringBuffer" startPosition="317" length="12">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="StringBuffer" startPosition="317" length="12" fullyQualifiedName="StringBuffer" identifier="StringBuffer"/>
                </type>
              </initializer>
              <name lexicalForm="fmt" startPosition="307" length="3" fullyQualifiedName="fmt" identifier="fmt" declaration="true"/>
            </fragments>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="288" length="5" final="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="StringBuffer" startPosition="294" length="12">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="StringBuffer" startPosition="294" length="12" fullyQualifiedName="StringBuffer" identifier="StringBuffer"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="final String name = getName();" startPosition="335" length="30">
            <fragments lexicalForm="name = getName()" startPosition="348" length="16">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getName()" startPosition="355" length="9">
                <name lexicalForm="getName" startPosition="355" length="7" fullyQualifiedName="getName" identifier="getName"/>
              </initializer>
              <name lexicalForm="name" startPosition="348" length="4" fullyQualifiedName="name" identifier="name" declaration="true"/>
            </fragments>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="335" length="5" final="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="341" length="6">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="341" length="6" fullyQualifiedName="String" identifier="String"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="final String status = getStatus();" startPosition="368" length="34">
            <fragments lexicalForm="status = getStatus()" startPosition="381" length="20">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getStatus()" startPosition="390" length="11">
                <name lexicalForm="getStatus" startPosition="390" length="9" fullyQualifiedName="getStatus" identifier="getStatus"/>
              </initializer>
              <name lexicalForm="status" startPosition="381" length="6" fullyQualifiedName="status" identifier="status" declaration="true"/>
            </fragments>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="368" length="5" final="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="374" length="6">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="374" length="6" fullyQualifiedName="String" identifier="String"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="fmt.append(&quot;  &quot;);" startPosition="405" length="17">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="fmt.append(&quot;  &quot;)" startPosition="405" length="16">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;  &quot;" startPosition="416" length="4" escapedValue="&quot;  &quot;" literalValue="  "/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="fmt" startPosition="405" length="3" fullyQualifiedName="fmt" identifier="fmt"/>
              <name lexicalForm="append" startPosition="409" length="6" fullyQualifiedName="append" identifier="append"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="fmt.append((name == null) ? getUserId() : name);" startPosition="425" length="48">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="fmt.append((name == null) ? getUserId() : name)" startPosition="425" length="47">
              <arguments xsi:type="JavaAST:ConditionalExpression" lexicalForm="(name == null) ? getUserId() : name" startPosition="436" length="35">
                <elseExpression xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="467" length="4" fullyQualifiedName="name" identifier="name"/>
                <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="(name == null)" startPosition="436" length="14">
                  <expression xsi:type="JavaAST:InfixExpression" lexicalForm="name == null" startPosition="437" length="12" operator="==">
                    <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="437" length="4" fullyQualifiedName="name" identifier="name"/>
                    <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="445" length="4"/>
                  </expression>
                </expression>
                <thenExpression xsi:type="JavaAST:MethodInvocation" lexicalForm="getUserId()" startPosition="453" length="11">
                  <name lexicalForm="getUserId" startPosition="453" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                </thenExpression>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="fmt" startPosition="425" length="3" fullyQualifiedName="fmt" identifier="fmt"/>
              <name lexicalForm="append" startPosition="429" length="6" fullyQualifiedName="append" identifier="append"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (getNetwork() != null) {&#xA;&#x9;&#x9;&#x9;fmt.append(&quot; - &quot;);&#xA;&#x9;&#x9;&#x9;fmt.append(getNetwork().getName());&#xA;&#x9;&#x9;}" startPosition="476" length="92">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="getNetwork() != null" startPosition="480" length="20" operator="!=">
              <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="getNetwork()" startPosition="480" length="12" resolvedType="//@compilationUnits.12/@types.0">
                <name lexicalForm="getNetwork" startPosition="480" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="496" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;fmt.append(&quot; - &quot;);&#xA;&#x9;&#x9;&#x9;fmt.append(getNetwork().getName());&#xA;&#x9;&#x9;}" startPosition="502" length="66">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="fmt.append(&quot; - &quot;);" startPosition="507" length="18">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="fmt.append(&quot; - &quot;)" startPosition="507" length="17">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot; - &quot;" startPosition="518" length="5" escapedValue="&quot; - &quot;" literalValue=" - "/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="fmt" startPosition="507" length="3" fullyQualifiedName="fmt" identifier="fmt"/>
                  <name lexicalForm="append" startPosition="511" length="6" fullyQualifiedName="append" identifier="append"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="fmt.append(getNetwork().getName());" startPosition="529" length="35">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="fmt.append(getNetwork().getName())" startPosition="529" length="34">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getNetwork().getName()" startPosition="540" length="22">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getNetwork()" startPosition="540" length="12" resolvedType="//@compilationUnits.12/@types.0">
                      <name lexicalForm="getNetwork" startPosition="540" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
                    </expression>
                    <name lexicalForm="getName" startPosition="553" length="7" fullyQualifiedName="getName" identifier="getName"/>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="fmt" startPosition="529" length="3" fullyQualifiedName="fmt" identifier="fmt"/>
                  <name lexicalForm="append" startPosition="533" length="6" fullyQualifiedName="append" identifier="append"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="fmt.append(&quot; (&quot;);" startPosition="571" length="17">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="fmt.append(&quot; (&quot;)" startPosition="571" length="16">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot; (&quot;" startPosition="582" length="4" escapedValue="&quot; (&quot;" literalValue=" ("/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="fmt" startPosition="571" length="3" fullyQualifiedName="fmt" identifier="fmt"/>
              <name lexicalForm="append" startPosition="575" length="6" fullyQualifiedName="append" identifier="append"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="fmt.append((status == null) ? &quot;offline&quot; : status);" startPosition="591" length="50">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="fmt.append((status == null) ? &quot;offline&quot; : status)" startPosition="591" length="49">
              <arguments xsi:type="JavaAST:ConditionalExpression" lexicalForm="(status == null) ? &quot;offline&quot; : status" startPosition="602" length="37">
                <elseExpression xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="633" length="6" fullyQualifiedName="status" identifier="status"/>
                <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="(status == null)" startPosition="602" length="16">
                  <expression xsi:type="JavaAST:InfixExpression" lexicalForm="status == null" startPosition="603" length="14" operator="==">
                    <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="603" length="6" fullyQualifiedName="status" identifier="status"/>
                    <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="613" length="4"/>
                  </expression>
                </expression>
                <thenExpression xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;offline&quot;" startPosition="621" length="9" escapedValue="&quot;offline&quot;" literalValue="offline"/>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="fmt" startPosition="591" length="3" fullyQualifiedName="fmt" identifier="fmt"/>
              <name lexicalForm="append" startPosition="595" length="6" fullyQualifiedName="append" identifier="append"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="fmt.append(&quot;)&quot;);" startPosition="644" length="16">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="fmt.append(&quot;)&quot;)" startPosition="644" length="15">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;)&quot;" startPosition="655" length="3" escapedValue="&quot;)&quot;" literalValue=")"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="fmt" startPosition="644" length="3" fullyQualifiedName="fmt" identifier="fmt"/>
              <name lexicalForm="append" startPosition="648" length="6" fullyQualifiedName="append" identifier="append"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return fmt.toString();" startPosition="663" length="22">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="fmt.toString()" startPosition="670" length="14">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="fmt" startPosition="670" length="3" fullyQualifiedName="fmt" identifier="fmt"/>
              <name lexicalForm="toString" startPosition="674" length="8" fullyQualifiedName="toString" identifier="toString"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="toString" startPosition="273" length="8" fullyQualifiedName="toString" identifier="toString" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="256" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="256" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="266" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="256" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="261" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="256" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getUserId() {&#xA;&#x9;&#x9;return userId;&#xA;&#x9;}" startPosition="691" length="57">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="691" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return userId;&#xA;&#x9;}" startPosition="727" length="21">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return userId;" startPosition="731" length="14">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="userId" startPosition="738" length="6" fullyQualifiedName="userId" identifier="userId"/>
          </statements>
        </body>
        <name lexicalForm="getUserId" startPosition="715" length="9" fullyQualifiedName="getUserId" identifier="getUserId" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="698" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="698" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="708" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="698" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="703" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="698" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setUserId(java.lang.String userId) {&#xA;&#x9;&#x9;if (this.userId != userId) {&#xA;&#x9;&#x9;&#x9;this.userId = userId;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;UserId&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (userId != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, userId);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="751" length="324">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="751" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.userId != userId) {&#xA;&#x9;&#x9;&#x9;this.userId = userId;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;UserId&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (userId != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, userId);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="798" length="277">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.userId != userId) {&#xA;&#x9;&#x9;&#x9;this.userId = userId;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;UserId&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (userId != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, userId);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="802" length="270">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.userId != userId" startPosition="806" length="21" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.userId" startPosition="806" length="11">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="806" length="4" resolvedType="//@compilationUnits.7/@types.0"/>
                <name lexicalForm="userId" startPosition="811" length="6" fullyQualifiedName="userId" identifier="userId"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="userId" startPosition="821" length="6" fullyQualifiedName="userId" identifier="userId"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.userId = userId;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;UserId&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (userId != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, userId);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="829" length="243">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.userId = userId;" startPosition="834" length="21">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.userId = userId" startPosition="834" length="20" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.userId" startPosition="834" length="11">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="834" length="4" resolvedType="//@compilationUnits.7/@types.0"/>
                    <name lexicalForm="userId" startPosition="839" length="6" fullyQualifiedName="userId" identifier="userId"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="userId" startPosition="848" length="6" fullyQualifiedName="userId" identifier="userId"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="859" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="859" length="12">
                  <name lexicalForm="setChanged" startPosition="859" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="876" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="896" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="900" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="904" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="904" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="914" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="904" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="909" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="904" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="896" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="876" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="876" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="886" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="876" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="881" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="876" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;UserId&quot;);" startPosition="930" length="24">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;UserId&quot;)" startPosition="930" length="23">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="936" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;UserId&quot;" startPosition="944" length="8" escapedValue="&quot;UserId&quot;" literalValue="UserId"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="930" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="932" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, String.class);" startPosition="958" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, String.class)" startPosition="958" length="28">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="964" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="String.class" startPosition="973" length="12">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="973" length="6">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="973" length="6" fullyQualifiedName="String" identifier="String"/>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="958" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="960" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (userId != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, userId);&#xA;&#x9;&#x9;&#x9;}" startPosition="991" length="54">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="userId != null" startPosition="995" length="14" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="userId" startPosition="995" length="6" fullyQualifiedName="userId" identifier="userId"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1005" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, userId);&#xA;&#x9;&#x9;&#x9;}" startPosition="1011" length="34">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, userId);" startPosition="1017" length="23">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, userId)" startPosition="1017" length="22">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="1023" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="userId" startPosition="1032" length="6" fullyQualifiedName="userId" identifier="userId"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1017" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="1019" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="1049" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="1049" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1065" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="1049" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setUserId" startPosition="763" length="9" fullyQualifiedName="setUserId" identifier="setUserId" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="758" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String userId" startPosition="773" length="23">
          <name lexicalForm="userId" startPosition="790" length="6" fullyQualifiedName="userId" identifier="userId" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="773" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="773" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="783" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="773" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="778" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="773" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getName() {&#xA;&#x9;&#x9;return name;&#xA;&#x9;}" startPosition="1078" length="53">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1078" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return name;&#xA;&#x9;}" startPosition="1112" length="19">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return name;" startPosition="1116" length="12">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="1123" length="4" fullyQualifiedName="name" identifier="name"/>
          </statements>
        </body>
        <name lexicalForm="getName" startPosition="1102" length="7" fullyQualifiedName="getName" identifier="getName" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="1085" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="1085" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="1095" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1085" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="1090" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1085" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setName(java.lang.String name) {&#xA;&#x9;&#x9;if (this.name != name) {&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1134" length="306">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1134" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.name != name) {&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1177" length="263">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.name != name) {&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1181" length="256">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.name != name" startPosition="1185" length="17" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.name" startPosition="1185" length="9">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1185" length="4" resolvedType="//@compilationUnits.7/@types.0"/>
                <name lexicalForm="name" startPosition="1190" length="4" fullyQualifiedName="name" identifier="name"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="1198" length="4" fullyQualifiedName="name" identifier="name"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1204" length="233">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.name = name;" startPosition="1209" length="17">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.name = name" startPosition="1209" length="16" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.name" startPosition="1209" length="9">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1209" length="4" resolvedType="//@compilationUnits.7/@types.0"/>
                    <name lexicalForm="name" startPosition="1214" length="4" fullyQualifiedName="name" identifier="name"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="1221" length="4" fullyQualifiedName="name" identifier="name"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="1230" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="1230" length="12">
                  <name lexicalForm="setChanged" startPosition="1230" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="1247" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="1267" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="1271" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1275" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1275" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="1285" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1275" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="1280" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1275" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="1267" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1247" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1247" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="1257" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1247" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="1252" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1247" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Name&quot;);" startPosition="1301" length="22">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Name&quot;)" startPosition="1301" length="21">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="1307" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Name&quot;" startPosition="1315" length="6" escapedValue="&quot;Name&quot;" literalValue="Name"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1301" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1303" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, String.class);" startPosition="1327" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, String.class)" startPosition="1327" length="28">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="1333" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="String.class" startPosition="1342" length="12">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="1342" length="6">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="1342" length="6" fullyQualifiedName="String" identifier="String"/>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1327" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1329" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}" startPosition="1360" length="50">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="name != null" startPosition="1364" length="12" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="1364" length="4" fullyQualifiedName="name" identifier="name"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1372" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}" startPosition="1378" length="32">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, name);" startPosition="1384" length="21">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, name)" startPosition="1384" length="20">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="1390" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="1399" length="4" fullyQualifiedName="name" identifier="name"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1384" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="1386" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="1414" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="1414" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1430" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="1414" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setName" startPosition="1146" length="7" fullyQualifiedName="setName" identifier="setName" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1141" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String name" startPosition="1154" length="21">
          <name lexicalForm="name" startPosition="1171" length="4" fullyQualifiedName="name" identifier="name" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="1154" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="1154" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="1164" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1154" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="1159" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1154" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getStatus() {&#xA;&#x9;&#x9;return status;&#xA;&#x9;}" startPosition="1443" length="57">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1443" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return status;&#xA;&#x9;}" startPosition="1479" length="21">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return status;" startPosition="1483" length="14">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="1490" length="6" fullyQualifiedName="status" identifier="status"/>
          </statements>
        </body>
        <name lexicalForm="getStatus" startPosition="1467" length="9" fullyQualifiedName="getStatus" identifier="getStatus" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="1450" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="1450" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="1460" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1450" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="1455" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1450" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setStatus(java.lang.String status) {&#xA;&#x9;&#x9;if (this.status != status) {&#xA;&#x9;&#x9;&#x9;this.status = status;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Status&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (status != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, status);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1503" length="324">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1503" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.status != status) {&#xA;&#x9;&#x9;&#x9;this.status = status;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Status&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (status != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, status);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1550" length="277">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.status != status) {&#xA;&#x9;&#x9;&#x9;this.status = status;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Status&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (status != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, status);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1554" length="270">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.status != status" startPosition="1558" length="21" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.status" startPosition="1558" length="11">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1558" length="4" resolvedType="//@compilationUnits.7/@types.0"/>
                <name lexicalForm="status" startPosition="1563" length="6" fullyQualifiedName="status" identifier="status"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="1573" length="6" fullyQualifiedName="status" identifier="status"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.status = status;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Status&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (status != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, status);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1581" length="243">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.status = status;" startPosition="1586" length="21">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.status = status" startPosition="1586" length="20" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.status" startPosition="1586" length="11">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1586" length="4" resolvedType="//@compilationUnits.7/@types.0"/>
                    <name lexicalForm="status" startPosition="1591" length="6" fullyQualifiedName="status" identifier="status"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="1600" length="6" fullyQualifiedName="status" identifier="status"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="1611" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="1611" length="12">
                  <name lexicalForm="setChanged" startPosition="1611" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="1628" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="1648" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="1652" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1656" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1656" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="1666" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1656" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="1661" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1656" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="1648" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1628" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1628" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="1638" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1628" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="1633" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1628" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Status&quot;);" startPosition="1682" length="24">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Status&quot;)" startPosition="1682" length="23">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="1688" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Status&quot;" startPosition="1696" length="8" escapedValue="&quot;Status&quot;" literalValue="Status"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1682" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1684" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, String.class);" startPosition="1710" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, String.class)" startPosition="1710" length="28">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="1716" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="String.class" startPosition="1725" length="12">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="1725" length="6">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="1725" length="6" fullyQualifiedName="String" identifier="String"/>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1710" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1712" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (status != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, status);&#xA;&#x9;&#x9;&#x9;}" startPosition="1743" length="54">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="status != null" startPosition="1747" length="14" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="1747" length="6" fullyQualifiedName="status" identifier="status"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1757" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, status);&#xA;&#x9;&#x9;&#x9;}" startPosition="1763" length="34">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, status);" startPosition="1769" length="23">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, status)" startPosition="1769" length="22">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="1775" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="1784" length="6" fullyQualifiedName="status" identifier="status"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1769" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="1771" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="1801" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="1801" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1817" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="1801" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setStatus" startPosition="1515" length="9" fullyQualifiedName="setStatus" identifier="setStatus" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1510" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String status" startPosition="1525" length="23">
          <name lexicalForm="status" startPosition="1542" length="6" fullyQualifiedName="status" identifier="status" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="1525" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="1525" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="1535" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1525" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="1530" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1525" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="Contact" startPosition="32" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.NetworkSpecificData" startPosition="48" length="28" resolvedType="//@compilationUnits.6/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.NetworkSpecificData" startPosition="48" length="28" resolvedType="//@compilationUnits.6/@types.0" fullyQualifiedName="im.model.NetworkSpecificData">
          <name lexicalForm="NetworkSpecificData" startPosition="57" length="19" resolvedType="//@compilationUnits.6/@types.0" fullyQualifiedName="NetworkSpecificData" identifier="NetworkSpecificData"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="48" length="8" fullyQualifiedName="im.model">
            <name lexicalForm="model" startPosition="51" length="5" fullyQualifiedName="model" identifier="model"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="48" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superclassType>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.model;&#xA;&#xA;public class ContactList extends java.util.Observable {&#xA;&#x9;private java.util.List contact = new java.util.ArrayList();&#xA;&#xA;&#x9;public im.model.Identity getIdentity(im.networking.Network forNw) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContacts(); cs.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if ((contact instanceof Identity)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (contact.getNetwork() == forNw)) {&#xA;&#x9;&#x9;&#x9;&#x9;return (Identity) contact;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getUserName(java.lang.String userId) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContacts(); cs.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (contact.getUserId().equals(userId)) {&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.getName() == null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getUserId();&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getName();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return userId;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getContacts() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(contact.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addContact(im.model.Contact contact) {&#xA;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeContact(im.model.Contact contact) {&#xA;&#x9;&#x9;if (this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;this.contact.remove(contact);&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Contact getContactAt(int index) {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.model.Contact) contact.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public int getIndexOfContact(im.model.Contact contact) {&#xA;&#x9;&#x9;return this.contact.indexOf(contact);&#xA;&#x9;}&#xA;&#xA;&#x9;public void insertContact(im.model.Contact contact, int index) {&#xA;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(index, contact);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="2540">
    <package lexicalForm="package im.model;" length="17">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="8" length="8" fullyQualifiedName="im.model">
        <name lexicalForm="model" startPosition="11" length="5" fullyQualifiedName="model" identifier="model"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class ContactList extends java.util.Observable {&#xA;&#x9;private java.util.List contact = new java.util.ArrayList();&#xA;&#xA;&#x9;public im.model.Identity getIdentity(im.networking.Network forNw) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContacts(); cs.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if ((contact instanceof Identity)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (contact.getNetwork() == forNw)) {&#xA;&#x9;&#x9;&#x9;&#x9;return (Identity) contact;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getUserName(java.lang.String userId) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContacts(); cs.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (contact.getUserId().equals(userId)) {&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.getName() == null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getUserId();&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getName();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return userId;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getContacts() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(contact.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addContact(im.model.Contact contact) {&#xA;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeContact(im.model.Contact contact) {&#xA;&#x9;&#x9;if (this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;this.contact.remove(contact);&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Contact getContactAt(int index) {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.model.Contact) contact.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public int getIndexOfContact(im.model.Contact contact) {&#xA;&#x9;&#x9;return this.contact.indexOf(contact);&#xA;&#x9;}&#xA;&#xA;&#x9;public void insertContact(im.model.Contact contact, int index) {&#xA;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(index, contact);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}" startPosition="19" length="2520" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.6/@expression/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.1/@fragments.0/@initializer/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@initializers.0/@fragments.0/@initializer/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.2/@expression/@leftOperand //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.4/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.4/@parameters.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.15/@parameters.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.1/@expression/@arguments.0/@leftOperand/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.0/@initializers.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@fragments.0/@initializer/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.1/@expression/@leftOperand/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.12/@parameters.0/@type/@name //@compilationUnits.8/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.4/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.4/@parameters.0/@type/@name/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression //@compilationUnits.8/@types.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.2/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@expression/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.5/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.11/@name //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@expression/@expression/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.1/@expression/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.7/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@expression/@leftOperand/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.14/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.11/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.15/@parameters.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@initializers.0/@fragments.0/@initializer/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.4/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.11/@body/@statements.0/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.15/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@fragments.0/@initializer //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.9/@body/@statements.1/@body/@statements.2/@expression/@arguments.0/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.11/@returnType/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@initializers.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.1/@expression/@rightHandSide //@compilationUnits.2/@types.0/@bodyDeclarations.1/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@expression/@leftOperand/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.12/@parameters.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.1/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.1/@expression/@leftHandSide/@name //@compilationUnits.8/@types.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.2/@thenStatement/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.1/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.1/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.12/@body/@statements.1/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.2/@expression/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.1/@expression/@leftOperand/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.1/@fragments.0/@initializer/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.1/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.12/@parameters.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression/@leftHandSide //@compilationUnits.5/@types.0/@bodyDeclarations.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@leftOperand/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.6/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.12/@body/@statements.1/@expression/@leftHandSide //@compilationUnits.2/@types.0/@bodyDeclarations.15/@body/@statements.0/@expression/@rightHandSide //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.1/@fragments.0/@initializer/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.14/@body/@statements.0/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.4/@body/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.0/@fragments.0/@initializer/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.14/@name //@compilationUnits.2/@types.0/@bodyDeclarations.14/@returnType/@name/@name" resolvedTypeReferences="//@compilationUnits.2/@types.0/@bodyDeclarations.14/@returnType //@compilationUnits.2/@types.0/@bodyDeclarations.1/@type //@compilationUnits.5/@types.0/@bodyDeclarations.4/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.15/@parameters.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.12/@parameters.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.11/@returnType //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.1/@fragments.0/@initializer/@type //@compilationUnits.5/@types.0/@bodyDeclarations.0/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="19" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.util.List contact = new java.util.ArrayList();" startPosition="76" length="59">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="76" length="7" private="true"/>
        <fragments lexicalForm="contact = new java.util.ArrayList()" startPosition="99" length="35">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.ArrayList()" startPosition="109" length="25">
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.ArrayList" startPosition="113" length="19">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.ArrayList" startPosition="113" length="19" fullyQualifiedName="java.util.ArrayList">
                <name lexicalForm="ArrayList" startPosition="123" length="9" fullyQualifiedName="ArrayList" identifier="ArrayList"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="113" length="9" fullyQualifiedName="java.util">
                  <name lexicalForm="util" startPosition="118" length="4" fullyQualifiedName="util" identifier="util"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="113" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </initializer>
          <name lexicalForm="contact" startPosition="99" length="7" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.List" startPosition="84" length="14">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.List" startPosition="84" length="14" fullyQualifiedName="java.util.List">
            <name lexicalForm="List" startPosition="94" length="4" fullyQualifiedName="List" identifier="List"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="84" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="89" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="84" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.Identity getIdentity(im.networking.Network forNw) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContacts(); cs.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if ((contact instanceof Identity)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (contact.getNetwork() == forNw)) {&#xA;&#x9;&#x9;&#x9;&#x9;return (Identity) contact;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}" startPosition="138" length="328">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="138" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContacts(); cs.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if ((contact instanceof Identity)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (contact.getNetwork() == forNw)) {&#xA;&#x9;&#x9;&#x9;&#x9;return (Identity) contact;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}" startPosition="204" length="262">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration cs = getContacts(); cs.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if ((contact instanceof Identity)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (contact.getNetwork() == forNw)) {&#xA;&#x9;&#x9;&#x9;&#x9;return (Identity) contact;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="208" length="240">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if ((contact instanceof Identity)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (contact.getNetwork() == forNw)) {&#xA;&#x9;&#x9;&#x9;&#x9;return (Identity) contact;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="278" length="170">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Contact contact = (Contact) cs.nextElement();" startPosition="283" length="45">
                <fragments lexicalForm="contact = (Contact) cs.nextElement()" startPosition="291" length="36">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(Contact) cs.nextElement()" startPosition="301" length="26" resolvedType="//@compilationUnits.7/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs.nextElement()" startPosition="311" length="16">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="311" length="2" fullyQualifiedName="cs" identifier="cs"/>
                      <name lexicalForm="nextElement" startPosition="314" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                    </expression>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Contact" startPosition="302" length="7" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Contact" startPosition="302" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                    </type>
                  </initializer>
                  <name lexicalForm="contact" startPosition="291" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Contact" startPosition="283" length="7" resolvedType="//@compilationUnits.7/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Contact" startPosition="283" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if ((contact instanceof Identity)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (contact.getNetwork() == forNw)) {&#xA;&#x9;&#x9;&#x9;&#x9;return (Identity) contact;&#xA;&#x9;&#x9;&#x9;}" startPosition="332" length="112">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="(contact instanceof Identity)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (contact.getNetwork() == forNw)" startPosition="336" length="69" operator="&amp;&amp;">
                  <leftOperand xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="(contact instanceof Identity)" startPosition="336" length="29">
                    <expression xsi:type="JavaAST:InstanceofExpression" lexicalForm="contact instanceof Identity" startPosition="337" length="27">
                      <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="337" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                      <rightOperand xsi:type="JavaAST:SimpleType" lexicalForm="Identity" startPosition="356" length="8" resolvedType="//@compilationUnits.11/@types.0">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="Identity" startPosition="356" length="8" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="Identity" identifier="Identity"/>
                      </rightOperand>
                    </expression>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="(contact.getNetwork() == forNw)" startPosition="374" length="31">
                    <expression xsi:type="JavaAST:InfixExpression" lexicalForm="contact.getNetwork() == forNw" startPosition="375" length="29" operator="==">
                      <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="contact.getNetwork()" startPosition="375" length="20" resolvedType="//@compilationUnits.12/@types.0">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="375" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                        <name lexicalForm="getNetwork" startPosition="383" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
                      </leftOperand>
                      <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="forNw" startPosition="399" length="5" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="forNw" identifier="forNw"/>
                    </expression>
                  </rightOperand>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;return (Identity) contact;&#xA;&#x9;&#x9;&#x9;}" startPosition="407" length="37">
                  <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return (Identity) contact;" startPosition="413" length="26">
                    <expression xsi:type="JavaAST:CastExpression" lexicalForm="(Identity) contact" startPosition="420" length="18" resolvedType="//@compilationUnits.11/@types.0">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="431" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="Identity" startPosition="421" length="8" resolvedType="//@compilationUnits.11/@types.0">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="Identity" startPosition="421" length="8" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="Identity" identifier="Identity"/>
                      </type>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs.hasMoreElements()" startPosition="255" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="255" length="2" fullyQualifiedName="cs" identifier="cs"/>
              <name lexicalForm="hasMoreElements" startPosition="258" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration cs = getContacts()" startPosition="213" length="40">
              <fragments lexicalForm="cs = getContacts()" startPosition="235" length="18">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getContacts()" startPosition="240" length="13">
                  <name lexicalForm="getContacts" startPosition="240" length="11" fullyQualifiedName="getContacts" identifier="getContacts"/>
                </initializer>
                <name lexicalForm="cs" startPosition="235" length="2" fullyQualifiedName="cs" identifier="cs" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="213" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="213" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="223" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="213" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="218" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="213" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return null;" startPosition="451" length="12">
            <expression xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="458" length="4"/>
          </statements>
        </body>
        <name lexicalForm="getIdentity" startPosition="163" length="11" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="getIdentity" identifier="getIdentity" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Identity" startPosition="145" length="17" resolvedType="//@compilationUnits.11/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Identity" startPosition="145" length="17" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="im.model.Identity">
            <name lexicalForm="Identity" startPosition="154" length="8" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="Identity" identifier="Identity"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="145" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="148" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="145" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
        <parameters lexicalForm="im.networking.Network forNw" startPosition="175" length="27">
          <name lexicalForm="forNw" startPosition="197" length="5" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="forNw" identifier="forNw" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="175" length="21" resolvedType="//@compilationUnits.12/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="175" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
              <name lexicalForm="Network" startPosition="189" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="175" length="13" fullyQualifiedName="im.networking">
                <name lexicalForm="networking" startPosition="178" length="10" fullyQualifiedName="networking" identifier="networking"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="175" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getUserName(java.lang.String userId) {&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContacts(); cs.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (contact.getUserId().equals(userId)) {&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.getName() == null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getUserId();&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getName();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return userId;&#xA;&#x9;}" startPosition="469" length="379">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="469" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration cs = getContacts(); cs.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (contact.getUserId().equals(userId)) {&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.getName() == null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getUserId();&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getName();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return userId;&#xA;&#x9;}" startPosition="530" length="318">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration cs = getContacts(); cs.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (contact.getUserId().equals(userId)) {&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.getName() == null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getUserId();&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getName();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="534" length="294">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;Contact contact = (Contact) cs.nextElement();&#xA;&#x9;&#x9;&#x9;if (contact.getUserId().equals(userId)) {&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.getName() == null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getUserId();&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getName();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="604" length="224">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Contact contact = (Contact) cs.nextElement();" startPosition="609" length="45">
                <fragments lexicalForm="contact = (Contact) cs.nextElement()" startPosition="617" length="36">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(Contact) cs.nextElement()" startPosition="627" length="26" resolvedType="//@compilationUnits.7/@types.0">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs.nextElement()" startPosition="637" length="16">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="637" length="2" fullyQualifiedName="cs" identifier="cs"/>
                      <name lexicalForm="nextElement" startPosition="640" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                    </expression>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Contact" startPosition="628" length="7" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Contact" startPosition="628" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                    </type>
                  </initializer>
                  <name lexicalForm="contact" startPosition="617" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Contact" startPosition="609" length="7" resolvedType="//@compilationUnits.7/@types.0">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Contact" startPosition="609" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (contact.getUserId().equals(userId)) {&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.getName() == null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getUserId();&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getName();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="658" length="166">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contact.getUserId().equals(userId)" startPosition="662" length="34">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="userId" startPosition="689" length="6" fullyQualifiedName="userId" identifier="userId"/>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contact.getUserId()" startPosition="662" length="19">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="662" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                    <name lexicalForm="getUserId" startPosition="670" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                  </expression>
                  <name lexicalForm="equals" startPosition="682" length="6" fullyQualifiedName="equals" identifier="equals"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;if (contact.getName() == null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getUserId();&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getName();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="698" length="126">
                  <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (contact.getName() == null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getUserId();&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getName();&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="704" length="115">
                    <elseStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getName();&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="781" length="38">
                      <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return contact.getName();" startPosition="788" length="25">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contact.getName()" startPosition="795" length="17">
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="795" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                          <name lexicalForm="getName" startPosition="803" length="7" fullyQualifiedName="getName" identifier="getName"/>
                        </expression>
                      </statements>
                    </elseStatement>
                    <expression xsi:type="JavaAST:InfixExpression" lexicalForm="contact.getName() == null" startPosition="708" length="25" operator="==">
                      <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="contact.getName()" startPosition="708" length="17">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="708" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                        <name lexicalForm="getName" startPosition="716" length="7" fullyQualifiedName="getName" identifier="getName"/>
                      </leftOperand>
                      <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="729" length="4"/>
                    </expression>
                    <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return contact.getUserId();&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="735" length="40">
                      <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return contact.getUserId();" startPosition="742" length="27">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contact.getUserId()" startPosition="749" length="19">
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="749" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                          <name lexicalForm="getUserId" startPosition="757" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                        </expression>
                      </statements>
                    </thenStatement>
                  </statements>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cs.hasMoreElements()" startPosition="581" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="cs" startPosition="581" length="2" fullyQualifiedName="cs" identifier="cs"/>
              <name lexicalForm="hasMoreElements" startPosition="584" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration cs = getContacts()" startPosition="539" length="40">
              <fragments lexicalForm="cs = getContacts()" startPosition="561" length="18">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getContacts()" startPosition="566" length="13">
                  <name lexicalForm="getContacts" startPosition="566" length="11" fullyQualifiedName="getContacts" identifier="getContacts"/>
                </initializer>
                <name lexicalForm="cs" startPosition="561" length="2" fullyQualifiedName="cs" identifier="cs" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="539" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="539" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="549" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="539" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="544" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="539" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return userId;" startPosition="831" length="14">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="userId" startPosition="838" length="6" fullyQualifiedName="userId" identifier="userId"/>
          </statements>
        </body>
        <name lexicalForm="getUserName" startPosition="493" length="11" fullyQualifiedName="getUserName" identifier="getUserName" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="476" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="476" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="486" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="476" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="481" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="476" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
        <parameters lexicalForm="java.lang.String userId" startPosition="505" length="23">
          <name lexicalForm="userId" startPosition="522" length="6" fullyQualifiedName="userId" identifier="userId" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="505" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="505" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="515" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="505" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="510" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="505" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.util.Enumeration getContacts() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(contact.iterator());&#xA;&#x9;}" startPosition="851" length="123">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="851" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(contact.iterator());&#xA;&#x9;}" startPosition="894" length="80">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new be.ac.vub.util.IteratorEnumerationAdapter(contact.iterator());" startPosition="898" length="73">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new be.ac.vub.util.IteratorEnumerationAdapter(contact.iterator())" startPosition="905" length="65" resolvedType="//@compilationUnits.0/@types.0">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="contact.iterator()" startPosition="951" length="18">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="951" length="7" fullyQualifiedName="contact" identifier="contact"/>
                <name lexicalForm="iterator" startPosition="959" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
              </arguments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="909" length="41" resolvedType="//@compilationUnits.0/@types.0">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="909" length="41" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="be.ac.vub.util.IteratorEnumerationAdapter">
                  <name lexicalForm="IteratorEnumerationAdapter" startPosition="924" length="26" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="IteratorEnumerationAdapter" identifier="IteratorEnumerationAdapter"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util" startPosition="909" length="14" fullyQualifiedName="be.ac.vub.util">
                    <name lexicalForm="util" startPosition="919" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub" startPosition="909" length="9" fullyQualifiedName="be.ac.vub">
                      <name lexicalForm="vub" startPosition="915" length="3" fullyQualifiedName="vub" identifier="vub"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac" startPosition="909" length="5" fullyQualifiedName="be.ac">
                        <name lexicalForm="ac" startPosition="912" length="2" fullyQualifiedName="ac" identifier="ac"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="be" startPosition="909" length="2" fullyQualifiedName="be" identifier="be"/>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </name>
              </type>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getContacts" startPosition="880" length="11" fullyQualifiedName="getContacts" identifier="getContacts" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="858" length="21">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="858" length="21" fullyQualifiedName="java.util.Enumeration">
            <name lexicalForm="Enumeration" startPosition="868" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="858" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="863" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="858" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addContact(im.model.Contact contact) {&#xA;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="977" length="402">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="977" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1026" length="353">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1030" length="346">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.contact.contains(contact)" startPosition="1034" length="31" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contact.contains(contact)" startPosition="1035" length="30">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="1057" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="1035" length="12">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1035" length="4" resolvedType="//@compilationUnits.8/@types.0"/>
                  <name lexicalForm="contact" startPosition="1040" length="7" fullyQualifiedName="contact" identifier="contact"/>
                </expression>
                <name lexicalForm="contains" startPosition="1048" length="8" fullyQualifiedName="contains" identifier="contains"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1067" length="309">
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;}" startPosition="1072" length="74">
                <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.contact.contains(contact)" startPosition="1076" length="31" operator="!">
                  <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contact.contains(contact)" startPosition="1077" length="30">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="1099" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                    <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="1077" length="12">
                      <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1077" length="4" resolvedType="//@compilationUnits.8/@types.0"/>
                      <name lexicalForm="contact" startPosition="1082" length="7" fullyQualifiedName="contact" identifier="contact"/>
                    </expression>
                    <name lexicalForm="contains" startPosition="1090" length="8" fullyQualifiedName="contains" identifier="contains"/>
                  </operand>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;}" startPosition="1109" length="37">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contact.add(contact);" startPosition="1115" length="26">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contact.add(contact)" startPosition="1115" length="25">
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="1132" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                      <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="1115" length="12">
                        <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1115" length="4" resolvedType="//@compilationUnits.8/@types.0"/>
                        <name lexicalForm="contact" startPosition="1120" length="7" fullyQualifiedName="contact" identifier="contact"/>
                      </expression>
                      <name lexicalForm="add" startPosition="1128" length="3" fullyQualifiedName="add" identifier="add"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="1150" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="1150" length="12">
                  <name lexicalForm="setChanged" startPosition="1150" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="1167" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="1187" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="1191" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1195" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1195" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="1205" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1195" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="1200" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1195" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="1187" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1167" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1167" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="1177" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1167" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="1172" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1167" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Contact&quot;);" startPosition="1221" length="25">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Contact&quot;)" startPosition="1221" length="24">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="1227" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Contact&quot;" startPosition="1235" length="9" escapedValue="&quot;Contact&quot;" literalValue="Contact"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1221" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1223" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, im.model.Contact.class);" startPosition="1250" length="39">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, im.model.Contact.class)" startPosition="1250" length="38">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="1256" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="im.model.Contact.class" startPosition="1265" length="22">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1265" length="16" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1265" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                        <name lexicalForm="Contact" startPosition="1274" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1265" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="1268" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1265" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1250" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1252" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}" startPosition="1293" length="56">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="contact != null" startPosition="1297" length="15" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="1297" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1308" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}" startPosition="1314" length="35">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, contact);" startPosition="1320" length="24">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, contact)" startPosition="1320" length="23">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="1326" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="1335" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1320" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="1322" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="1353" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="1353" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1369" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="1353" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="addContact" startPosition="989" length="10" fullyQualifiedName="addContact" identifier="addContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="984" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact contact" startPosition="1000" length="24">
          <name lexicalForm="contact" startPosition="1017" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1000" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1000" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="1009" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1000" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="1003" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1000" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeContact(im.model.Contact contact) {&#xA;&#x9;&#x9;if (this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;this.contact.remove(contact);&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1382" length="359">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1382" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;this.contact.remove(contact);&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1434" length="307">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;this.contact.remove(contact);&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1438" length="300">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contact.contains(contact)" startPosition="1442" length="30">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="1464" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
              <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="1442" length="12">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1442" length="4" resolvedType="//@compilationUnits.8/@types.0"/>
                <name lexicalForm="contact" startPosition="1447" length="7" fullyQualifiedName="contact" identifier="contact"/>
              </expression>
              <name lexicalForm="contains" startPosition="1455" length="8" fullyQualifiedName="contains" identifier="contains"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.contact.remove(contact);&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1474" length="264">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contact.remove(contact);" startPosition="1479" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contact.remove(contact)" startPosition="1479" length="28">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="1499" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                  <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="1479" length="12">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1479" length="4" resolvedType="//@compilationUnits.8/@types.0"/>
                    <name lexicalForm="contact" startPosition="1484" length="7" fullyQualifiedName="contact" identifier="contact"/>
                  </expression>
                  <name lexicalForm="remove" startPosition="1492" length="6" fullyQualifiedName="remove" identifier="remove"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="1512" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="1512" length="12">
                  <name lexicalForm="setChanged" startPosition="1512" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="1529" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="1549" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="1553" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1557" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1557" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="1567" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1557" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="1562" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1557" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="1549" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1529" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1529" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="1539" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1529" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="1534" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1529" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Contact&quot;);" startPosition="1583" length="25">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Contact&quot;)" startPosition="1583" length="24">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="1589" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Contact&quot;" startPosition="1597" length="9" escapedValue="&quot;Contact&quot;" literalValue="Contact"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1583" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1585" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, im.model.Contact.class);" startPosition="1612" length="39">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, im.model.Contact.class)" startPosition="1612" length="38">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="1618" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="im.model.Contact.class" startPosition="1627" length="22">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1627" length="16" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1627" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                        <name lexicalForm="Contact" startPosition="1636" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1627" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="1630" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1627" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1612" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1614" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}" startPosition="1655" length="56">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="contact != null" startPosition="1659" length="15" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="1659" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1670" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}" startPosition="1676" length="35">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, contact);" startPosition="1682" length="24">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, contact)" startPosition="1682" length="23">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="1688" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="1697" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1682" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="1684" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="1715" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="1715" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1731" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="1715" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="removeContact" startPosition="1394" length="13" fullyQualifiedName="removeContact" identifier="removeContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1389" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact contact" startPosition="1408" length="24">
          <name lexicalForm="contact" startPosition="1425" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1408" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1408" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="1417" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1408" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="1411" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1408" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.Contact getContactAt(int index) {&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.model.Contact) contact.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1744" length="171">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1744" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return (im.model.Contact) contact.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1792" length="123">
          <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;return (im.model.Contact) contact.get(index);&#xA;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}" startPosition="1796" length="116">
            <catchClauses lexicalForm="catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}" startPosition="1855" length="57">
              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}" startPosition="1891" length="21">
                <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return null;" startPosition="1896" length="12">
                  <expression xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1903" length="4"/>
                </statements>
              </body>
              <exception lexicalForm="IndexOutOfBoundsException e" startPosition="1862" length="27">
                <name lexicalForm="e" startPosition="1888" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="IndexOutOfBoundsException" startPosition="1862" length="25">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="IndexOutOfBoundsException" startPosition="1862" length="25" fullyQualifiedName="IndexOutOfBoundsException" identifier="IndexOutOfBoundsException"/>
                </type>
              </exception>
            </catchClauses>
            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;return (im.model.Contact) contact.get(index);&#xA;&#x9;&#x9;}" startPosition="1800" length="54">
              <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return (im.model.Contact) contact.get(index);" startPosition="1805" length="45">
                <expression xsi:type="JavaAST:CastExpression" lexicalForm="(im.model.Contact) contact.get(index)" startPosition="1812" length="37" resolvedType="//@compilationUnits.7/@types.0">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="contact.get(index)" startPosition="1831" length="18">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1843" length="5" fullyQualifiedName="index" identifier="index"/>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="1831" length="7" fullyQualifiedName="contact" identifier="contact"/>
                    <name lexicalForm="get" startPosition="1839" length="3" fullyQualifiedName="get" identifier="get"/>
                  </expression>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1813" length="16" resolvedType="//@compilationUnits.7/@types.0">
                    <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1813" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                      <name lexicalForm="Contact" startPosition="1822" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1813" length="8" fullyQualifiedName="im.model">
                        <name lexicalForm="model" startPosition="1816" length="5" fullyQualifiedName="model" identifier="model"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1813" length="2" fullyQualifiedName="im" identifier="im"/>
                      </qualifier>
                    </name>
                  </type>
                </expression>
              </statements>
            </body>
          </statements>
        </body>
        <name lexicalForm="getContactAt" startPosition="1768" length="12" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getContactAt" identifier="getContactAt" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1751" length="16" resolvedType="//@compilationUnits.7/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1751" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
            <name lexicalForm="Contact" startPosition="1760" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1751" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="1754" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1751" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
        <parameters lexicalForm="int index" startPosition="1781" length="9">
          <name lexicalForm="index" startPosition="1785" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="1781" length="3" code="int"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public int getIndexOfContact(im.model.Contact contact) {&#xA;&#x9;&#x9;return this.contact.indexOf(contact);&#xA;&#x9;}" startPosition="1918" length="99">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1918" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return this.contact.indexOf(contact);&#xA;&#x9;}" startPosition="1973" length="44">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return this.contact.indexOf(contact);" startPosition="1977" length="37">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contact.indexOf(contact)" startPosition="1984" length="29">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="2005" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
              <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="1984" length="12">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1984" length="4" resolvedType="//@compilationUnits.8/@types.0"/>
                <name lexicalForm="contact" startPosition="1989" length="7" fullyQualifiedName="contact" identifier="contact"/>
              </expression>
              <name lexicalForm="indexOf" startPosition="1997" length="7" fullyQualifiedName="indexOf" identifier="indexOf"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getIndexOfContact" startPosition="1929" length="17" fullyQualifiedName="getIndexOfContact" identifier="getIndexOfContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="1925" length="3" code="int"/>
        <parameters lexicalForm="im.model.Contact contact" startPosition="1947" length="24">
          <name lexicalForm="contact" startPosition="1964" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1947" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1947" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="1956" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1947" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="1950" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1947" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void insertContact(im.model.Contact contact, int index) {&#xA;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(index, contact);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="2020" length="516">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2020" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(index, contact);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="2083" length="453">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(index, contact);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="2087" length="446">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.contact.contains(contact)" startPosition="2091" length="31" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contact.contains(contact)" startPosition="2092" length="30">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="2114" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="2092" length="12">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="2092" length="4" resolvedType="//@compilationUnits.8/@types.0"/>
                  <name lexicalForm="contact" startPosition="2097" length="7" fullyQualifiedName="contact" identifier="contact"/>
                </expression>
                <name lexicalForm="contains" startPosition="2105" length="8" fullyQualifiedName="contains" identifier="contains"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(index, contact);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="2124" length="409">
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.contact.contains(contact)) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(index, contact);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="2129" length="174">
                <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.contact.contains(contact)" startPosition="2133" length="31" operator="!">
                  <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contact.contains(contact)" startPosition="2134" length="30">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="2156" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                    <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="2134" length="12">
                      <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="2134" length="4" resolvedType="//@compilationUnits.8/@types.0"/>
                      <name lexicalForm="contact" startPosition="2139" length="7" fullyQualifiedName="contact" identifier="contact"/>
                    </expression>
                    <name lexicalForm="contains" startPosition="2147" length="8" fullyQualifiedName="contains" identifier="contains"/>
                  </operand>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(index, contact);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="2166" length="137">
                  <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(index, contact);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2172" length="126">
                    <catchClauses lexicalForm="catch (IndexOutOfBoundsException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2223" length="75">
                      <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(contact);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2259" length="39">
                        <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contact.add(contact);" startPosition="2266" length="26">
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contact.add(contact)" startPosition="2266" length="25">
                            <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="2283" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                            <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="2266" length="12">
                              <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="2266" length="4" resolvedType="//@compilationUnits.8/@types.0"/>
                              <name lexicalForm="contact" startPosition="2271" length="7" fullyQualifiedName="contact" identifier="contact"/>
                            </expression>
                            <name lexicalForm="add" startPosition="2279" length="3" fullyQualifiedName="add" identifier="add"/>
                          </expression>
                        </statements>
                      </body>
                      <exception lexicalForm="IndexOutOfBoundsException e" startPosition="2230" length="27">
                        <name lexicalForm="e" startPosition="2256" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="IndexOutOfBoundsException" startPosition="2230" length="25">
                          <name xsi:type="JavaAST:SimpleName" lexicalForm="IndexOutOfBoundsException" startPosition="2230" length="25" fullyQualifiedName="IndexOutOfBoundsException" identifier="IndexOutOfBoundsException"/>
                        </type>
                      </exception>
                    </catchClauses>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.contact.add(index, contact);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2176" length="46">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contact.add(index, contact);" startPosition="2183" length="33">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.contact.add(index, contact)" startPosition="2183" length="32">
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="2200" length="5" fullyQualifiedName="index" identifier="index"/>
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="2207" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                          <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="2183" length="12">
                            <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="2183" length="4" resolvedType="//@compilationUnits.8/@types.0"/>
                            <name lexicalForm="contact" startPosition="2188" length="7" fullyQualifiedName="contact" identifier="contact"/>
                          </expression>
                          <name lexicalForm="add" startPosition="2196" length="3" fullyQualifiedName="add" identifier="add"/>
                        </expression>
                      </statements>
                    </body>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="2307" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="2307" length="12">
                  <name lexicalForm="setChanged" startPosition="2307" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="2324" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="2344" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="2348" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="2352" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="2352" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="2362" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="2352" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="2357" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="2352" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="2344" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="2324" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="2324" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="2334" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="2324" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="2329" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="2324" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Contact&quot;);" startPosition="2378" length="25">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Contact&quot;)" startPosition="2378" length="24">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="2384" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Contact&quot;" startPosition="2392" length="9" escapedValue="&quot;Contact&quot;" literalValue="Contact"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2378" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="2380" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, im.model.Contact.class);" startPosition="2407" length="39">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, im.model.Contact.class)" startPosition="2407" length="38">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="2413" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="im.model.Contact.class" startPosition="2422" length="22">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2422" length="16" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2422" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                        <name lexicalForm="Contact" startPosition="2431" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2422" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="2425" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2422" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2407" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="2409" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}" startPosition="2450" length="56">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="contact != null" startPosition="2454" length="15" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="2454" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="2465" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}" startPosition="2471" length="35">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, contact);" startPosition="2477" length="24">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, contact)" startPosition="2477" length="23">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="2483" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="2492" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2477" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="2479" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="2510" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="2510" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2526" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="2510" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="insertContact" startPosition="2032" length="13" fullyQualifiedName="insertContact" identifier="insertContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2027" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact contact" startPosition="2046" length="24">
          <name lexicalForm="contact" startPosition="2063" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2046" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2046" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="2055" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2046" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="2049" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2046" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="int index" startPosition="2072" length="9">
          <name lexicalForm="index" startPosition="2076" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="2072" length="3" code="int"/>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="ContactList" startPosition="32" length="11" resolvedType="//@compilationUnits.8/@types.0" fullyQualifiedName="ContactList" identifier="ContactList" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observable" startPosition="52" length="20">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observable" startPosition="52" length="20" fullyQualifiedName="java.util.Observable">
          <name lexicalForm="Observable" startPosition="62" length="10" fullyQualifiedName="Observable" identifier="Observable"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="52" length="9" fullyQualifiedName="java.util">
            <name lexicalForm="util" startPosition="57" length="4" fullyQualifiedName="util" identifier="util"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="52" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </name>
      </superclassType>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.model;&#xA;&#xA;public class Conversation extends java.util.Observable {&#xA;&#x9;private im.model.Message message = null;&#xA;&#xA;&#x9;private im.model.Contact contact = null;&#xA;&#xA;&#x9;public im.model.Message getMessage() {&#xA;&#x9;&#x9;return message;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setMessage(im.model.Message message) {&#xA;&#x9;&#x9;if (this.message != message) {&#xA;&#x9;&#x9;&#x9;this.message = message;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Message&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (message != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, message);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Contact getContact() {&#xA;&#x9;&#x9;return contact;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setContact(im.model.Contact contact) {&#xA;&#x9;&#x9;if (this.contact != contact) {&#xA;&#x9;&#x9;&#x9;this.contact = contact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="980">
    <package lexicalForm="package im.model;" length="17">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="8" length="8" fullyQualifiedName="im.model">
        <name lexicalForm="model" startPosition="11" length="5" fullyQualifiedName="model" identifier="model"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class Conversation extends java.util.Observable {&#xA;&#x9;private im.model.Message message = null;&#xA;&#xA;&#x9;private im.model.Contact contact = null;&#xA;&#xA;&#x9;public im.model.Message getMessage() {&#xA;&#x9;&#x9;return message;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setMessage(im.model.Message message) {&#xA;&#x9;&#x9;if (this.message != message) {&#xA;&#x9;&#x9;&#x9;this.message = message;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Message&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (message != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, message);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Contact getContact() {&#xA;&#x9;&#x9;return contact;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setContact(im.model.Contact contact) {&#xA;&#x9;&#x9;if (this.contact != contact) {&#xA;&#x9;&#x9;&#x9;this.contact = contact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}" startPosition="19" length="960" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.4/@types.0/@bodyDeclarations.9/@name //@compilationUnits.4/@types.0/@bodyDeclarations.3/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.0/@fragments.0/@initializer/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.2/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.3/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@thenStatement/@statements.1/@expression/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.9/@body/@statements.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.3/@fragments.0/@initializer //@compilationUnits.4/@types.0/@bodyDeclarations.10/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.0/@fragments.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.3/@fragments.0/@initializer/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.1/@expression/@rightHandSide //@compilationUnits.2/@types.0/@bodyDeclarations.21/@body/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@leftOperand/@name //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.1/@fragments.0/@initializer/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.10/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.3/@fragments.0/@initializer/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.21/@parameters.0/@name //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@expression/@leftOperand/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.1/@fragments.0/@initializer/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.1/@fragments.0/@initializer/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.0/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.0/@fragments.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.10/@parameters.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.3/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.3/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.2/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.1/@expression/@leftHandSide/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.4/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.2/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.21/@parameters.0/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.2/@expression/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.22/@parameters.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.22/@parameters.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.3/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.22/@parameters.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.21/@parameters.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.5/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.10/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.2/@thenStatement/@statements.1/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.9/@returnType/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.6/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.1/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.4/@types.0/@bodyDeclarations.3/@parameters.0/@type/@name //@compilationUnits.9/@types.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.2/@thenStatement/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.1/@expression/@leftHandSide //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.1/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.21/@body/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@arguments.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.10/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.9/@returnType/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.1/@fragments.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.22/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.6/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.1/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@expression/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.3/@fragments.0/@name" resolvedTypeReferences="//@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.3/@fragments.0/@initializer/@type //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.2/@body/@statements.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.4/@types.0/@bodyDeclarations.3/@parameters.0/@type //@compilationUnits.4/@types.0/@bodyDeclarations.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.1/@fragments.0/@initializer/@type //@compilationUnits.2/@types.0/@bodyDeclarations.22/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.1/@type //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.3/@type //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@type //@compilationUnits.4/@types.0/@bodyDeclarations.9/@returnType //@compilationUnits.4/@types.0/@bodyDeclarations.10/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.21/@parameters.0/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="19" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.model.Message message = null;" startPosition="77" length="40">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="77" length="7" private="true"/>
        <fragments lexicalForm="message = null" startPosition="102" length="14">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="112" length="4"/>
          <name lexicalForm="message" startPosition="102" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="message" identifier="message" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="85" length="16" resolvedType="//@compilationUnits.10/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="85" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
            <name lexicalForm="Message" startPosition="94" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="85" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="88" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="85" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.model.Contact contact = null;" startPosition="120" length="40">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="120" length="7" private="true"/>
        <fragments lexicalForm="contact = null" startPosition="145" length="14">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="155" length="4"/>
          <name lexicalForm="contact" startPosition="145" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="128" length="16" resolvedType="//@compilationUnits.7/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="128" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
            <name lexicalForm="Contact" startPosition="137" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="128" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="131" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="128" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.Message getMessage() {&#xA;&#x9;&#x9;return message;&#xA;&#x9;}" startPosition="163" length="59">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="163" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return message;&#xA;&#x9;}" startPosition="200" length="22">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return message;" startPosition="204" length="15">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="211" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="message" identifier="message"/>
          </statements>
        </body>
        <name lexicalForm="getMessage" startPosition="187" length="10" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="getMessage" identifier="getMessage" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="170" length="16" resolvedType="//@compilationUnits.10/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="170" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
            <name lexicalForm="Message" startPosition="179" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="170" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="173" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="170" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setMessage(im.model.Message message) {&#xA;&#x9;&#x9;if (this.message != message) {&#xA;&#x9;&#x9;&#x9;this.message = message;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Message&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (message != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, message);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="225" length="343">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="225" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.message != message) {&#xA;&#x9;&#x9;&#x9;this.message = message;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Message&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (message != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, message);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="274" length="294">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.message != message) {&#xA;&#x9;&#x9;&#x9;this.message = message;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Message&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (message != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, message);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="278" length="287">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.message != message" startPosition="282" length="23" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.message" startPosition="282" length="12" resolvedType="//@compilationUnits.10/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="282" length="4" resolvedType="//@compilationUnits.9/@types.0"/>
                <name lexicalForm="message" startPosition="287" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="message" identifier="message"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="298" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="message" identifier="message"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.message = message;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Message&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (message != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, message);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="307" length="258">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.message = message;" startPosition="312" length="23">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.message = message" startPosition="312" length="22" resolvedType="//@compilationUnits.10/@types.0" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.message" startPosition="312" length="12" resolvedType="//@compilationUnits.10/@types.0">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="312" length="4" resolvedType="//@compilationUnits.9/@types.0"/>
                    <name lexicalForm="message" startPosition="317" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="message" identifier="message"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="327" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="message" identifier="message"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="339" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="339" length="12">
                  <name lexicalForm="setChanged" startPosition="339" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="356" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="376" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="380" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="384" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="384" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="394" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="384" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="389" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="384" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="376" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="356" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="356" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="366" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="356" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="361" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="356" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Message&quot;);" startPosition="410" length="25">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Message&quot;)" startPosition="410" length="24">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="416" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Message&quot;" startPosition="424" length="9" escapedValue="&quot;Message&quot;" literalValue="Message"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="410" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="412" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, im.model.Message.class);" startPosition="439" length="39">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, im.model.Message.class)" startPosition="439" length="38">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="445" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="im.model.Message.class" startPosition="454" length="22">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="454" length="16" resolvedType="//@compilationUnits.10/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="454" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                        <name lexicalForm="Message" startPosition="463" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="454" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="457" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="454" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="439" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="441" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (message != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, message);&#xA;&#x9;&#x9;&#x9;}" startPosition="482" length="56">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="message != null" startPosition="486" length="15" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="486" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="message" identifier="message"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="497" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, message);&#xA;&#x9;&#x9;&#x9;}" startPosition="503" length="35">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, message);" startPosition="509" length="24">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, message)" startPosition="509" length="23">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="515" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="524" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="message" identifier="message"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="509" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="511" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="542" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="542" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="558" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="542" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setMessage" startPosition="237" length="10" fullyQualifiedName="setMessage" identifier="setMessage" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="232" length="4" code="void"/>
        <parameters lexicalForm="im.model.Message message" startPosition="248" length="24">
          <name lexicalForm="message" startPosition="265" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="message" identifier="message" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="248" length="16" resolvedType="//@compilationUnits.10/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="248" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
              <name lexicalForm="Message" startPosition="257" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="248" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="251" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="248" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.Contact getContact() {&#xA;&#x9;&#x9;return contact;&#xA;&#x9;}" startPosition="571" length="59">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="571" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return contact;&#xA;&#x9;}" startPosition="608" length="22">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return contact;" startPosition="612" length="15">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="619" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
          </statements>
        </body>
        <name lexicalForm="getContact" startPosition="595" length="10" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getContact" identifier="getContact" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="578" length="16" resolvedType="//@compilationUnits.7/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="578" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
            <name lexicalForm="Contact" startPosition="587" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="578" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="581" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="578" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setContact(im.model.Contact contact) {&#xA;&#x9;&#x9;if (this.contact != contact) {&#xA;&#x9;&#x9;&#x9;this.contact = contact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="633" length="343">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="633" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.contact != contact) {&#xA;&#x9;&#x9;&#x9;this.contact = contact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="682" length="294">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.contact != contact) {&#xA;&#x9;&#x9;&#x9;this.contact = contact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="686" length="287">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.contact != contact" startPosition="690" length="23" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="690" length="12" resolvedType="//@compilationUnits.7/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="690" length="4" resolvedType="//@compilationUnits.9/@types.0"/>
                <name lexicalForm="contact" startPosition="695" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="706" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.contact = contact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Contact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="715" length="258">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.contact = contact;" startPosition="720" length="23">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.contact = contact" startPosition="720" length="22" resolvedType="//@compilationUnits.7/@types.0" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.contact" startPosition="720" length="12" resolvedType="//@compilationUnits.7/@types.0">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="720" length="4" resolvedType="//@compilationUnits.9/@types.0"/>
                    <name lexicalForm="contact" startPosition="725" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="735" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="747" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="747" length="12">
                  <name lexicalForm="setChanged" startPosition="747" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="764" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="784" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="788" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="792" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="792" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="802" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="792" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="797" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="792" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="784" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="764" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="764" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="774" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="764" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="769" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="764" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Contact&quot;);" startPosition="818" length="25">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Contact&quot;)" startPosition="818" length="24">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="824" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Contact&quot;" startPosition="832" length="9" escapedValue="&quot;Contact&quot;" literalValue="Contact"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="818" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="820" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, im.model.Contact.class);" startPosition="847" length="39">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, im.model.Contact.class)" startPosition="847" length="38">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="853" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="im.model.Contact.class" startPosition="862" length="22">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="862" length="16" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="862" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                        <name lexicalForm="Contact" startPosition="871" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="862" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="865" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="862" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="847" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="849" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (contact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}" startPosition="890" length="56">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="contact != null" startPosition="894" length="15" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="894" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="905" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, contact);&#xA;&#x9;&#x9;&#x9;}" startPosition="911" length="35">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, contact);" startPosition="917" length="24">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, contact)" startPosition="917" length="23">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="923" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="contact" startPosition="932" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="917" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="919" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="950" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="950" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="966" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="950" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setContact" startPosition="645" length="10" fullyQualifiedName="setContact" identifier="setContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="640" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact contact" startPosition="656" length="24">
          <name lexicalForm="contact" startPosition="673" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="contact" identifier="contact" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="656" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="656" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="665" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="656" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="659" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="656" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="Conversation" startPosition="32" length="12" resolvedType="//@compilationUnits.9/@types.0" fullyQualifiedName="Conversation" identifier="Conversation" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observable" startPosition="53" length="20">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observable" startPosition="53" length="20" fullyQualifiedName="java.util.Observable">
          <name lexicalForm="Observable" startPosition="63" length="10" fullyQualifiedName="Observable" identifier="Observable"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="53" length="9" fullyQualifiedName="java.util">
            <name lexicalForm="util" startPosition="58" length="4" fullyQualifiedName="util" identifier="util"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="53" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </name>
      </superclassType>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.model;&#xA;&#xA;public class Message extends im.model.NetworkSpecificData {&#xA;&#x9;private java.lang.String sender = null;&#xA;&#xA;&#x9;private java.lang.String recipient = null;&#xA;&#xA;&#x9;private java.lang.Object content = null;&#xA;&#xA;&#x9;public void send() {&#xA;&#x9;&#x9;if (getNetwork() != null) {&#xA;&#x9;&#x9;&#x9;getNetwork().send(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getSender() {&#xA;&#x9;&#x9;return sender;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setSender(java.lang.String sender) {&#xA;&#x9;&#x9;if (this.sender != sender) {&#xA;&#x9;&#x9;&#x9;this.sender = sender;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Sender&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (sender != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, sender);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getRecipient() {&#xA;&#x9;&#x9;return recipient;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setRecipient(java.lang.String recipient) {&#xA;&#x9;&#x9;if (this.recipient != recipient) {&#xA;&#x9;&#x9;&#x9;this.recipient = recipient;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Recipient&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (recipient != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recipient);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.Object getContent() {&#xA;&#x9;&#x9;return content;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setContent(java.lang.Object content) {&#xA;&#x9;&#x9;if (this.content != content) {&#xA;&#x9;&#x9;&#x9;this.content = content;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Content&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, Object.class);&#xA;&#x9;&#x9;&#x9;if (content != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, content);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="1504">
    <package lexicalForm="package im.model;" length="17">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="8" length="8" fullyQualifiedName="im.model">
        <name lexicalForm="model" startPosition="11" length="5" fullyQualifiedName="model" identifier="model"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class Message extends im.model.NetworkSpecificData {&#xA;&#x9;private java.lang.String sender = null;&#xA;&#xA;&#x9;private java.lang.String recipient = null;&#xA;&#xA;&#x9;private java.lang.Object content = null;&#xA;&#xA;&#x9;public void send() {&#xA;&#x9;&#x9;if (getNetwork() != null) {&#xA;&#x9;&#x9;&#x9;getNetwork().send(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getSender() {&#xA;&#x9;&#x9;return sender;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setSender(java.lang.String sender) {&#xA;&#x9;&#x9;if (this.sender != sender) {&#xA;&#x9;&#x9;&#x9;this.sender = sender;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Sender&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (sender != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, sender);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getRecipient() {&#xA;&#x9;&#x9;return recipient;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setRecipient(java.lang.String recipient) {&#xA;&#x9;&#x9;if (this.recipient != recipient) {&#xA;&#x9;&#x9;&#x9;this.recipient = recipient;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Recipient&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (recipient != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recipient);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.Object getContent() {&#xA;&#x9;&#x9;return content;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setContent(java.lang.Object content) {&#xA;&#x9;&#x9;if (this.content != content) {&#xA;&#x9;&#x9;&#x9;this.content = content;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Content&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, Object.class);&#xA;&#x9;&#x9;&#x9;if (content != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, content);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}" startPosition="19" length="1484" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.12/@types.0/@bodyDeclarations.2/@type/@name/@name //@compilationUnits.10/@types.0/@bodyDeclarations.9/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.4/@expression/@arguments.0/@rightOperand //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@expression/@leftOperand/@name //@compilationUnits.9/@types.0/@bodyDeclarations.2/@body/@statements.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.11/@parameters.0/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@parameters.0/@type/@name/@name //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.5/@thenStatement/@statements.1/@expression/@arguments.0/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.11/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.11/@parameters.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.6/@expression/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.5/@expression/@expression //@compilationUnits.10/@types.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@leftOperand/@name //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@expression/@leftOperand //@compilationUnits.9/@types.0/@bodyDeclarations.0/@fragments.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.4/@expression/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@parameters.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.9/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.1/@expression/@arguments.0/@leftOperand/@arguments.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.4/@parameters.0/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@thenStatement/@statements.0/@expression //@compilationUnits.15/@types.0/@bodyDeclarations.1/@parameters.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.4/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@parameters.0/@name //@compilationUnits.12/@types.0/@bodyDeclarations.2/@type/@name //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@rightOperand //@compilationUnits.2/@types.0/@bodyDeclarations.13/@parameters.0/@name //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.3/@expression/@arguments.0 //@compilationUnits.15/@types.0/@bodyDeclarations.1/@body/@statements.1/@expression/@arguments.0 //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@thenStatement/@statements.5/@thenStatement/@statements.0/@expression/@arguments.1 //@compilationUnits.12/@types.0/@bodyDeclarations.13/@body/@statements.0/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.5/@thenStatement/@statements.0/@expression/@arguments.1 //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.3/@expression/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.2/@fragments.0/@initializer //@compilationUnits.10/@types.0/@bodyDeclarations.7/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.2/@returnType/@name/@name //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@thenStatement/@statements.5/@expression/@leftOperand //@compilationUnits.9/@types.0/@bodyDeclarations.2/@name //@compilationUnits.12/@types.0/@bodyDeclarations.13/@returnType/@name/@name //@compilationUnits.12/@types.0/@bodyDeclarations.13/@returnType/@name //@compilationUnits.12/@types.0/@bodyDeclarations.7/@parameters.0/@type/@name //@compilationUnits.15/@types.0/@bodyDeclarations.1/@parameters.0/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.4/@fragments.0/@initializer/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@parameters.0/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.11/@parameters.0/@type/@name //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.1/@expression/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@compilationUnits.10/@types.0/@bodyDeclarations.5/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@parameters.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@body/@statements.1/@expression/@arguments.0 //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.1/@expression/@arguments.0/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.5/@expression/@expression //@compilationUnits.15/@types.0/@bodyDeclarations.1/@body/@statements.0/@expression/@expression //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.0/@type/@name/@name //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@leftOperand //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@expression/@rightOperand //@compilationUnits.4/@types.0/@bodyDeclarations.4/@parameters.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.2/@expression/@arguments.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.2/@expression/@arguments.0/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.13/@parameters.0/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.4/@parameters.0/@type/@name/@name //@compilationUnits.9/@types.0/@bodyDeclarations.3/@parameters.0/@type/@name/@name //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.2/@fragments.0/@initializer/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.14/@parameters.0/@name //@compilationUnits.9/@types.0/@bodyDeclarations.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.0/@fragments.0/@initializer/@type/@name/@name //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name //@compilationUnits.10/@types.0/@bodyDeclarations.7/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@elseStatement/@statements.0/@expression/@arguments.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.2/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.2/@fragments.0/@initializer/@type/@name/@name //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.2/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.4/@fragments.0/@initializer //@compilationUnits.12/@types.0/@bodyDeclarations.7/@parameters.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.1/@expression/@arguments.0/@extendedOperands.0/@expression //@compilationUnits.10/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.8/@expression/@expression //@compilationUnits.15/@types.0/@bodyDeclarations.1/@parameters.0/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.13/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@parameters.0/@type/@name/@name //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.0/@fragments.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.3/@expression/@arguments.0/@expression/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.5/@expression/@leftOperand //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.2/@fragments.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.7/@expression/@expression //@compilationUnits.10/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@parameters.0/@type/@name/@name //@compilationUnits.9/@types.0/@bodyDeclarations.3/@parameters.0/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.2/@type/@name/@name //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.4/@fragments.0/@name //@compilationUnits.12/@types.0/@bodyDeclarations.2/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.4/@body/@statements.1/@expression/@arguments.0/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.7/@parameters.0/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.10/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.13/@parameters.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.4/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.14/@parameters.0/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.6/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.4/@parameters.0/@name //@compilationUnits.9/@types.0/@bodyDeclarations.2/@returnType/@name //@compilationUnits.15/@types.0/@bodyDeclarations.1/@body/@statements.0/@expression/@arguments.0/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.4/@fragments.0/@initializer/@type/@name/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@parameters.0/@name //@compilationUnits.10/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.9/@types.0/@bodyDeclarations.3/@parameters.0/@name //@compilationUnits.9/@types.0/@bodyDeclarations.0/@type/@name/@name //@compilationUnits.12/@types.0/@bodyDeclarations.14/@parameters.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.13/@body/@statements.6/@expression/@arguments.0" resolvedTypeReferences="//@compilationUnits.12/@types.0/@bodyDeclarations.14/@parameters.0/@type //@compilationUnits.12/@types.0/@bodyDeclarations.7/@parameters.0/@type //@compilationUnits.9/@types.0/@bodyDeclarations.2/@returnType //@compilationUnits.9/@types.0/@bodyDeclarations.0/@type //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.2/@type //@compilationUnits.13/@types.0/@bodyDeclarations.0/@bodyDeclarations.4/@parameters.0/@type //@compilationUnits.4/@types.0/@bodyDeclarations.4/@parameters.0/@type //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@parameters.0/@type //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.4/@fragments.0/@initializer/@type //@compilationUnits.2/@types.0/@bodyDeclarations.13/@parameters.0/@type //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.0/@type //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.6/@parameters.0/@type //@compilationUnits.15/@types.0/@bodyDeclarations.1/@parameters.0/@type //@compilationUnits.12/@types.0/@bodyDeclarations.2/@type //@compilationUnits.9/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type //@compilationUnits.15/@types.0/@bodyDeclarations.2/@body/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.13/@types.0/@bodyDeclarations.11/@parameters.0/@type //@compilationUnits.12/@types.0/@bodyDeclarations.13/@returnType //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type //@compilationUnits.13/@types.0/@bodyDeclarations.15/@body/@statements.2/@fragments.0/@initializer/@type //@compilationUnits.9/@types.0/@bodyDeclarations.3/@parameters.0/@type //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.4/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="19" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.lang.String sender = null;" startPosition="80" length="39">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="80" length="7" private="true"/>
        <fragments lexicalForm="sender = null" startPosition="105" length="13">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="114" length="4"/>
          <name lexicalForm="sender" startPosition="105" length="6" fullyQualifiedName="sender" identifier="sender" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="88" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="88" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="98" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="88" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="93" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="88" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.lang.String recipient = null;" startPosition="122" length="42">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="122" length="7" private="true"/>
        <fragments lexicalForm="recipient = null" startPosition="147" length="16">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="159" length="4"/>
          <name lexicalForm="recipient" startPosition="147" length="9" fullyQualifiedName="recipient" identifier="recipient" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="130" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="130" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="140" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="130" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="135" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="130" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.lang.Object content = null;" startPosition="167" length="40">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="167" length="7" private="true"/>
        <fragments lexicalForm="content = null" startPosition="192" length="14">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="202" length="4"/>
          <name lexicalForm="content" startPosition="192" length="7" fullyQualifiedName="content" identifier="content" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="175" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="175" length="16" fullyQualifiedName="java.lang.Object">
            <name lexicalForm="Object" startPosition="185" length="6" fullyQualifiedName="Object" identifier="Object"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="175" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="180" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="175" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void send() {&#xA;&#x9;&#x9;if (getNetwork() != null) {&#xA;&#x9;&#x9;&#x9;getNetwork().send(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="210" length="85">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="210" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (getNetwork() != null) {&#xA;&#x9;&#x9;&#x9;getNetwork().send(this);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="229" length="66">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (getNetwork() != null) {&#xA;&#x9;&#x9;&#x9;getNetwork().send(this);&#xA;&#x9;&#x9;}" startPosition="233" length="59">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="getNetwork() != null" startPosition="237" length="20" operator="!=">
              <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="getNetwork()" startPosition="237" length="12" resolvedType="//@compilationUnits.12/@types.0">
                <name lexicalForm="getNetwork" startPosition="237" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="253" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;getNetwork().send(this);&#xA;&#x9;&#x9;}" startPosition="259" length="33">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getNetwork().send(this);" startPosition="264" length="24">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getNetwork().send(this)" startPosition="264" length="23">
                  <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="282" length="4" resolvedType="//@compilationUnits.10/@types.0"/>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getNetwork()" startPosition="264" length="12" resolvedType="//@compilationUnits.12/@types.0">
                    <name lexicalForm="getNetwork" startPosition="264" length="10" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="getNetwork" identifier="getNetwork"/>
                  </expression>
                  <name lexicalForm="send" startPosition="277" length="4" fullyQualifiedName="send" identifier="send"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="send" startPosition="222" length="4" fullyQualifiedName="send" identifier="send" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="217" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getSender() {&#xA;&#x9;&#x9;return sender;&#xA;&#x9;}" startPosition="298" length="57">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="298" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return sender;&#xA;&#x9;}" startPosition="334" length="21">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return sender;" startPosition="338" length="14">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="sender" startPosition="345" length="6" fullyQualifiedName="sender" identifier="sender"/>
          </statements>
        </body>
        <name lexicalForm="getSender" startPosition="322" length="9" fullyQualifiedName="getSender" identifier="getSender" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="305" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="305" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="315" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="305" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="310" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="305" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setSender(java.lang.String sender) {&#xA;&#x9;&#x9;if (this.sender != sender) {&#xA;&#x9;&#x9;&#x9;this.sender = sender;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Sender&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (sender != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, sender);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="358" length="324">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="358" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.sender != sender) {&#xA;&#x9;&#x9;&#x9;this.sender = sender;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Sender&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (sender != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, sender);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="405" length="277">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.sender != sender) {&#xA;&#x9;&#x9;&#x9;this.sender = sender;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Sender&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (sender != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, sender);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="409" length="270">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.sender != sender" startPosition="413" length="21" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.sender" startPosition="413" length="11">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="413" length="4" resolvedType="//@compilationUnits.10/@types.0"/>
                <name lexicalForm="sender" startPosition="418" length="6" fullyQualifiedName="sender" identifier="sender"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="sender" startPosition="428" length="6" fullyQualifiedName="sender" identifier="sender"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.sender = sender;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Sender&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (sender != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, sender);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="436" length="243">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.sender = sender;" startPosition="441" length="21">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.sender = sender" startPosition="441" length="20" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.sender" startPosition="441" length="11">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="441" length="4" resolvedType="//@compilationUnits.10/@types.0"/>
                    <name lexicalForm="sender" startPosition="446" length="6" fullyQualifiedName="sender" identifier="sender"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="sender" startPosition="455" length="6" fullyQualifiedName="sender" identifier="sender"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="466" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="466" length="12">
                  <name lexicalForm="setChanged" startPosition="466" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="483" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="503" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="507" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="511" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="511" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="521" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="511" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="516" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="511" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="503" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="483" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="483" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="493" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="483" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="488" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="483" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Sender&quot;);" startPosition="537" length="24">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Sender&quot;)" startPosition="537" length="23">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="543" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Sender&quot;" startPosition="551" length="8" escapedValue="&quot;Sender&quot;" literalValue="Sender"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="537" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="539" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, String.class);" startPosition="565" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, String.class)" startPosition="565" length="28">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="571" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="String.class" startPosition="580" length="12">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="580" length="6">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="580" length="6" fullyQualifiedName="String" identifier="String"/>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="565" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="567" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (sender != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, sender);&#xA;&#x9;&#x9;&#x9;}" startPosition="598" length="54">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="sender != null" startPosition="602" length="14" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="sender" startPosition="602" length="6" fullyQualifiedName="sender" identifier="sender"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="612" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, sender);&#xA;&#x9;&#x9;&#x9;}" startPosition="618" length="34">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, sender);" startPosition="624" length="23">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, sender)" startPosition="624" length="22">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="630" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="sender" startPosition="639" length="6" fullyQualifiedName="sender" identifier="sender"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="624" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="626" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="656" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="656" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="672" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="656" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setSender" startPosition="370" length="9" fullyQualifiedName="setSender" identifier="setSender" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="365" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String sender" startPosition="380" length="23">
          <name lexicalForm="sender" startPosition="397" length="6" fullyQualifiedName="sender" identifier="sender" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="380" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="380" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="390" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="380" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="385" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="380" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getRecipient() {&#xA;&#x9;&#x9;return recipient;&#xA;&#x9;}" startPosition="685" length="63">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="685" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return recipient;&#xA;&#x9;}" startPosition="724" length="24">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return recipient;" startPosition="728" length="17">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="recipient" startPosition="735" length="9" fullyQualifiedName="recipient" identifier="recipient"/>
          </statements>
        </body>
        <name lexicalForm="getRecipient" startPosition="709" length="12" fullyQualifiedName="getRecipient" identifier="getRecipient" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="692" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="692" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="702" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="692" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="697" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="692" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setRecipient(java.lang.String recipient) {&#xA;&#x9;&#x9;if (this.recipient != recipient) {&#xA;&#x9;&#x9;&#x9;this.recipient = recipient;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Recipient&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (recipient != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recipient);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="751" length="351">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="751" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.recipient != recipient) {&#xA;&#x9;&#x9;&#x9;this.recipient = recipient;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Recipient&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (recipient != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recipient);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="804" length="298">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.recipient != recipient) {&#xA;&#x9;&#x9;&#x9;this.recipient = recipient;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Recipient&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (recipient != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recipient);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="808" length="291">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.recipient != recipient" startPosition="812" length="27" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.recipient" startPosition="812" length="14">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="812" length="4" resolvedType="//@compilationUnits.10/@types.0"/>
                <name lexicalForm="recipient" startPosition="817" length="9" fullyQualifiedName="recipient" identifier="recipient"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="recipient" startPosition="830" length="9" fullyQualifiedName="recipient" identifier="recipient"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.recipient = recipient;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Recipient&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (recipient != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recipient);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="841" length="258">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.recipient = recipient;" startPosition="846" length="27">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.recipient = recipient" startPosition="846" length="26" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.recipient" startPosition="846" length="14">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="846" length="4" resolvedType="//@compilationUnits.10/@types.0"/>
                    <name lexicalForm="recipient" startPosition="851" length="9" fullyQualifiedName="recipient" identifier="recipient"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="recipient" startPosition="863" length="9" fullyQualifiedName="recipient" identifier="recipient"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="877" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="877" length="12">
                  <name lexicalForm="setChanged" startPosition="877" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="894" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="914" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="918" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="922" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="922" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="932" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="922" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="927" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="922" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="914" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="894" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="894" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="904" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="894" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="899" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="894" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Recipient&quot;);" startPosition="948" length="27">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Recipient&quot;)" startPosition="948" length="26">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="954" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Recipient&quot;" startPosition="962" length="11" escapedValue="&quot;Recipient&quot;" literalValue="Recipient"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="948" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="950" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, String.class);" startPosition="979" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, String.class)" startPosition="979" length="28">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="985" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="String.class" startPosition="994" length="12">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="994" length="6">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="994" length="6" fullyQualifiedName="String" identifier="String"/>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="979" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="981" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (recipient != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recipient);&#xA;&#x9;&#x9;&#x9;}" startPosition="1012" length="60">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="recipient != null" startPosition="1016" length="17" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="recipient" startPosition="1016" length="9" fullyQualifiedName="recipient" identifier="recipient"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1029" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recipient);&#xA;&#x9;&#x9;&#x9;}" startPosition="1035" length="37">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, recipient);" startPosition="1041" length="26">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, recipient)" startPosition="1041" length="25">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="1047" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="recipient" startPosition="1056" length="9" fullyQualifiedName="recipient" identifier="recipient"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1041" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="1043" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="1076" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="1076" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1092" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="1076" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setRecipient" startPosition="763" length="12" fullyQualifiedName="setRecipient" identifier="setRecipient" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="758" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String recipient" startPosition="776" length="26">
          <name lexicalForm="recipient" startPosition="793" length="9" fullyQualifiedName="recipient" identifier="recipient" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="776" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="776" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="786" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="776" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="781" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="776" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.Object getContent() {&#xA;&#x9;&#x9;return content;&#xA;&#x9;}" startPosition="1105" length="59">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1105" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return content;&#xA;&#x9;}" startPosition="1142" length="22">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return content;" startPosition="1146" length="15">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="content" startPosition="1153" length="7" fullyQualifiedName="content" identifier="content"/>
          </statements>
        </body>
        <name lexicalForm="getContent" startPosition="1129" length="10" fullyQualifiedName="getContent" identifier="getContent" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="1112" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="1112" length="16" fullyQualifiedName="java.lang.Object">
            <name lexicalForm="Object" startPosition="1122" length="6" fullyQualifiedName="Object" identifier="Object"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1112" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="1117" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1112" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setContent(java.lang.Object content) {&#xA;&#x9;&#x9;if (this.content != content) {&#xA;&#x9;&#x9;&#x9;this.content = content;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Content&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, Object.class);&#xA;&#x9;&#x9;&#x9;if (content != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, content);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1167" length="333">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1167" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.content != content) {&#xA;&#x9;&#x9;&#x9;this.content = content;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Content&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, Object.class);&#xA;&#x9;&#x9;&#x9;if (content != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, content);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1216" length="284">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.content != content) {&#xA;&#x9;&#x9;&#x9;this.content = content;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Content&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, Object.class);&#xA;&#x9;&#x9;&#x9;if (content != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, content);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1220" length="277">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.content != content" startPosition="1224" length="23" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.content" startPosition="1224" length="12">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1224" length="4" resolvedType="//@compilationUnits.10/@types.0"/>
                <name lexicalForm="content" startPosition="1229" length="7" fullyQualifiedName="content" identifier="content"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="content" startPosition="1240" length="7" fullyQualifiedName="content" identifier="content"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.content = content;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Content&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, Object.class);&#xA;&#x9;&#x9;&#x9;if (content != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, content);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1249" length="248">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.content = content;" startPosition="1254" length="23">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.content = content" startPosition="1254" length="22" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.content" startPosition="1254" length="12">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1254" length="4" resolvedType="//@compilationUnits.10/@types.0"/>
                    <name lexicalForm="content" startPosition="1259" length="7" fullyQualifiedName="content" identifier="content"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="content" startPosition="1269" length="7" fullyQualifiedName="content" identifier="content"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="1281" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="1281" length="12">
                  <name lexicalForm="setChanged" startPosition="1281" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="1298" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="1318" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="1322" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1326" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1326" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="1336" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1326" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="1331" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1326" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="1318" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1298" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1298" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="1308" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1298" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="1303" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1298" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Content&quot;);" startPosition="1352" length="25">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Content&quot;)" startPosition="1352" length="24">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="1358" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Content&quot;" startPosition="1366" length="9" escapedValue="&quot;Content&quot;" literalValue="Content"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1352" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1354" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, Object.class);" startPosition="1381" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, Object.class)" startPosition="1381" length="28">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="1387" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="Object.class" startPosition="1396" length="12">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Object" startPosition="1396" length="6">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Object" startPosition="1396" length="6" fullyQualifiedName="Object" identifier="Object"/>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1381" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1383" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (content != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, content);&#xA;&#x9;&#x9;&#x9;}" startPosition="1414" length="56">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="content != null" startPosition="1418" length="15" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="content" startPosition="1418" length="7" fullyQualifiedName="content" identifier="content"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1429" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, content);&#xA;&#x9;&#x9;&#x9;}" startPosition="1435" length="35">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, content);" startPosition="1441" length="24">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, content)" startPosition="1441" length="23">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="1447" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="content" startPosition="1456" length="7" fullyQualifiedName="content" identifier="content"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1441" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="1443" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="1474" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="1474" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1490" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="1474" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setContent" startPosition="1179" length="10" fullyQualifiedName="setContent" identifier="setContent" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1174" length="4" code="void"/>
        <parameters lexicalForm="java.lang.Object content" startPosition="1190" length="24">
          <name lexicalForm="content" startPosition="1207" length="7" fullyQualifiedName="content" identifier="content" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="1190" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="1190" length="16" fullyQualifiedName="java.lang.Object">
              <name lexicalForm="Object" startPosition="1200" length="6" fullyQualifiedName="Object" identifier="Object"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1190" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="1195" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1190" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="Message" startPosition="32" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.NetworkSpecificData" startPosition="48" length="28" resolvedType="//@compilationUnits.6/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.NetworkSpecificData" startPosition="48" length="28" resolvedType="//@compilationUnits.6/@types.0" fullyQualifiedName="im.model.NetworkSpecificData">
          <name lexicalForm="NetworkSpecificData" startPosition="57" length="19" resolvedType="//@compilationUnits.6/@types.0" fullyQualifiedName="NetworkSpecificData" identifier="NetworkSpecificData"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="48" length="8" fullyQualifiedName="im.model">
            <name lexicalForm="model" startPosition="51" length="5" fullyQualifiedName="model" identifier="model"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="48" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superclassType>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.model;&#xA;&#xA;public class Identity extends im.model.Contact {&#xA;&#x9;private java.lang.String password = null;&#xA;&#xA;&#x9;public java.lang.String toString() {&#xA;&#x9;&#x9;return &quot;* &quot; + super.toString().substring(2);&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getPassword() {&#xA;&#x9;&#x9;return password;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setPassword(java.lang.String password) {&#xA;&#x9;&#x9;if (this.password != password) {&#xA;&#x9;&#x9;&#x9;this.password = password;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Password&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (password != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, password);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="612">
    <package lexicalForm="package im.model;" length="17">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="8" length="8" fullyQualifiedName="im.model">
        <name lexicalForm="model" startPosition="11" length="5" fullyQualifiedName="model" identifier="model"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class Identity extends im.model.Contact {&#xA;&#x9;private java.lang.String password = null;&#xA;&#xA;&#x9;public java.lang.String toString() {&#xA;&#x9;&#x9;return &quot;* &quot; + super.toString().substring(2);&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getPassword() {&#xA;&#x9;&#x9;return password;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setPassword(java.lang.String password) {&#xA;&#x9;&#x9;if (this.password != password) {&#xA;&#x9;&#x9;&#x9;this.password = password;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Password&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (password != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, password);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}" startPosition="19" length="592" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.1/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.2/@expression/@leftOperand //@compilationUnits.8/@types.0/@bodyDeclarations.1/@returnType/@name //@compilationUnits.11/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.1/@name //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.1/@expression/@leftOperand/@name //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression //@compilationUnits.11/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.7/@expression/@arguments.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.0/@fragments.0/@initializer/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.1/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.5/@expression/@rightHandSide //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.1/@expression/@expression //@compilationUnits.11/@types.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.1/@expression/@leftOperand //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.2/@expression/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.1/@returnType/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@expression/@rightOperand/@name //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@expression/@leftOperand/@expression/@rightOperand/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.0/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.1/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.1/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@expression/@leftOperand/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.7/@expression/@arguments.1/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.0/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.7/@expression/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.3/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.1/@expression/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.1/@fragments.0/@initializer/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.4/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@expression/@leftOperand //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@expression/@rightOperand/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.0/@type/@name" resolvedTypeReferences="//@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.0/@type //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@expression/@leftOperand/@expression/@rightOperand //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression/@type //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@expression/@rightOperand //@compilationUnits.8/@types.0/@bodyDeclarations.1/@returnType //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.1/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="19" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.lang.String password = null;" startPosition="69" length="41">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="69" length="7" private="true"/>
        <fragments lexicalForm="password = null" startPosition="94" length="15">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="105" length="4"/>
          <name lexicalForm="password" startPosition="94" length="8" fullyQualifiedName="password" identifier="password" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="77" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="77" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="87" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="77" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="82" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="77" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String toString() {&#xA;&#x9;&#x9;return &quot;* &quot; + super.toString().substring(2);&#xA;&#x9;}" startPosition="113" length="86">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="113" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return &quot;* &quot; + super.toString().substring(2);&#xA;&#x9;}" startPosition="148" length="51">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return &quot;* &quot; + super.toString().substring(2);" startPosition="152" length="44">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;* &quot; + super.toString().substring(2)" startPosition="159" length="36" operator="+">
              <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;* &quot;" startPosition="159" length="4" escapedValue="&quot;* &quot;" literalValue="* "/>
              <rightOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="super.toString().substring(2)" startPosition="166" length="29">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="2" startPosition="193" length="1" token="2"/>
                <expression xsi:type="JavaAST:SuperMethodInvocation" lexicalForm="super.toString()" startPosition="166" length="16">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="toString" startPosition="172" length="8" fullyQualifiedName="toString" identifier="toString"/>
                </expression>
                <name lexicalForm="substring" startPosition="183" length="9" fullyQualifiedName="substring" identifier="substring"/>
              </rightOperand>
            </expression>
          </statements>
        </body>
        <name lexicalForm="toString" startPosition="137" length="8" fullyQualifiedName="toString" identifier="toString" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="120" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="120" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="130" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="120" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="125" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="120" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getPassword() {&#xA;&#x9;&#x9;return password;&#xA;&#x9;}" startPosition="202" length="61">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="202" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return password;&#xA;&#x9;}" startPosition="240" length="23">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return password;" startPosition="244" length="16">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="password" startPosition="251" length="8" fullyQualifiedName="password" identifier="password"/>
          </statements>
        </body>
        <name lexicalForm="getPassword" startPosition="226" length="11" fullyQualifiedName="getPassword" identifier="getPassword" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="209" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="209" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="219" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="209" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="214" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="209" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setPassword(java.lang.String password) {&#xA;&#x9;&#x9;if (this.password != password) {&#xA;&#x9;&#x9;&#x9;this.password = password;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Password&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (password != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, password);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="266" length="342">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="266" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.password != password) {&#xA;&#x9;&#x9;&#x9;this.password = password;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Password&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (password != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, password);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="317" length="291">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.password != password) {&#xA;&#x9;&#x9;&#x9;this.password = password;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Password&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (password != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, password);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="321" length="284">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.password != password" startPosition="325" length="25" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.password" startPosition="325" length="13">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="325" length="4" resolvedType="//@compilationUnits.11/@types.0"/>
                <name lexicalForm="password" startPosition="330" length="8" fullyQualifiedName="password" identifier="password"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="password" startPosition="342" length="8" fullyQualifiedName="password" identifier="password"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.password = password;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Password&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (password != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, password);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="352" length="253">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.password = password;" startPosition="357" length="25">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.password = password" startPosition="357" length="24" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.password" startPosition="357" length="13">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="357" length="4" resolvedType="//@compilationUnits.11/@types.0"/>
                    <name lexicalForm="password" startPosition="362" length="8" fullyQualifiedName="password" identifier="password"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="password" startPosition="373" length="8" fullyQualifiedName="password" identifier="password"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="386" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="386" length="12">
                  <name lexicalForm="setChanged" startPosition="386" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="403" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="423" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="427" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="431" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="431" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="441" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="431" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="436" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="431" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="423" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="403" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="403" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="413" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="403" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="408" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="403" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Password&quot;);" startPosition="457" length="26">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Password&quot;)" startPosition="457" length="25">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="463" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Password&quot;" startPosition="471" length="10" escapedValue="&quot;Password&quot;" literalValue="Password"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="457" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="459" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, String.class);" startPosition="487" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, String.class)" startPosition="487" length="28">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="493" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="String.class" startPosition="502" length="12">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="502" length="6">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="502" length="6" fullyQualifiedName="String" identifier="String"/>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="487" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="489" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (password != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, password);&#xA;&#x9;&#x9;&#x9;}" startPosition="520" length="58">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="password != null" startPosition="524" length="16" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="password" startPosition="524" length="8" fullyQualifiedName="password" identifier="password"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="536" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, password);&#xA;&#x9;&#x9;&#x9;}" startPosition="542" length="36">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, password);" startPosition="548" length="25">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, password)" startPosition="548" length="24">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="554" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="password" startPosition="563" length="8" fullyQualifiedName="password" identifier="password"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="548" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="550" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="582" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="582" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="598" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="582" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setPassword" startPosition="278" length="11" fullyQualifiedName="setPassword" identifier="setPassword" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="273" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String password" startPosition="290" length="25">
          <name lexicalForm="password" startPosition="307" length="8" fullyQualifiedName="password" identifier="password" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="290" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="290" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="300" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="290" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="295" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="290" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="Identity" startPosition="32" length="8" resolvedType="//@compilationUnits.11/@types.0" fullyQualifiedName="Identity" identifier="Identity" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="49" length="16" resolvedType="//@compilationUnits.7/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="49" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
          <name lexicalForm="Contact" startPosition="58" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="49" length="8" fullyQualifiedName="im.model">
            <name lexicalForm="model" startPosition="52" length="5" fullyQualifiedName="model" identifier="model"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="49" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superclassType>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.networking;&#xA;&#xA;public abstract class Network extends java.util.Observable {&#xA;&#x9;private java.lang.String name = null;&#xA;&#xA;&#x9;private im.model.Contact recvContact = null;&#xA;&#xA;&#x9;private im.model.Message recvMsg = null;&#xA;&#xA;&#x9;public void login(java.lang.String uid, java.lang.String pwd) {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void logout() {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void addContact(im.model.Contact c) {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeContact(im.model.Contact c) {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void send(im.model.Message msg) {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public static void discoverNetworks() {&#xA;&#x9;&#x9;String[] options = {&quot;im.networking.jabber.mejabber.MEJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.sms.SMS&quot;, &quot;im.networking.local.Local&quot;};&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;for (int i = 0; i &lt; options.length; i++) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;client.addNetwork((Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance());&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getName() {&#xA;&#x9;&#x9;return name;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setName(java.lang.String name) {&#xA;&#x9;&#x9;if (this.name != name) {&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Contact getRecvContact() {&#xA;&#x9;&#x9;return recvContact;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setRecvContact(im.model.Contact recvContact) {&#xA;&#x9;&#x9;if (this.recvContact != recvContact) {&#xA;&#x9;&#x9;&#x9;this.recvContact = recvContact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvContact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (recvContact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvContact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Message getRecvMsg() {&#xA;&#x9;&#x9;return recvMsg;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setRecvMsg(im.model.Message recvMsg) {&#xA;&#x9;&#x9;if (this.recvMsg != recvMsg) {&#xA;&#x9;&#x9;&#x9;this.recvMsg = recvMsg;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvMsg&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (recvMsg != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvMsg);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="2171">
    <package lexicalForm="package im.networking;" length="22">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="8" length="13" fullyQualifiedName="im.networking">
        <name lexicalForm="networking" startPosition="11" length="10" fullyQualifiedName="networking" identifier="networking"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public abstract class Network extends java.util.Observable {&#xA;&#x9;private java.lang.String name = null;&#xA;&#xA;&#x9;private im.model.Contact recvContact = null;&#xA;&#xA;&#x9;private im.model.Message recvMsg = null;&#xA;&#xA;&#x9;public void login(java.lang.String uid, java.lang.String pwd) {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void logout() {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void addContact(im.model.Contact c) {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeContact(im.model.Contact c) {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void send(im.model.Message msg) {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public static void discoverNetworks() {&#xA;&#x9;&#x9;String[] options = {&quot;im.networking.jabber.mejabber.MEJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.sms.SMS&quot;, &quot;im.networking.local.Local&quot;};&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;for (int i = 0; i &lt; options.length; i++) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;client.addNetwork((Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance());&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getName() {&#xA;&#x9;&#x9;return name;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setName(java.lang.String name) {&#xA;&#x9;&#x9;if (this.name != name) {&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Contact getRecvContact() {&#xA;&#x9;&#x9;return recvContact;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setRecvContact(im.model.Contact recvContact) {&#xA;&#x9;&#x9;if (this.recvContact != recvContact) {&#xA;&#x9;&#x9;&#x9;this.recvContact = recvContact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvContact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (recvContact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvContact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.model.Message getRecvMsg() {&#xA;&#x9;&#x9;return recvMsg;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setRecvMsg(im.model.Message recvMsg) {&#xA;&#x9;&#x9;if (this.recvMsg != recvMsg) {&#xA;&#x9;&#x9;&#x9;this.recvMsg = recvMsg;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvMsg&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (recvMsg != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvMsg);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;}" startPosition="24" length="2146" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.2/@types.0/@bodyDeclarations.25/@body/@statements.0/@expression/@leftOperand //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name/@name //@compilationUnits.7/@types.0/@bodyDeclarations.4/@body/@statements.5/@thenStatement/@statements.1/@expression/@arguments.0/@expression/@name //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@expression/@rightOperand/@expression/@leftOperand/@name //@compilationUnits.7/@types.0/@bodyDeclarations.4/@body/@statements.5/@thenStatement/@statements.1/@expression/@arguments.0/@expression //@compilationUnits.10/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@leftOperand/@name //@compilationUnits.2/@types.0/@bodyDeclarations.27/@parameters.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.28/@body/@statements.0/@thenStatement/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type/@name //@compilationUnits.10/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.6/@types.0/@bodyDeclarations.2/@parameters.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.3/@body/@statements.0/@expression/@arguments.0/@expression/@expression //@compilationUnits.6/@types.0/@bodyDeclarations.2/@parameters.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.25/@parameters.0/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.1/@expression/@expression //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.2/@body/@statements.0/@body/@statements.0/@expression/@arguments.0/@type/@name //@compilationUnits.6/@types.0/@bodyDeclarations.1/@name //@compilationUnits.2/@types.0/@bodyDeclarations.27/@parameters.0/@type/@name/@name //@compilationUnits.2/@imports.1/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@elseStatement/@statements.0/@expression/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@elseStatement/@statements.0/@expression/@expression //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@expression/@rightOperand/@expression/@rightOperand //@compilationUnits.2/@types.0/@bodyDeclarations.26/@body/@statements.0/@body/@statements.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.7/@expression/@expression/@name //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.25/@body/@statements.1/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.5/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.26/@name //@compilationUnits.2/@types.0/@bodyDeclarations.27/@parameters.0/@name //@compilationUnits.6/@types.0/@bodyDeclarations.2/@parameters.0/@name //@compilationUnits.7/@types.0/@bodyDeclarations.4/@body/@statements.5/@expression/@leftOperand //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.5/@expression/@expression/@name //@compilationUnits.8/@types.0/@bodyDeclarations.1/@parameters.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.28/@body/@statements.1/@thenStatement/@expression/@expression //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.5/@thenStatement/@statements.0/@expression/@arguments.1 //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@expression/@leftOperand/@name //@compilationUnits.13/@types.0/@superclassType/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.10/@types.0/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression/@name //@compilationUnits.8/@types.0/@bodyDeclarations.1/@body/@statements.0/@body/@statements.1/@expression/@rightOperand/@expression/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.1/@fragments.0/@initializer/@arguments.0 //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression //@compilationUnits.10/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.26/@body/@statements.0/@body/@statements.0/@expression/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.1/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.28/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.1/@thenStatement/@statements.1/@thenStatement/@statements.1/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.3/@body/@statements.0/@expression/@arguments.0/@expression/@expression/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@expression/@leftOperand/@arguments.0 //@compilationUnits.6/@types.0/@bodyDeclarations.1/@returnType/@name //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.2/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.3/@body/@statements.0/@expression/@arguments.0/@expression/@expression/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.24/@body/@statements.1/@expression/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.28/@body/@statements.0/@thenStatement/@statements.0/@body/@statements.0/@expression/@arguments.1 //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.24/@parameters.0/@type/@name/@name //@compilationUnits.13/@types.0/@superclassType/@name //@compilationUnits.6/@types.0/@bodyDeclarations.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@expression/@rightOperand //@compilationUnits.15/@types.0/@superclassType/@name //@compilationUnits.2/@types.0/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer //@compilationUnits.2/@types.0/@bodyDeclarations.28/@body/@statements.1/@expression/@leftOperand //@compilationUnits.6/@types.0/@bodyDeclarations.0/@type/@name //@compilationUnits.12/@types.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.27/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@arguments.0/@name //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@expression/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer //@compilationUnits.2/@types.0/@bodyDeclarations.26/@body/@statements.0/@body/@statements.0/@expression/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.24/@parameters.0/@type/@name //@compilationUnits.12/@types.0/@bodyDeclarations.14/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.5/@expression/@expression //@compilationUnits.2/@imports.1/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.24/@body/@statements.1/@thenStatement/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.26/@returnType/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.25/@parameters.0/@name //@compilationUnits.6/@types.0/@bodyDeclarations.1/@body/@statements.0/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.2/@body/@statements.0/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.28/@parameters.0/@type/@name //@compilationUnits.7/@types.0/@bodyDeclarations.4/@body/@statements.5/@expression/@leftOperand/@name //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.5/@expression/@leftOperand //@compilationUnits.8/@types.0/@bodyDeclarations.1/@parameters.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.28/@parameters.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.24/@parameters.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.0/@type/@name //@compilationUnits.6/@types.0/@bodyDeclarations.0/@fragments.0/@name //@compilationUnits.8/@types.0/@bodyDeclarations.1/@parameters.0/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.9/@body/@statements.1/@body/@statements.1/@expression/@expression //@compilationUnits.12/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.24/@body/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.26/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.1/@expression/@arguments.0 //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.5/@expression/@arguments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@type/@name/@name //@compilationUnits.15/@types.0/@superclassType/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.25/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.7/@expression/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.28/@body/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.0/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.3/@body/@statements.0/@expression/@arguments.0/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.8/@body/@statements.1/@expression/@arguments.0 //@compilationUnits.6/@types.0/@bodyDeclarations.1/@returnType/@name/@name //@compilationUnits.12/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@leftOperand/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.1/@expression/@leftOperand/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer/@name" resolvedTypeReferences="//@compilationUnits.2/@types.0/@bodyDeclarations.28/@parameters.0/@type //@compilationUnits.13/@types.0/@superclassType //@compilationUnits.2/@types.0/@bodyDeclarations.25/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.0/@type //@compilationUnits.8/@types.0/@bodyDeclarations.1/@parameters.0/@type //@compilationUnits.6/@types.0/@bodyDeclarations.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.26/@body/@statements.0/@body/@statements.0/@expression/@type //@compilationUnits.12/@types.0/@bodyDeclarations.8/@body/@statements.2/@body/@statements.0/@body/@statements.0/@expression/@arguments.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.26/@returnType //@compilationUnits.15/@types.0/@superclassType //@compilationUnits.6/@types.0/@bodyDeclarations.1/@returnType //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.0/@type //@compilationUnits.6/@types.0/@bodyDeclarations.2/@parameters.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@type //@compilationUnits.2/@types.0/@bodyDeclarations.27/@parameters.0/@type //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.3/@body/@statements.0/@expression/@arguments.0/@expression/@expression/@type //@compilationUnits.6/@types.0/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.4/@expression/@arguments.1/@type //@compilationUnits.2/@types.0/@bodyDeclarations.24/@parameters.0/@type //@compilationUnits.2/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type //@compilationUnits.2/@types.0/@bodyDeclarations.10/@body/@statements.1/@body/@statements.0/@fragments.0/@initializer/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="24" length="6" public="true"/>
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="31" length="8" abstract="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.lang.String name = null;" startPosition="86" length="37">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="86" length="7" private="true"/>
        <fragments lexicalForm="name = null" startPosition="111" length="11">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="118" length="4"/>
          <name lexicalForm="name" startPosition="111" length="4" fullyQualifiedName="name" identifier="name" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="94" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="94" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="104" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="94" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="99" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="94" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.model.Contact recvContact = null;" startPosition="126" length="44">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="126" length="7" private="true"/>
        <fragments lexicalForm="recvContact = null" startPosition="151" length="18">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="165" length="4"/>
          <name lexicalForm="recvContact" startPosition="151" length="11" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recvContact" identifier="recvContact" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="134" length="16" resolvedType="//@compilationUnits.7/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="134" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
            <name lexicalForm="Contact" startPosition="143" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="134" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="137" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="134" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private im.model.Message recvMsg = null;" startPosition="173" length="40">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="173" length="7" private="true"/>
        <fragments lexicalForm="recvMsg = null" startPosition="198" length="14">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="208" length="4"/>
          <name lexicalForm="recvMsg" startPosition="198" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="recvMsg" identifier="recvMsg" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="181" length="16" resolvedType="//@compilationUnits.10/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="181" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
            <name lexicalForm="Message" startPosition="190" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="181" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="184" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="181" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void login(java.lang.String uid, java.lang.String pwd) {&#xA;&#xA;&#x9;}" startPosition="216" length="67">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="216" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#xA;&#x9;}" startPosition="278" length="5"/>
        <name lexicalForm="login" startPosition="228" length="5" fullyQualifiedName="login" identifier="login" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="223" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String uid" startPosition="234" length="20">
          <name lexicalForm="uid" startPosition="251" length="3" fullyQualifiedName="uid" identifier="uid" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="234" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="234" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="244" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="234" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="239" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="234" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="java.lang.String pwd" startPosition="256" length="20">
          <name lexicalForm="pwd" startPosition="273" length="3" fullyQualifiedName="pwd" identifier="pwd" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="256" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="256" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="266" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="256" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="261" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="256" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void logout() {&#xA;&#xA;&#x9;}" startPosition="286" length="26">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="286" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#xA;&#x9;}" startPosition="307" length="5"/>
        <name lexicalForm="logout" startPosition="298" length="6" fullyQualifiedName="logout" identifier="logout" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="293" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addContact(im.model.Contact c) {&#xA;&#xA;&#x9;}" startPosition="315" length="48">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="315" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#xA;&#x9;}" startPosition="358" length="5"/>
        <name lexicalForm="addContact" startPosition="327" length="10" fullyQualifiedName="addContact" identifier="addContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="322" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact c" startPosition="338" length="18">
          <name lexicalForm="c" startPosition="355" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="338" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="338" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="347" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="338" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="341" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="338" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeContact(im.model.Contact c) {&#xA;&#xA;&#x9;}" startPosition="366" length="51">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="366" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#xA;&#x9;}" startPosition="412" length="5"/>
        <name lexicalForm="removeContact" startPosition="378" length="13" fullyQualifiedName="removeContact" identifier="removeContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="373" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact c" startPosition="392" length="18">
          <name lexicalForm="c" startPosition="409" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="392" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="392" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="401" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="392" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="395" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="392" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void send(im.model.Message msg) {&#xA;&#xA;&#x9;}" startPosition="420" length="44">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="420" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#xA;&#x9;}" startPosition="459" length="5"/>
        <name lexicalForm="send" startPosition="432" length="4" fullyQualifiedName="send" identifier="send" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="427" length="4" code="void"/>
        <parameters lexicalForm="im.model.Message msg" startPosition="437" length="20">
          <name lexicalForm="msg" startPosition="454" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="437" length="16" resolvedType="//@compilationUnits.10/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="437" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
              <name lexicalForm="Message" startPosition="446" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="437" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="440" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="437" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public static void discoverNetworks() {&#xA;&#x9;&#x9;String[] options = {&quot;im.networking.jabber.mejabber.MEJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.sms.SMS&quot;, &quot;im.networking.local.Local&quot;};&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;for (int i = 0; i &lt; options.length; i++) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;client.addNetwork((Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance());&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="467" length="475">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="467" length="6" public="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="static" startPosition="474" length="6" static="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;String[] options = {&quot;im.networking.jabber.mejabber.MEJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.sms.SMS&quot;, &quot;im.networking.local.Local&quot;};&#xA;&#x9;&#x9;im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;for (int i = 0; i &lt; options.length; i++) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;client.addNetwork((Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance());&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="505" length="437">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String[] options = {&quot;im.networking.jabber.mejabber.MEJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.sms.SMS&quot;, &quot;im.networking.local.Local&quot;};" startPosition="509" length="176">
            <fragments lexicalForm="options = {&quot;im.networking.jabber.mejabber.MEJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.sms.SMS&quot;, &quot;im.networking.local.Local&quot;}" startPosition="518" length="166">
              <initializer xsi:type="JavaAST:ArrayInitializer" lexicalForm="{&quot;im.networking.jabber.mejabber.MEJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.networking.sms.SMS&quot;, &quot;im.networking.local.Local&quot;}" startPosition="528" length="156">
                <expressions xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;im.networking.jabber.mejabber.MEJabber&quot;" startPosition="529" length="40" escapedValue="&quot;im.networking.jabber.mejabber.MEJabber&quot;" literalValue="im.networking.jabber.mejabber.MEJabber"/>
                <expressions xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;" startPosition="575" length="50" escapedValue="&quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;" literalValue="im.networking.jabber.defaultjabber.DefaultJabber"/>
                <expressions xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;im.networking.sms.SMS&quot;" startPosition="631" length="23" escapedValue="&quot;im.networking.sms.SMS&quot;" literalValue="im.networking.sms.SMS"/>
                <expressions xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;im.networking.local.Local&quot;" startPosition="656" length="27" escapedValue="&quot;im.networking.local.Local&quot;" literalValue="im.networking.local.Local"/>
              </initializer>
              <name lexicalForm="options" startPosition="518" length="7" fullyQualifiedName="options" identifier="options" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:ArrayType" lexicalForm="String[]" startPosition="509" length="8" dimensions="1">
              <componentType xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="509" length="6">
                <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="509" length="6" fullyQualifiedName="String" identifier="String"/>
              </componentType>
            </type>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.InstantMessagingClient client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();" startPosition="688" length="80">
            <fragments lexicalForm="client = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance()" startPosition="714" length="53">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance()" startPosition="723" length="44" resolvedType="//@compilationUnits.2/@types.0">
                <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="723" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                  <name lexicalForm="InstantMessagingClient" startPosition="726" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="723" length="2" fullyQualifiedName="im" identifier="im"/>
                </expression>
                <name lexicalForm="getInstance" startPosition="754" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
              </initializer>
              <name lexicalForm="client" startPosition="714" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.InstantMessagingClient" startPosition="688" length="25" resolvedType="//@compilationUnits.2/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="688" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                <name lexicalForm="InstantMessagingClient" startPosition="691" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="688" length="2" fullyQualifiedName="im" identifier="im"/>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (int i = 0; i &lt; options.length; i++) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;client.addNetwork((Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance());&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="771" length="168">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;client.addNetwork((Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance());&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="812" length="127">
              <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;client.addNetwork((Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance());&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}" startPosition="817" length="118">
                <catchClauses lexicalForm="catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}" startPosition="909" length="26">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;}" startPosition="929" length="6"/>
                  <exception lexicalForm="Exception e" startPosition="916" length="11">
                    <name lexicalForm="e" startPosition="926" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="916" length="9">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="916" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                    </type>
                  </exception>
                </catchClauses>
                <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;client.addNetwork((Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance());&#xA;&#x9;&#x9;&#x9;}" startPosition="821" length="87">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="client.addNetwork((Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance());" startPosition="827" length="76">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="client.addNetwork((Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance())" startPosition="827" length="75">
                      <arguments xsi:type="JavaAST:CastExpression" lexicalForm="(Network) Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance()" startPosition="845" length="56" resolvedType="//@compilationUnits.12/@types.0">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="Class.forName(options[i])&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.newInstance()" startPosition="855" length="46">
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="Class.forName(options[i])" startPosition="855" length="25">
                            <arguments xsi:type="JavaAST:ArrayAccess" lexicalForm="options[i]" startPosition="869" length="10">
                              <array xsi:type="JavaAST:SimpleName" lexicalForm="options" startPosition="869" length="7" fullyQualifiedName="options" identifier="options"/>
                              <index xsi:type="JavaAST:SimpleName" lexicalForm="i" startPosition="877" length="1" fullyQualifiedName="i" identifier="i"/>
                            </arguments>
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="855" length="5" fullyQualifiedName="Class" identifier="Class"/>
                            <name lexicalForm="forName" startPosition="861" length="7" fullyQualifiedName="forName" identifier="forName"/>
                          </expression>
                          <name lexicalForm="newInstance" startPosition="888" length="11" fullyQualifiedName="newInstance" identifier="newInstance"/>
                        </expression>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="Network" startPosition="846" length="7" resolvedType="//@compilationUnits.12/@types.0">
                          <name xsi:type="JavaAST:SimpleName" lexicalForm="Network" startPosition="846" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
                        </type>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="client" startPosition="827" length="6" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="client" identifier="client"/>
                      <name lexicalForm="addNetwork" startPosition="834" length="10" fullyQualifiedName="addNetwork" identifier="addNetwork"/>
                    </expression>
                  </statements>
                </body>
              </statements>
            </body>
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="i &lt; options.length" startPosition="787" length="18" operator="&lt;">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="i" startPosition="787" length="1" fullyQualifiedName="i" identifier="i"/>
              <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="options.length" startPosition="791" length="14" fullyQualifiedName="options.length">
                <name lexicalForm="length" startPosition="799" length="6" fullyQualifiedName="length" identifier="length"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="options" startPosition="791" length="7" fullyQualifiedName="options" identifier="options"/>
              </rightOperand>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="int i = 0" startPosition="776" length="9">
              <fragments lexicalForm="i = 0" startPosition="780" length="5">
                <initializer xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="784" length="1" token="0"/>
                <name lexicalForm="i" startPosition="780" length="1" fullyQualifiedName="i" identifier="i" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="776" length="3" code="int"/>
            </initializers>
            <updaters xsi:type="JavaAST:PostfixExpression" lexicalForm="i++" startPosition="807" length="3">
              <operand xsi:type="JavaAST:SimpleName" lexicalForm="i" startPosition="807" length="1" fullyQualifiedName="i" identifier="i"/>
            </updaters>
          </statements>
        </body>
        <name lexicalForm="discoverNetworks" startPosition="486" length="16" fullyQualifiedName="discoverNetworks" identifier="discoverNetworks" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="481" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getName() {&#xA;&#x9;&#x9;return name;&#xA;&#x9;}" startPosition="945" length="53">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="945" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return name;&#xA;&#x9;}" startPosition="979" length="19">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return name;" startPosition="983" length="12">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="990" length="4" fullyQualifiedName="name" identifier="name"/>
          </statements>
        </body>
        <name lexicalForm="getName" startPosition="969" length="7" fullyQualifiedName="getName" identifier="getName" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="952" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="952" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="962" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="952" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="957" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="952" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setName(java.lang.String name) {&#xA;&#x9;&#x9;if (this.name != name) {&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1001" length="306">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1001" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.name != name) {&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1044" length="263">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.name != name) {&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1048" length="256">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.name != name" startPosition="1052" length="17" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.name" startPosition="1052" length="9">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1052" length="4" resolvedType="//@compilationUnits.12/@types.0"/>
                <name lexicalForm="name" startPosition="1057" length="4" fullyQualifiedName="name" identifier="name"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="1065" length="4" fullyQualifiedName="name" identifier="name"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.name = name;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;Name&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, String.class);&#xA;&#x9;&#x9;&#x9;if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1071" length="233">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.name = name;" startPosition="1076" length="17">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.name = name" startPosition="1076" length="16" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.name" startPosition="1076" length="9">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1076" length="4" resolvedType="//@compilationUnits.12/@types.0"/>
                    <name lexicalForm="name" startPosition="1081" length="4" fullyQualifiedName="name" identifier="name"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="1088" length="4" fullyQualifiedName="name" identifier="name"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="1097" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="1097" length="12">
                  <name lexicalForm="setChanged" startPosition="1097" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="1114" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="1134" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="1138" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1142" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1142" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="1152" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1142" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="1147" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1142" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="1134" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1114" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1114" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="1124" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1114" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="1119" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1114" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;Name&quot;);" startPosition="1168" length="22">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;Name&quot;)" startPosition="1168" length="21">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="1174" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Name&quot;" startPosition="1182" length="6" escapedValue="&quot;Name&quot;" literalValue="Name"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1168" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1170" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, String.class);" startPosition="1194" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, String.class)" startPosition="1194" length="28">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="1200" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="String.class" startPosition="1209" length="12">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="1209" length="6">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="1209" length="6" fullyQualifiedName="String" identifier="String"/>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1194" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1196" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (name != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}" startPosition="1227" length="50">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="name != null" startPosition="1231" length="12" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="1231" length="4" fullyQualifiedName="name" identifier="name"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1239" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, name);&#xA;&#x9;&#x9;&#x9;}" startPosition="1245" length="32">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, name);" startPosition="1251" length="21">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, name)" startPosition="1251" length="20">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="1257" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="1266" length="4" fullyQualifiedName="name" identifier="name"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1251" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="1253" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="1281" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="1281" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1297" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="1281" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setName" startPosition="1013" length="7" fullyQualifiedName="setName" identifier="setName" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1008" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String name" startPosition="1021" length="21">
          <name lexicalForm="name" startPosition="1038" length="4" fullyQualifiedName="name" identifier="name" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="1021" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="1021" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="1031" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1021" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="1026" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1021" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.Contact getRecvContact() {&#xA;&#x9;&#x9;return recvContact;&#xA;&#x9;}" startPosition="1310" length="67">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1310" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return recvContact;&#xA;&#x9;}" startPosition="1351" length="26">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return recvContact;" startPosition="1355" length="19">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="recvContact" startPosition="1362" length="11" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recvContact" identifier="recvContact"/>
          </statements>
        </body>
        <name lexicalForm="getRecvContact" startPosition="1334" length="14" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="getRecvContact" identifier="getRecvContact" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1317" length="16" resolvedType="//@compilationUnits.7/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1317" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
            <name lexicalForm="Contact" startPosition="1326" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1317" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="1320" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1317" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setRecvContact(im.model.Contact recvContact) {&#xA;&#x9;&#x9;if (this.recvContact != recvContact) {&#xA;&#x9;&#x9;&#x9;this.recvContact = recvContact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvContact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (recvContact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvContact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1380" length="379">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1380" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.recvContact != recvContact) {&#xA;&#x9;&#x9;&#x9;this.recvContact = recvContact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvContact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (recvContact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvContact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1437" length="322">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.recvContact != recvContact) {&#xA;&#x9;&#x9;&#x9;this.recvContact = recvContact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvContact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (recvContact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvContact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1441" length="315">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.recvContact != recvContact" startPosition="1445" length="31" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.recvContact" startPosition="1445" length="16" resolvedType="//@compilationUnits.7/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1445" length="4" resolvedType="//@compilationUnits.12/@types.0"/>
                <name lexicalForm="recvContact" startPosition="1450" length="11" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recvContact" identifier="recvContact"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="recvContact" startPosition="1465" length="11" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recvContact" identifier="recvContact"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.recvContact = recvContact;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvContact&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Contact.class);&#xA;&#x9;&#x9;&#x9;if (recvContact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvContact);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1478" length="278">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.recvContact = recvContact;" startPosition="1483" length="31">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.recvContact = recvContact" startPosition="1483" length="30" resolvedType="//@compilationUnits.7/@types.0" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.recvContact" startPosition="1483" length="16" resolvedType="//@compilationUnits.7/@types.0">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1483" length="4" resolvedType="//@compilationUnits.12/@types.0"/>
                    <name lexicalForm="recvContact" startPosition="1488" length="11" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recvContact" identifier="recvContact"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="recvContact" startPosition="1502" length="11" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recvContact" identifier="recvContact"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="1518" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="1518" length="12">
                  <name lexicalForm="setChanged" startPosition="1518" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="1535" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="1555" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="1559" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1563" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1563" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="1573" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1563" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="1568" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1563" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="1555" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1535" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1535" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="1545" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1535" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="1540" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1535" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;RecvContact&quot;);" startPosition="1589" length="29">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;RecvContact&quot;)" startPosition="1589" length="28">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="1595" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;RecvContact&quot;" startPosition="1603" length="13" escapedValue="&quot;RecvContact&quot;" literalValue="RecvContact"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1589" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1591" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, im.model.Contact.class);" startPosition="1622" length="39">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, im.model.Contact.class)" startPosition="1622" length="38">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="1628" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="im.model.Contact.class" startPosition="1637" length="22">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1637" length="16" resolvedType="//@compilationUnits.7/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1637" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                        <name lexicalForm="Contact" startPosition="1646" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1637" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="1640" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1637" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1622" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="1624" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (recvContact != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvContact);&#xA;&#x9;&#x9;&#x9;}" startPosition="1665" length="64">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="recvContact != null" startPosition="1669" length="19" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="recvContact" startPosition="1669" length="11" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recvContact" identifier="recvContact"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="1684" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvContact);&#xA;&#x9;&#x9;&#x9;}" startPosition="1690" length="39">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, recvContact);" startPosition="1696" length="28">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, recvContact)" startPosition="1696" length="27">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="1702" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="recvContact" startPosition="1711" length="11" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recvContact" identifier="recvContact"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1696" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="1698" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="1733" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="1733" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1749" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="1733" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setRecvContact" startPosition="1392" length="14" fullyQualifiedName="setRecvContact" identifier="setRecvContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1387" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact recvContact" startPosition="1407" length="28">
          <name lexicalForm="recvContact" startPosition="1424" length="11" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="recvContact" identifier="recvContact" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1407" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1407" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="1416" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1407" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="1410" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1407" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.model.Message getRecvMsg() {&#xA;&#x9;&#x9;return recvMsg;&#xA;&#x9;}" startPosition="1762" length="59">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1762" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return recvMsg;&#xA;&#x9;}" startPosition="1799" length="22">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return recvMsg;" startPosition="1803" length="15">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="recvMsg" startPosition="1810" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="recvMsg" identifier="recvMsg"/>
          </statements>
        </body>
        <name lexicalForm="getRecvMsg" startPosition="1786" length="10" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="getRecvMsg" identifier="getRecvMsg" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="1769" length="16" resolvedType="//@compilationUnits.10/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="1769" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
            <name lexicalForm="Message" startPosition="1778" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1769" length="8" fullyQualifiedName="im.model">
              <name lexicalForm="model" startPosition="1772" length="5" fullyQualifiedName="model" identifier="model"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1769" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setRecvMsg(im.model.Message recvMsg) {&#xA;&#x9;&#x9;if (this.recvMsg != recvMsg) {&#xA;&#x9;&#x9;&#x9;this.recvMsg = recvMsg;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvMsg&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (recvMsg != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvMsg);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1824" length="343">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1824" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (this.recvMsg != recvMsg) {&#xA;&#x9;&#x9;&#x9;this.recvMsg = recvMsg;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvMsg&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (recvMsg != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvMsg);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1873" length="294">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (this.recvMsg != recvMsg) {&#xA;&#x9;&#x9;&#x9;this.recvMsg = recvMsg;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvMsg&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (recvMsg != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvMsg);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1877" length="287">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="this.recvMsg != recvMsg" startPosition="1881" length="23" operator="!=">
              <leftOperand xsi:type="JavaAST:FieldAccess" lexicalForm="this.recvMsg" startPosition="1881" length="12" resolvedType="//@compilationUnits.10/@types.0">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1881" length="4" resolvedType="//@compilationUnits.12/@types.0"/>
                <name lexicalForm="recvMsg" startPosition="1886" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="recvMsg" identifier="recvMsg"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="recvMsg" startPosition="1897" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="recvMsg" identifier="recvMsg"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.recvMsg = recvMsg;&#xA;&#x9;&#x9;&#x9;setChanged();&#xA;&#x9;&#x9;&#x9;java.util.Hashtable e = new java.util.Hashtable();&#xA;&#x9;&#x9;&#x9;e.put(&quot;name&quot;, &quot;RecvMsg&quot;);&#xA;&#x9;&#x9;&#x9;e.put(&quot;class&quot;, im.model.Message.class);&#xA;&#x9;&#x9;&#x9;if (recvMsg != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvMsg);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;notifyObservers(e);&#xA;&#x9;&#x9;}" startPosition="1906" length="258">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.recvMsg = recvMsg;" startPosition="1911" length="23">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="this.recvMsg = recvMsg" startPosition="1911" length="22" resolvedType="//@compilationUnits.10/@types.0" operator="=">
                  <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.recvMsg" startPosition="1911" length="12" resolvedType="//@compilationUnits.10/@types.0">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1911" length="4" resolvedType="//@compilationUnits.12/@types.0"/>
                    <name lexicalForm="recvMsg" startPosition="1916" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="recvMsg" identifier="recvMsg"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="recvMsg" startPosition="1926" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="recvMsg" identifier="recvMsg"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setChanged();" startPosition="1938" length="13">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setChanged()" startPosition="1938" length="12">
                  <name lexicalForm="setChanged" startPosition="1938" length="10" fullyQualifiedName="setChanged" identifier="setChanged"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable e = new java.util.Hashtable();" startPosition="1955" length="50">
                <fragments lexicalForm="e = new java.util.Hashtable()" startPosition="1975" length="29">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Hashtable()" startPosition="1979" length="25">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1983" length="19">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1983" length="19" fullyQualifiedName="java.util.Hashtable">
                        <name lexicalForm="Hashtable" startPosition="1993" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1983" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="1988" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1983" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="e" startPosition="1975" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="1955" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="1955" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="1965" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1955" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="1960" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1955" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;name&quot;, &quot;RecvMsg&quot;);" startPosition="2009" length="25">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;name&quot;, &quot;RecvMsg&quot;)" startPosition="2009" length="24">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;name&quot;" startPosition="2015" length="6" escapedValue="&quot;name&quot;" literalValue="name"/>
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;RecvMsg&quot;" startPosition="2023" length="9" escapedValue="&quot;RecvMsg&quot;" literalValue="RecvMsg"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2009" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="2011" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;class&quot;, im.model.Message.class);" startPosition="2038" length="39">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;class&quot;, im.model.Message.class)" startPosition="2038" length="38">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;class&quot;" startPosition="2044" length="7" escapedValue="&quot;class&quot;" literalValue="class"/>
                  <arguments xsi:type="JavaAST:TypeLiteral" lexicalForm="im.model.Message.class" startPosition="2053" length="22">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="2053" length="16" resolvedType="//@compilationUnits.10/@types.0">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="2053" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                        <name lexicalForm="Message" startPosition="2062" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2053" length="8" fullyQualifiedName="im.model">
                          <name lexicalForm="model" startPosition="2056" length="5" fullyQualifiedName="model" identifier="model"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2053" length="2" fullyQualifiedName="im" identifier="im"/>
                        </qualifier>
                      </name>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2038" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="put" startPosition="2040" length="3" fullyQualifiedName="put" identifier="put"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (recvMsg != null) {&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvMsg);&#xA;&#x9;&#x9;&#x9;}" startPosition="2081" length="56">
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="recvMsg != null" startPosition="2085" length="15" operator="!=">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="recvMsg" startPosition="2085" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="recvMsg" identifier="recvMsg"/>
                  <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="2096" length="4"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;e.put(&quot;value&quot;, recvMsg);&#xA;&#x9;&#x9;&#x9;}" startPosition="2102" length="35">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.put(&quot;value&quot;, recvMsg);" startPosition="2108" length="24">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.put(&quot;value&quot;, recvMsg)" startPosition="2108" length="23">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;value&quot;" startPosition="2114" length="7" escapedValue="&quot;value&quot;" literalValue="value"/>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="recvMsg" startPosition="2123" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="recvMsg" identifier="recvMsg"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2108" length="1" fullyQualifiedName="e" identifier="e"/>
                      <name lexicalForm="put" startPosition="2110" length="3" fullyQualifiedName="put" identifier="put"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyObservers(e);" startPosition="2141" length="19">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyObservers(e)" startPosition="2141" length="18">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2157" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="notifyObservers" startPosition="2141" length="15" fullyQualifiedName="notifyObservers" identifier="notifyObservers"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="setRecvMsg" startPosition="1836" length="10" fullyQualifiedName="setRecvMsg" identifier="setRecvMsg" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1831" length="4" code="void"/>
        <parameters lexicalForm="im.model.Message recvMsg" startPosition="1847" length="24">
          <name lexicalForm="recvMsg" startPosition="1864" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="recvMsg" identifier="recvMsg" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="1847" length="16" resolvedType="//@compilationUnits.10/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="1847" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
              <name lexicalForm="Message" startPosition="1856" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1847" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="1850" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1847" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="Network" startPosition="46" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Observable" startPosition="62" length="20">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Observable" startPosition="62" length="20" fullyQualifiedName="java.util.Observable">
          <name lexicalForm="Observable" startPosition="72" length="10" fullyQualifiedName="Observable" identifier="Observable"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="62" length="9" fullyQualifiedName="java.util">
            <name lexicalForm="util" startPosition="67" length="4" fullyQualifiedName="util" identifier="util"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="62" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </name>
      </superclassType>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.networking.jabber;&#xA;&#xA;import com.jabberwookie.*;&#xA;import com.jabberwookie.ns.jabber.*;&#xA;import com.jabberwookie.ns.jabber.iq.*;&#xA;&#xA;public abstract class Jabber extends im.networking.Network&#xA;&#x9;&#x9;implements&#xA;&#x9;&#x9;&#x9;com.jabberwookie.MessageListener,&#xA;&#x9;&#x9;&#x9;com.jabberwookie.PresenceListener,&#xA;&#x9;&#x9;&#x9;com.jabberwookie.IQListener {&#xA;&#x9;public abstract class State {&#xA;&#x9;&#x9;public void login(java.lang.String uid, java.lang.String pwd) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void logout() {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void addContact(im.model.Contact c) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void removeContact(im.model.Contact c) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void send(im.model.Message msg) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public class ConnectedState extends State {&#xA;&#x9;&#x9;public void logout() {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void addContact(im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;addContactAsync(c);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void removeContact(im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;removeContactAsync(c);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void send(im.model.Message msg) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;sendAsync(msg);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void addContactAsync(final im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void removeContactAsync(final im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void sendAsync(final im.model.Message msg) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public class DisconnectedState extends State {&#xA;&#x9;&#x9;public void login(final java.lang.String uid, final java.lang.String pwd) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;private State state = new DisconnectedState();&#xA;&#xA;&#x9;private java.lang.String uid = null;&#xA;&#xA;&#x9;private com.jabberwookie.Client2Server connection;&#xA;&#xA;&#x9;public Jabber() {&#xA;&#x9;&#x9;setName(&quot;Jabber&quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;public void login(java.lang.String uid, java.lang.String pwd) {&#xA;&#x9;&#x9;this.uid = uid;&#xA;&#x9;&#x9;state.login(uid, pwd);&#xA;&#x9;}&#xA;&#xA;&#x9;public void logout() {&#xA;&#x9;&#x9;state.logout();&#xA;&#x9;}&#xA;&#xA;&#x9;public void addContact(im.model.Contact c) {&#xA;&#x9;&#x9;state.addContact(c);&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeContact(im.model.Contact c) {&#xA;&#x9;&#x9;state.removeContact(c);&#xA;&#x9;}&#xA;&#xA;&#x9;public void send(im.model.Message msg) {&#xA;&#x9;&#x9;state.send(msg);&#xA;&#x9;}&#xA;&#xA;&#x9;private boolean registerUser(java.lang.String user, java.lang.String pwd) {&#xA;&#x9;&#x9;System.out.println(&quot;Registering &quot; + user + &quot; at &quot;&#xA;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable info = IQRegister&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getRequiredRegInfo(getConnection());&#xA;&#x9;&#x9;&#x9;String key;&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;key = (String) e.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;if (key.equals(Const.USERNAME))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.PASSWORD))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, pwd);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;Chunk chunk = getConnection().send(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRegister.createSetRequest(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().getServerName(), info), 30000);&#xA;&#x9;&#x9;&#x9;return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#xA;&#x9;private java.lang.String stripResource(java.lang.String jid) {&#xA;&#x9;&#x9;if (uid.equals(jid)) {&#xA;&#x9;&#x9;&#x9;return jid;&#xA;&#x9;&#x9;} else { // strip resource bit if remote user&#xA;&#x9;&#x9;&#x9;java.util.Vector strip = com.ssttr.util.Strings.tokenize(jid, '/');&#xA;&#x9;&#x9;&#x9;return (String) strip.elementAt(0);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void incomingIQ(com.jabberwookie.ns.jabber.IQ iq) {&#xA;&#x9;&#x9;java.util.Enumeration children = iq.getChildren().elements();&#xA;&#x9;&#x9;while (children.hasMoreElements()) {&#xA;&#x9;&#x9;&#x9;com.ssttr.xml.XMLElement el = (com.ssttr.xml.XMLElement) children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;if (el instanceof IQRoster) {&#xA;&#x9;&#x9;&#x9;&#x9;for (java.util.Enumeration items = el.enumerateChildren(); items&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster.Item item = (IQRoster.Item) items.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Roster Item: &quot; + item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setUserId(item.getJID());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setName(item.getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Unknown iq element: &quot; + el);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void incomingMessage(com.jabberwookie.ns.jabber.Message message) {&#xA;&#x9;&#x9;System.out.println(&quot;Message: &quot; + message);&#xA;&#x9;&#x9;if (message.getBody() == null) {&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;msg.setSender(stripResource(message.getFrom()));&#xA;&#x9;&#x9;msg.setRecipient(message.getTo());&#xA;&#x9;&#x9;msg.setContent(message.getBody());&#xA;&#x9;&#x9;setRecvMsg(msg);&#xA;&#x9;}&#xA;&#xA;&#x9;public void incomingPresence(com.jabberwookie.ns.jabber.Presence presence) {&#xA;&#x9;&#x9;String type = presence.getType();&#xA;&#x9;&#x9;if (type == null)&#xA;&#x9;&#x9;&#x9;type = &quot;&quot;;&#xA;&#x9;&#x9;if (type.equals(Const.SUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to subscribe to our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.SUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to subscribe to your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to unsubscribe from our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.UNSUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to unsubscribe from your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.SUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Subscribed to: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unsubscribed from: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNAVAILABLE)) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;c.setStatus(&quot;offline&quot;);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Received presence: &quot; + presence);&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;String from = presence.getTo();&#xA;&#x9;&#x9;presence.setTo(presence.getFrom());&#xA;&#x9;&#x9;presence.setFrom(from);&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;protected abstract void connect(java.lang.String host)&#xA;&#x9;&#x9;&#x9;throws java.io.IOException;&#xA;&#xA;&#x9;public java.lang.String getUid() {&#xA;&#x9;&#x9;return uid;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setUid(java.lang.String uid) {&#xA;&#x9;&#x9;this.uid = uid;&#xA;&#x9;}&#xA;&#xA;&#x9;public com.jabberwookie.Client2Server getConnection() {&#xA;&#x9;&#x9;return connection;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setConnection(com.jabberwookie.Client2Server connection) {&#xA;&#x9;&#x9;this.connection = connection;&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="10857">
    <package lexicalForm="package im.networking.jabber;" length="29">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.jabber" startPosition="8" length="20" fullyQualifiedName="im.networking.jabber">
        <name lexicalForm="jabber" startPosition="22" length="6" fullyQualifiedName="jabber" identifier="jabber"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="8" length="13" fullyQualifiedName="im.networking">
          <name lexicalForm="networking" startPosition="11" length="10" fullyQualifiedName="networking" identifier="networking"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
        </qualifier>
      </name>
    </package>
    <imports lexicalForm="import com.jabberwookie.*;" startPosition="31" length="26" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="38" length="16" fullyQualifiedName="com.jabberwookie">
        <name lexicalForm="jabberwookie" startPosition="42" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="38" length="3" fullyQualifiedName="com" identifier="com"/>
      </name>
    </imports>
    <imports lexicalForm="import com.jabberwookie.ns.jabber.*;" startPosition="58" length="36" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns.jabber" startPosition="65" length="26" fullyQualifiedName="com.jabberwookie.ns.jabber">
        <name lexicalForm="jabber" startPosition="85" length="6" fullyQualifiedName="jabber" identifier="jabber"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns" startPosition="65" length="19" fullyQualifiedName="com.jabberwookie.ns">
          <name lexicalForm="ns" startPosition="82" length="2" fullyQualifiedName="ns" identifier="ns"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="65" length="16" fullyQualifiedName="com.jabberwookie">
            <name lexicalForm="jabberwookie" startPosition="69" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="65" length="3" fullyQualifiedName="com" identifier="com"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import com.jabberwookie.ns.jabber.iq.*;" startPosition="95" length="39" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns.jabber.iq" startPosition="102" length="29" fullyQualifiedName="com.jabberwookie.ns.jabber.iq">
        <name lexicalForm="iq" startPosition="129" length="2" fullyQualifiedName="iq" identifier="iq"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns.jabber" startPosition="102" length="26" fullyQualifiedName="com.jabberwookie.ns.jabber">
          <name lexicalForm="jabber" startPosition="122" length="6" fullyQualifiedName="jabber" identifier="jabber"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns" startPosition="102" length="19" fullyQualifiedName="com.jabberwookie.ns">
            <name lexicalForm="ns" startPosition="119" length="2" fullyQualifiedName="ns" identifier="ns"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="102" length="16" fullyQualifiedName="com.jabberwookie">
              <name lexicalForm="jabberwookie" startPosition="106" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="102" length="3" fullyQualifiedName="com" identifier="com"/>
            </qualifier>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public abstract class Jabber extends im.networking.Network&#xA;&#x9;&#x9;implements&#xA;&#x9;&#x9;&#x9;com.jabberwookie.MessageListener,&#xA;&#x9;&#x9;&#x9;com.jabberwookie.PresenceListener,&#xA;&#x9;&#x9;&#x9;com.jabberwookie.IQListener {&#xA;&#x9;public abstract class State {&#xA;&#x9;&#x9;public void login(java.lang.String uid, java.lang.String pwd) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void logout() {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void addContact(im.model.Contact c) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void removeContact(im.model.Contact c) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void send(im.model.Message msg) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public class ConnectedState extends State {&#xA;&#x9;&#x9;public void logout() {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void addContact(im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;addContactAsync(c);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void removeContact(im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;removeContactAsync(c);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void send(im.model.Message msg) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;sendAsync(msg);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void addContactAsync(final im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void removeContactAsync(final im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void sendAsync(final im.model.Message msg) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public class DisconnectedState extends State {&#xA;&#x9;&#x9;public void login(final java.lang.String uid, final java.lang.String pwd) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;private State state = new DisconnectedState();&#xA;&#xA;&#x9;private java.lang.String uid = null;&#xA;&#xA;&#x9;private com.jabberwookie.Client2Server connection;&#xA;&#xA;&#x9;public Jabber() {&#xA;&#x9;&#x9;setName(&quot;Jabber&quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;public void login(java.lang.String uid, java.lang.String pwd) {&#xA;&#x9;&#x9;this.uid = uid;&#xA;&#x9;&#x9;state.login(uid, pwd);&#xA;&#x9;}&#xA;&#xA;&#x9;public void logout() {&#xA;&#x9;&#x9;state.logout();&#xA;&#x9;}&#xA;&#xA;&#x9;public void addContact(im.model.Contact c) {&#xA;&#x9;&#x9;state.addContact(c);&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeContact(im.model.Contact c) {&#xA;&#x9;&#x9;state.removeContact(c);&#xA;&#x9;}&#xA;&#xA;&#x9;public void send(im.model.Message msg) {&#xA;&#x9;&#x9;state.send(msg);&#xA;&#x9;}&#xA;&#xA;&#x9;private boolean registerUser(java.lang.String user, java.lang.String pwd) {&#xA;&#x9;&#x9;System.out.println(&quot;Registering &quot; + user + &quot; at &quot;&#xA;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable info = IQRegister&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getRequiredRegInfo(getConnection());&#xA;&#x9;&#x9;&#x9;String key;&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;key = (String) e.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;if (key.equals(Const.USERNAME))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.PASSWORD))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, pwd);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;Chunk chunk = getConnection().send(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRegister.createSetRequest(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().getServerName(), info), 30000);&#xA;&#x9;&#x9;&#x9;return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#xA;&#x9;private java.lang.String stripResource(java.lang.String jid) {&#xA;&#x9;&#x9;if (uid.equals(jid)) {&#xA;&#x9;&#x9;&#x9;return jid;&#xA;&#x9;&#x9;} else { // strip resource bit if remote user&#xA;&#x9;&#x9;&#x9;java.util.Vector strip = com.ssttr.util.Strings.tokenize(jid, '/');&#xA;&#x9;&#x9;&#x9;return (String) strip.elementAt(0);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void incomingIQ(com.jabberwookie.ns.jabber.IQ iq) {&#xA;&#x9;&#x9;java.util.Enumeration children = iq.getChildren().elements();&#xA;&#x9;&#x9;while (children.hasMoreElements()) {&#xA;&#x9;&#x9;&#x9;com.ssttr.xml.XMLElement el = (com.ssttr.xml.XMLElement) children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;if (el instanceof IQRoster) {&#xA;&#x9;&#x9;&#x9;&#x9;for (java.util.Enumeration items = el.enumerateChildren(); items&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster.Item item = (IQRoster.Item) items.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Roster Item: &quot; + item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setUserId(item.getJID());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setName(item.getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Unknown iq element: &quot; + el);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void incomingMessage(com.jabberwookie.ns.jabber.Message message) {&#xA;&#x9;&#x9;System.out.println(&quot;Message: &quot; + message);&#xA;&#x9;&#x9;if (message.getBody() == null) {&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;msg.setSender(stripResource(message.getFrom()));&#xA;&#x9;&#x9;msg.setRecipient(message.getTo());&#xA;&#x9;&#x9;msg.setContent(message.getBody());&#xA;&#x9;&#x9;setRecvMsg(msg);&#xA;&#x9;}&#xA;&#xA;&#x9;public void incomingPresence(com.jabberwookie.ns.jabber.Presence presence) {&#xA;&#x9;&#x9;String type = presence.getType();&#xA;&#x9;&#x9;if (type == null)&#xA;&#x9;&#x9;&#x9;type = &quot;&quot;;&#xA;&#x9;&#x9;if (type.equals(Const.SUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to subscribe to our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.SUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to subscribe to your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to unsubscribe from our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.UNSUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to unsubscribe from your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.SUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Subscribed to: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unsubscribed from: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNAVAILABLE)) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;c.setStatus(&quot;offline&quot;);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Received presence: &quot; + presence);&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;String from = presence.getTo();&#xA;&#x9;&#x9;presence.setTo(presence.getFrom());&#xA;&#x9;&#x9;presence.setFrom(from);&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;protected abstract void connect(java.lang.String host)&#xA;&#x9;&#x9;&#x9;throws java.io.IOException;&#xA;&#xA;&#x9;public java.lang.String getUid() {&#xA;&#x9;&#x9;return uid;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setUid(java.lang.String uid) {&#xA;&#x9;&#x9;this.uid = uid;&#xA;&#x9;}&#xA;&#xA;&#x9;public com.jabberwookie.Client2Server getConnection() {&#xA;&#x9;&#x9;return connection;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setConnection(com.jabberwookie.Client2Server connection) {&#xA;&#x9;&#x9;this.connection = connection;&#xA;&#x9;}&#xA;&#xA;}" startPosition="136" length="10720" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.13/@types.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.14/@body/@statements.1/@body/@statements.1/@thenStatement/@statements.0/@body/@statements.3/@expression/@arguments.0 //@compilationUnits.14/@types.0/@superclassType/@name/@name //@compilationUnits.14/@types.0/@superclassType/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression/@qualifier //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.17/@expression/@qualifier //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.5/@expression/@qualifier //@compilationUnits.13/@types.0/@bodyDeclarations.7/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.7/@expression/@arguments.0/@qualifier //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.1/@expression/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.8/@expression/@arguments.0/@qualifier //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.9/@expression/@arguments.0/@qualifier //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression/@qualifier //@compilationUnits.13/@types.0/@bodyDeclarations.19/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression/@qualifier //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.17/@body/@statements.0/@expression/@leftHandSide/@expression/@qualifier //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.5/@body/@statements.0/@expression/@leftHandSide/@expression/@qualifier //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.5/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.16/@body/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.2/@expression/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.21/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.8/@expression/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.17/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.17/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.9/@expression/@arguments.0 //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.5/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.7/@expression/@arguments.0" resolvedTypeReferences="//@compilationUnits.14/@types.0/@superclassType">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="136" length="6" public="true"/>
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="143" length="8" abstract="true"/>
      <bodyDeclarations xsi:type="JavaAST:TypeDeclaration" lexicalForm="public abstract class State {&#xA;&#x9;&#x9;public void login(java.lang.String uid, java.lang.String pwd) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void logout() {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void addContact(im.model.Contact c) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void removeContact(im.model.Contact c) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void send(im.model.Message msg) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}" startPosition="317" length="293" memberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.13/@types.0/@bodyDeclarations.8/@body/@statements.0/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.5/@body/@statements.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.11/@body/@statements.0/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@superclassType/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@body/@statements.0/@thenStatement/@statements.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.7/@body/@statements.1/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.17/@body/@statements.0/@expression/@leftHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.17/@body/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.2/@superclassType/@name //@compilationUnits.13/@types.0/@bodyDeclarations.9/@body/@statements.0/@expression/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.17/@body/@statements.0/@expression //@compilationUnits.13/@types.0/@bodyDeclarations.3/@fragments.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.5/@body/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.5/@body/@statements.0/@expression/@leftHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.13/@types.0/@bodyDeclarations.0/@name //@compilationUnits.13/@types.0/@bodyDeclarations.3/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression" resolvedTypeReferences="//@compilationUnits.13/@types.0/@bodyDeclarations.2/@superclassType //@compilationUnits.13/@types.0/@bodyDeclarations.1/@superclassType //@compilationUnits.13/@types.0/@bodyDeclarations.3/@type">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="317" length="6" public="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="324" length="8" abstract="true"/>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void login(java.lang.String uid, java.lang.String pwd) {&#xA;&#xA;&#x9;&#x9;}" startPosition="349" length="68">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="349" length="6" public="true"/>
          <body lexicalForm="{&#xA;&#xA;&#x9;&#x9;}" startPosition="411" length="6"/>
          <name lexicalForm="login" startPosition="361" length="5" fullyQualifiedName="login" identifier="login" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="356" length="4" code="void"/>
          <parameters lexicalForm="java.lang.String uid" startPosition="367" length="20">
            <name lexicalForm="uid" startPosition="384" length="3" fullyQualifiedName="uid" identifier="uid" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="367" length="16">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="367" length="16" fullyQualifiedName="java.lang.String">
                <name lexicalForm="String" startPosition="377" length="6" fullyQualifiedName="String" identifier="String"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="367" length="9" fullyQualifiedName="java.lang">
                  <name lexicalForm="lang" startPosition="372" length="4" fullyQualifiedName="lang" identifier="lang"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="367" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </parameters>
          <parameters lexicalForm="java.lang.String pwd" startPosition="389" length="20">
            <name lexicalForm="pwd" startPosition="406" length="3" fullyQualifiedName="pwd" identifier="pwd" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="389" length="16">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="389" length="16" fullyQualifiedName="java.lang.String">
                <name lexicalForm="String" startPosition="399" length="6" fullyQualifiedName="String" identifier="String"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="389" length="9" fullyQualifiedName="java.lang">
                  <name lexicalForm="lang" startPosition="394" length="4" fullyQualifiedName="lang" identifier="lang"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="389" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void logout() {&#xA;&#xA;&#x9;&#x9;}" startPosition="421" length="27">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="421" length="6" public="true"/>
          <body lexicalForm="{&#xA;&#xA;&#x9;&#x9;}" startPosition="442" length="6"/>
          <name lexicalForm="logout" startPosition="433" length="6" fullyQualifiedName="logout" identifier="logout" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="428" length="4" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addContact(im.model.Contact c) {&#xA;&#xA;&#x9;&#x9;}" startPosition="452" length="49">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="452" length="6" public="true"/>
          <body lexicalForm="{&#xA;&#xA;&#x9;&#x9;}" startPosition="495" length="6"/>
          <name lexicalForm="addContact" startPosition="464" length="10" fullyQualifiedName="addContact" identifier="addContact" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="459" length="4" code="void"/>
          <parameters lexicalForm="im.model.Contact c" startPosition="475" length="18">
            <name lexicalForm="c" startPosition="492" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="475" length="16" resolvedType="//@compilationUnits.7/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="475" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                <name lexicalForm="Contact" startPosition="484" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="475" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="478" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="475" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeContact(im.model.Contact c) {&#xA;&#xA;&#x9;&#x9;}" startPosition="505" length="52">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="505" length="6" public="true"/>
          <body lexicalForm="{&#xA;&#xA;&#x9;&#x9;}" startPosition="551" length="6"/>
          <name lexicalForm="removeContact" startPosition="517" length="13" fullyQualifiedName="removeContact" identifier="removeContact" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="512" length="4" code="void"/>
          <parameters lexicalForm="im.model.Contact c" startPosition="531" length="18">
            <name lexicalForm="c" startPosition="548" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="531" length="16" resolvedType="//@compilationUnits.7/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="531" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                <name lexicalForm="Contact" startPosition="540" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="531" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="534" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="531" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void send(im.model.Message msg) {&#xA;&#xA;&#x9;&#x9;}" startPosition="561" length="45">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="561" length="6" public="true"/>
          <body lexicalForm="{&#xA;&#xA;&#x9;&#x9;}" startPosition="600" length="6"/>
          <name lexicalForm="send" startPosition="573" length="4" fullyQualifiedName="send" identifier="send" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="568" length="4" code="void"/>
          <parameters lexicalForm="im.model.Message msg" startPosition="578" length="20">
            <name lexicalForm="msg" startPosition="595" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="578" length="16" resolvedType="//@compilationUnits.10/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="578" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                <name lexicalForm="Message" startPosition="587" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="578" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="581" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="578" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
          </parameters>
        </bodyDeclarations>
        <name lexicalForm="State" startPosition="339" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="State" identifier="State" declaration="true"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class ConnectedState extends State {&#xA;&#x9;&#x9;public void logout() {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void addContact(im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;addContactAsync(c);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void removeContact(im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;removeContactAsync(c);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void send(im.model.Message msg) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;sendAsync(msg);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void addContactAsync(final im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void removeContactAsync(final im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void sendAsync(final im.model.Message msg) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}" startPosition="613" length="2894" memberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.17/@body/@statements.0/@expression/@rightHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.17/@body/@statements.0/@expression/@rightHandSide/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@name" resolvedTypeReferences="//@compilationUnits.13/@types.0/@bodyDeclarations.2/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.17/@body/@statements.0/@expression/@rightHandSide/@type">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="613" length="6" public="true"/>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void logout() {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}" startPosition="659" length="525">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="659" length="6" public="true"/>
          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}" startPosition="680" length="504">
            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();" startPosition="685" length="495">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start()" startPosition="685" length="494">
                <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="685" length="486">
                  <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="698" length="473">
                    <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="704" length="462">
                      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="704" length="6" public="true"/>
                      <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="722" length="444">
                        <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="729" length="431">
                          <catchClauses lexicalForm="catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="1065" length="95">
                            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="1095" length="65">
                              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="im.InstantMessagingClient.getInstance().report(e);" startPosition="1103" length="50">
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance().report(e)" startPosition="1103" length="49">
                                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1150" length="1" fullyQualifiedName="e" identifier="e"/>
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="1103" length="39" resolvedType="//@compilationUnits.2/@types.0">
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="1103" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                                      <name lexicalForm="InstantMessagingClient" startPosition="1106" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1103" length="2" fullyQualifiedName="im" identifier="im"/>
                                    </expression>
                                    <name lexicalForm="getInstance" startPosition="1129" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                                  </expression>
                                  <name lexicalForm="report" startPosition="1143" length="6" fullyQualifiedName="report" identifier="report"/>
                                </expression>
                              </statements>
                            </body>
                            <exception lexicalForm="java.io.IOException e" startPosition="1072" length="21">
                              <name lexicalForm="e" startPosition="1092" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="1072" length="19">
                                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="1072" length="19" fullyQualifiedName="java.io.IOException">
                                  <name lexicalForm="IOException" startPosition="1080" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="1072" length="7" fullyQualifiedName="java.io">
                                    <name lexicalForm="io" startPosition="1077" length="2" fullyQualifiedName="io" identifier="io"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1072" length="4" fullyQualifiedName="java" identifier="java"/>
                                  </qualifier>
                                </name>
                              </type>
                            </exception>
                          </catchClauses>
                          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence p = new Presence();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setType(Const.UNAVAILABLE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(p);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().close();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="733" length="331">
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());" startPosition="741" length="88">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName())" startPosition="741" length="87">
                                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Closing connection for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName()" startPosition="760" length="67" operator="+">
                                  <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Closing connection for &quot;" startPosition="760" length="25" escapedValue="&quot;Closing connection for &quot;" literalValue="Closing connection for "/>
                                  <rightOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().getServerName()" startPosition="796" length="31">
                                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="796" length="15">
                                      <name lexicalForm="getConnection" startPosition="796" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                    </expression>
                                    <name lexicalForm="getServerName" startPosition="812" length="13" fullyQualifiedName="getServerName" identifier="getServerName"/>
                                  </rightOperand>
                                </arguments>
                                <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="741" length="10" fullyQualifiedName="System.out">
                                  <name lexicalForm="out" startPosition="748" length="3" fullyQualifiedName="out" identifier="out"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="741" length="6" fullyQualifiedName="System" identifier="System"/>
                                </expression>
                                <name lexicalForm="println" startPosition="752" length="7" fullyQualifiedName="println" identifier="println"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Presence p = new Presence();" startPosition="836" length="28">
                              <fragments lexicalForm="p = new Presence()" startPosition="845" length="18">
                                <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Presence()" startPosition="849" length="14">
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Presence" startPosition="853" length="8">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Presence" startPosition="853" length="8" fullyQualifiedName="Presence" identifier="Presence"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="p" startPosition="845" length="1" fullyQualifiedName="p" identifier="p" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="Presence" startPosition="836" length="8">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="Presence" startPosition="836" length="8" fullyQualifiedName="Presence" identifier="Presence"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="p.setType(Const.UNAVAILABLE);" startPosition="871" length="29">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="p.setType(Const.UNAVAILABLE)" startPosition="871" length="28">
                                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.UNAVAILABLE" startPosition="881" length="17" fullyQualifiedName="Const.UNAVAILABLE">
                                  <name lexicalForm="UNAVAILABLE" startPosition="887" length="11" fullyQualifiedName="UNAVAILABLE" identifier="UNAVAILABLE"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="881" length="5" fullyQualifiedName="Const" identifier="Const"/>
                                </arguments>
                                <expression xsi:type="JavaAST:SimpleName" lexicalForm="p" startPosition="871" length="1" fullyQualifiedName="p" identifier="p"/>
                                <name lexicalForm="setType" startPosition="873" length="7" fullyQualifiedName="setType" identifier="setType"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().send(p);" startPosition="907" length="24">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().send(p)" startPosition="907" length="23">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="p" startPosition="928" length="1" fullyQualifiedName="p" identifier="p"/>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="907" length="15">
                                  <name lexicalForm="getConnection" startPosition="907" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="send" startPosition="923" length="4" fullyQualifiedName="send" identifier="send"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().close();" startPosition="938" length="24">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().close()" startPosition="938" length="23">
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="938" length="15">
                                  <name lexicalForm="getConnection" startPosition="938" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="close" startPosition="954" length="5" fullyQualifiedName="close" identifier="close"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:SynchronizedStatement" lexicalForm="synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="969" length="88">
                              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="996" length="61">
                                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="Jabber.this.state = new DisconnectedState();" startPosition="1005" length="44">
                                  <expression xsi:type="JavaAST:Assignment" lexicalForm="Jabber.this.state = new DisconnectedState()" startPosition="1005" length="43" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" operator="=">
                                    <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="Jabber.this.state" startPosition="1005" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0">
                                      <expression xsi:type="JavaAST:ThisExpression" lexicalForm="Jabber.this" startPosition="1005" length="11" resolvedType="//@compilationUnits.13/@types.0">
                                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Jabber" startPosition="1005" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
                                      </expression>
                                      <name lexicalForm="state" startPosition="1017" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state"/>
                                    </leftHandSide>
                                    <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new DisconnectedState()" startPosition="1025" length="23" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2">
                                      <type xsi:type="JavaAST:SimpleType" lexicalForm="DisconnectedState" startPosition="1029" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2">
                                        <name xsi:type="JavaAST:SimpleName" lexicalForm="DisconnectedState" startPosition="1029" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2" fullyQualifiedName="DisconnectedState" identifier="DisconnectedState"/>
                                      </type>
                                    </rightHandSide>
                                  </expression>
                                </statements>
                              </body>
                              <expression xsi:type="JavaAST:ThisExpression" lexicalForm="Jabber.this" startPosition="983" length="11" resolvedType="//@compilationUnits.13/@types.0">
                                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Jabber" startPosition="983" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
                              </expression>
                            </statements>
                          </body>
                        </statements>
                      </body>
                      <name lexicalForm="run" startPosition="716" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                      <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="711" length="4" code="void"/>
                    </bodyDeclarations>
                  </anonymousClassDeclaration>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Thread" startPosition="689" length="6">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Thread" startPosition="689" length="6" fullyQualifiedName="Thread" identifier="Thread"/>
                  </type>
                </expression>
                <name lexicalForm="start" startPosition="1172" length="5" fullyQualifiedName="start" identifier="start"/>
              </expression>
            </statements>
          </body>
          <name lexicalForm="logout" startPosition="671" length="6" fullyQualifiedName="logout" identifier="logout" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="666" length="4" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addContact(im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;addContactAsync(c);&#xA;&#x9;&#x9;}" startPosition="1188" length="178">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1188" length="6" public="true"/>
          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;addContactAsync(c);&#xA;&#x9;&#x9;}" startPosition="1231" length="135">
            <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="1236" length="103">
              <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!getConnection().isConnected()" startPosition="1240" length="30" operator="!">
                <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().isConnected()" startPosition="1241" length="29">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="1241" length="15">
                    <name lexicalForm="getConnection" startPosition="1241" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                  </expression>
                  <name lexicalForm="isConnected" startPosition="1257" length="11" fullyQualifiedName="isConnected" identifier="isConnected"/>
                </operand>
              </expression>
              <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="1272" length="67">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="Jabber.this.state = new DisconnectedState();" startPosition="1278" length="44">
                  <expression xsi:type="JavaAST:Assignment" lexicalForm="Jabber.this.state = new DisconnectedState()" startPosition="1278" length="43" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" operator="=">
                    <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="Jabber.this.state" startPosition="1278" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0">
                      <expression xsi:type="JavaAST:ThisExpression" lexicalForm="Jabber.this" startPosition="1278" length="11" resolvedType="//@compilationUnits.13/@types.0">
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Jabber" startPosition="1278" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
                      </expression>
                      <name lexicalForm="state" startPosition="1290" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state"/>
                    </leftHandSide>
                    <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new DisconnectedState()" startPosition="1298" length="23" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2">
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="DisconnectedState" startPosition="1302" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="DisconnectedState" startPosition="1302" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2" fullyQualifiedName="DisconnectedState" identifier="DisconnectedState"/>
                      </type>
                    </rightHandSide>
                  </expression>
                </statements>
                <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return;" startPosition="1327" length="7"/>
              </thenStatement>
            </statements>
            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="addContactAsync(c);" startPosition="1343" length="19">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="addContactAsync(c)" startPosition="1343" length="18">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1359" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                <name lexicalForm="addContactAsync" startPosition="1343" length="15" fullyQualifiedName="addContactAsync" identifier="addContactAsync"/>
              </expression>
            </statements>
          </body>
          <name lexicalForm="addContact" startPosition="1200" length="10" fullyQualifiedName="addContact" identifier="addContact" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1195" length="4" code="void"/>
          <parameters lexicalForm="im.model.Contact c" startPosition="1211" length="18">
            <name lexicalForm="c" startPosition="1228" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1211" length="16" resolvedType="//@compilationUnits.7/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1211" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                <name lexicalForm="Contact" startPosition="1220" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1211" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="1214" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1211" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeContact(im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;removeContactAsync(c);&#xA;&#x9;&#x9;}" startPosition="1370" length="184">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1370" length="6" public="true"/>
          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;removeContactAsync(c);&#xA;&#x9;&#x9;}" startPosition="1416" length="138">
            <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="1421" length="103">
              <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!getConnection().isConnected()" startPosition="1425" length="30" operator="!">
                <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().isConnected()" startPosition="1426" length="29">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="1426" length="15">
                    <name lexicalForm="getConnection" startPosition="1426" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                  </expression>
                  <name lexicalForm="isConnected" startPosition="1442" length="11" fullyQualifiedName="isConnected" identifier="isConnected"/>
                </operand>
              </expression>
              <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="1457" length="67">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="Jabber.this.state = new DisconnectedState();" startPosition="1463" length="44">
                  <expression xsi:type="JavaAST:Assignment" lexicalForm="Jabber.this.state = new DisconnectedState()" startPosition="1463" length="43" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" operator="=">
                    <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="Jabber.this.state" startPosition="1463" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0">
                      <expression xsi:type="JavaAST:ThisExpression" lexicalForm="Jabber.this" startPosition="1463" length="11" resolvedType="//@compilationUnits.13/@types.0">
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Jabber" startPosition="1463" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
                      </expression>
                      <name lexicalForm="state" startPosition="1475" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state"/>
                    </leftHandSide>
                    <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new DisconnectedState()" startPosition="1483" length="23" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2">
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="DisconnectedState" startPosition="1487" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="DisconnectedState" startPosition="1487" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2" fullyQualifiedName="DisconnectedState" identifier="DisconnectedState"/>
                      </type>
                    </rightHandSide>
                  </expression>
                </statements>
                <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return;" startPosition="1512" length="7"/>
              </thenStatement>
            </statements>
            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="removeContactAsync(c);" startPosition="1528" length="22">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="removeContactAsync(c)" startPosition="1528" length="21">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1547" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                <name lexicalForm="removeContactAsync" startPosition="1528" length="18" fullyQualifiedName="removeContactAsync" identifier="removeContactAsync"/>
              </expression>
            </statements>
          </body>
          <name lexicalForm="removeContact" startPosition="1382" length="13" fullyQualifiedName="removeContact" identifier="removeContact" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1377" length="4" code="void"/>
          <parameters lexicalForm="im.model.Contact c" startPosition="1396" length="18">
            <name lexicalForm="c" startPosition="1413" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1396" length="16" resolvedType="//@compilationUnits.7/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1396" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                <name lexicalForm="Contact" startPosition="1405" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1396" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="1399" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1396" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void send(im.model.Message msg) {&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;sendAsync(msg);&#xA;&#x9;&#x9;}" startPosition="1558" length="170">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1558" length="6" public="true"/>
          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;sendAsync(msg);&#xA;&#x9;&#x9;}" startPosition="1597" length="131">
            <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!getConnection().isConnected()) {&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="1602" length="103">
              <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!getConnection().isConnected()" startPosition="1606" length="30" operator="!">
                <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().isConnected()" startPosition="1607" length="29">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="1607" length="15">
                    <name lexicalForm="getConnection" startPosition="1607" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                  </expression>
                  <name lexicalForm="isConnected" startPosition="1623" length="11" fullyQualifiedName="isConnected" identifier="isConnected"/>
                </operand>
              </expression>
              <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new DisconnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;&#x9;}" startPosition="1638" length="67">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="Jabber.this.state = new DisconnectedState();" startPosition="1644" length="44">
                  <expression xsi:type="JavaAST:Assignment" lexicalForm="Jabber.this.state = new DisconnectedState()" startPosition="1644" length="43" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" operator="=">
                    <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="Jabber.this.state" startPosition="1644" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0">
                      <expression xsi:type="JavaAST:ThisExpression" lexicalForm="Jabber.this" startPosition="1644" length="11" resolvedType="//@compilationUnits.13/@types.0">
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Jabber" startPosition="1644" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
                      </expression>
                      <name lexicalForm="state" startPosition="1656" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state"/>
                    </leftHandSide>
                    <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new DisconnectedState()" startPosition="1664" length="23" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2">
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="DisconnectedState" startPosition="1668" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="DisconnectedState" startPosition="1668" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2" fullyQualifiedName="DisconnectedState" identifier="DisconnectedState"/>
                      </type>
                    </rightHandSide>
                  </expression>
                </statements>
                <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return;" startPosition="1693" length="7"/>
              </thenStatement>
            </statements>
            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="sendAsync(msg);" startPosition="1709" length="15">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="sendAsync(msg)" startPosition="1709" length="14">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="1719" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                <name lexicalForm="sendAsync" startPosition="1709" length="9" fullyQualifiedName="sendAsync" identifier="sendAsync"/>
              </expression>
            </statements>
          </body>
          <name lexicalForm="send" startPosition="1570" length="4" fullyQualifiedName="send" identifier="send" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1565" length="4" code="void"/>
          <parameters lexicalForm="im.model.Message msg" startPosition="1575" length="20">
            <name lexicalForm="msg" startPosition="1592" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="1575" length="16" resolvedType="//@compilationUnits.10/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="1575" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                <name lexicalForm="Message" startPosition="1584" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1575" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="1578" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1575" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void addContactAsync(final im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}" startPosition="1732" length="592">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="1732" length="7" private="true"/>
          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}" startPosition="1787" length="537">
            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();" startPosition="1792" length="528">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start()" startPosition="1792" length="527">
                <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="1792" length="519">
                  <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="1805" length="506">
                    <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1811" length="495">
                      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1811" length="6" public="true"/>
                      <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1829" length="477">
                        <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="1836" length="464">
                          <catchClauses lexicalForm="catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="2205" length="95">
                            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="2235" length="65">
                              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="im.InstantMessagingClient.getInstance().report(e);" startPosition="2243" length="50">
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance().report(e)" startPosition="2243" length="49">
                                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2290" length="1" fullyQualifiedName="e" identifier="e"/>
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="2243" length="39" resolvedType="//@compilationUnits.2/@types.0">
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="2243" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                                      <name lexicalForm="InstantMessagingClient" startPosition="2246" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2243" length="2" fullyQualifiedName="im" identifier="im"/>
                                    </expression>
                                    <name lexicalForm="getInstance" startPosition="2269" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                                  </expression>
                                  <name lexicalForm="report" startPosition="2283" length="6" fullyQualifiedName="report" identifier="report"/>
                                </expression>
                              </statements>
                            </body>
                            <exception lexicalForm="java.io.IOException e" startPosition="2212" length="21">
                              <name lexicalForm="e" startPosition="2232" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="2212" length="19">
                                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="2212" length="19" fullyQualifiedName="java.io.IOException">
                                  <name lexicalForm="IOException" startPosition="2220" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="2212" length="7" fullyQualifiedName="java.io">
                                    <name lexicalForm="io" startPosition="2217" length="2" fullyQualifiedName="io" identifier="io"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="2212" length="4" fullyQualifiedName="java" identifier="java"/>
                                  </qualifier>
                                </name>
                              </type>
                            </exception>
                          </catchClauses>
                          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Adding contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId(), c.getName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="1840" length="364">
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE);" startPosition="1848" length="73">
                              <fragments lexicalForm="presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE)" startPosition="1857" length="63">
                                <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.SUBSCRIBE)" startPosition="1868" length="52">
                                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getUserId()" startPosition="1881" length="13">
                                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1881" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                                    <name lexicalForm="getUserId" startPosition="1883" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                                  </arguments>
                                  <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.SUBSCRIBE" startPosition="1904" length="15" fullyQualifiedName="Const.SUBSCRIBE">
                                    <name lexicalForm="SUBSCRIBE" startPosition="1910" length="9" fullyQualifiedName="SUBSCRIBE" identifier="SUBSCRIBE"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="1904" length="5" fullyQualifiedName="Const" identifier="Const"/>
                                  </arguments>
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Presence" startPosition="1872" length="8">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Presence" startPosition="1872" length="8" fullyQualifiedName="Presence" identifier="Presence"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="presence" startPosition="1857" length="8" fullyQualifiedName="presence" identifier="presence" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="Presence" startPosition="1848" length="8">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="Presence" startPosition="1848" length="8" fullyQualifiedName="Presence" identifier="Presence"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Adding contact &quot; + presence);" startPosition="1928" length="49">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Adding contact &quot; + presence)" startPosition="1928" length="48">
                                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Adding contact &quot; + presence" startPosition="1947" length="28" operator="+">
                                  <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Adding contact &quot;" startPosition="1947" length="17" escapedValue="&quot;Adding contact &quot;" literalValue="Adding contact "/>
                                  <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="1967" length="8" fullyQualifiedName="presence" identifier="presence"/>
                                </arguments>
                                <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="1928" length="10" fullyQualifiedName="System.out">
                                  <name lexicalForm="out" startPosition="1935" length="3" fullyQualifiedName="out" identifier="out"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="1928" length="6" fullyQualifiedName="System" identifier="System"/>
                                </expression>
                                <name lexicalForm="println" startPosition="1939" length="7" fullyQualifiedName="println" identifier="println"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().send(presence);" startPosition="1984" length="31">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().send(presence)" startPosition="1984" length="30">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="2005" length="8" fullyQualifiedName="presence" identifier="presence"/>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="1984" length="15">
                                  <name lexicalForm="getConnection" startPosition="1984" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="send" startPosition="2000" length="4" fullyQualifiedName="send" identifier="send"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="IQRoster roster = new IQRoster();" startPosition="2022" length="33">
                              <fragments lexicalForm="roster = new IQRoster()" startPosition="2031" length="23">
                                <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new IQRoster()" startPosition="2040" length="14">
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="IQRoster" startPosition="2044" length="8">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="IQRoster" startPosition="2044" length="8" fullyQualifiedName="IQRoster" identifier="IQRoster"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="roster" startPosition="2031" length="6" fullyQualifiedName="roster" identifier="roster" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="IQRoster" startPosition="2022" length="8">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="IQRoster" startPosition="2022" length="8" fullyQualifiedName="IQRoster" identifier="IQRoster"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="roster.addItem(c.getUserId(), c.getName());" startPosition="2062" length="43">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="roster.addItem(c.getUserId(), c.getName())" startPosition="2062" length="42">
                                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getUserId()" startPosition="2077" length="13">
                                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2077" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                                  <name lexicalForm="getUserId" startPosition="2079" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                                </arguments>
                                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getName()" startPosition="2092" length="11">
                                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2092" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                                  <name lexicalForm="getName" startPosition="2094" length="7" fullyQualifiedName="getName" identifier="getName"/>
                                </arguments>
                                <expression xsi:type="JavaAST:SimpleName" lexicalForm="roster" startPosition="2062" length="6" fullyQualifiedName="roster" identifier="roster"/>
                                <name lexicalForm="addItem" startPosition="2069" length="7" fullyQualifiedName="addItem" identifier="addItem"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="IQ iq = new IQ(Const.SET);" startPosition="2112" length="26">
                              <fragments lexicalForm="iq = new IQ(Const.SET)" startPosition="2115" length="22">
                                <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new IQ(Const.SET)" startPosition="2120" length="17">
                                  <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.SET" startPosition="2127" length="9" fullyQualifiedName="Const.SET">
                                    <name lexicalForm="SET" startPosition="2133" length="3" fullyQualifiedName="SET" identifier="SET"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="2127" length="5" fullyQualifiedName="Const" identifier="Const"/>
                                  </arguments>
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="IQ" startPosition="2124" length="2">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="IQ" startPosition="2124" length="2" fullyQualifiedName="IQ" identifier="IQ"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="iq" startPosition="2115" length="2" fullyQualifiedName="iq" identifier="iq" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="IQ" startPosition="2112" length="2">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="IQ" startPosition="2112" length="2" fullyQualifiedName="IQ" identifier="IQ"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="iq.addChild(roster);" startPosition="2145" length="20">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="iq.addChild(roster)" startPosition="2145" length="19">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="roster" startPosition="2157" length="6" fullyQualifiedName="roster" identifier="roster"/>
                                <expression xsi:type="JavaAST:SimpleName" lexicalForm="iq" startPosition="2145" length="2" fullyQualifiedName="iq" identifier="iq"/>
                                <name lexicalForm="addChild" startPosition="2148" length="8" fullyQualifiedName="addChild" identifier="addChild"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().send(iq);" startPosition="2172" length="25">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().send(iq)" startPosition="2172" length="24">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="iq" startPosition="2193" length="2" fullyQualifiedName="iq" identifier="iq"/>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="2172" length="15">
                                  <name lexicalForm="getConnection" startPosition="2172" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="send" startPosition="2188" length="4" fullyQualifiedName="send" identifier="send"/>
                              </expression>
                            </statements>
                          </body>
                        </statements>
                      </body>
                      <name lexicalForm="run" startPosition="1823" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                      <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1818" length="4" code="void"/>
                    </bodyDeclarations>
                  </anonymousClassDeclaration>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Thread" startPosition="1796" length="6">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Thread" startPosition="1796" length="6" fullyQualifiedName="Thread" identifier="Thread"/>
                  </type>
                </expression>
                <name lexicalForm="start" startPosition="2312" length="5" fullyQualifiedName="start" identifier="start"/>
              </expression>
            </statements>
          </body>
          <name lexicalForm="addContactAsync" startPosition="1745" length="15" fullyQualifiedName="addContactAsync" identifier="addContactAsync" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1740" length="4" code="void"/>
          <parameters lexicalForm="final im.model.Contact c" startPosition="1761" length="24">
            <name lexicalForm="c" startPosition="1784" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="1767" length="16" resolvedType="//@compilationUnits.7/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="1767" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                <name lexicalForm="Contact" startPosition="1776" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="1767" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="1770" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="1767" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="1761" length="5" final="true"/>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void removeContactAsync(final im.model.Contact c) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}" startPosition="2328" length="669">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="2328" length="7" private="true"/>
          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}" startPosition="2386" length="611">
            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();" startPosition="2391" length="602">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start()" startPosition="2391" length="601">
                <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="2391" length="593">
                  <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="2404" length="580">
                    <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2410" length="569">
                      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2410" length="6" public="true"/>
                      <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="2428" length="551">
                        <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="2435" length="538">
                          <catchClauses lexicalForm="catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="2878" length="95">
                            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="2908" length="65">
                              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="im.InstantMessagingClient.getInstance().report(e);" startPosition="2916" length="50">
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance().report(e)" startPosition="2916" length="49">
                                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="2963" length="1" fullyQualifiedName="e" identifier="e"/>
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="2916" length="39" resolvedType="//@compilationUnits.2/@types.0">
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="2916" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                                      <name lexicalForm="InstantMessagingClient" startPosition="2919" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2916" length="2" fullyQualifiedName="im" identifier="im"/>
                                    </expression>
                                    <name lexicalForm="getInstance" startPosition="2942" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                                  </expression>
                                  <name lexicalForm="report" startPosition="2956" length="6" fullyQualifiedName="report" identifier="report"/>
                                </expression>
                              </statements>
                            </body>
                            <exception lexicalForm="java.io.IOException e" startPosition="2885" length="21">
                              <name lexicalForm="e" startPosition="2905" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="2885" length="19">
                                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="2885" length="19" fullyQualifiedName="java.io.IOException">
                                  <name lexicalForm="IOException" startPosition="2893" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="2885" length="7" fullyQualifiedName="java.io">
                                    <name lexicalForm="io" startPosition="2890" length="2" fullyQualifiedName="io" identifier="io"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="2885" length="4" fullyQualifiedName="java" identifier="java"/>
                                  </qualifier>
                                </name>
                              </type>
                            </exception>
                          </catchClauses>
                          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster roster = new IQRoster();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;roster.addItem(c.getUserId());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IQ iq = new IQ(Const.SET);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iq.addChild(roster);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(iq);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Removing contact &quot; + presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="2439" length="438">
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="IQRoster roster = new IQRoster();" startPosition="2447" length="33">
                              <fragments lexicalForm="roster = new IQRoster()" startPosition="2456" length="23">
                                <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new IQRoster()" startPosition="2465" length="14">
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="IQRoster" startPosition="2469" length="8">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="IQRoster" startPosition="2469" length="8" fullyQualifiedName="IQRoster" identifier="IQRoster"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="roster" startPosition="2456" length="6" fullyQualifiedName="roster" identifier="roster" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="IQRoster" startPosition="2447" length="8">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="IQRoster" startPosition="2447" length="8" fullyQualifiedName="IQRoster" identifier="IQRoster"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="roster.addItem(c.getUserId());" startPosition="2487" length="30">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="roster.addItem(c.getUserId())" startPosition="2487" length="29">
                                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getUserId()" startPosition="2502" length="13">
                                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2502" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                                  <name lexicalForm="getUserId" startPosition="2504" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                                </arguments>
                                <expression xsi:type="JavaAST:SimpleName" lexicalForm="roster" startPosition="2487" length="6" fullyQualifiedName="roster" identifier="roster"/>
                                <name lexicalForm="addItem" startPosition="2494" length="7" fullyQualifiedName="addItem" identifier="addItem"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE);" startPosition="2524" length="76">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="((IQRoster.Item) roster.getChild(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.setSubscription(Const.REMOVE)" startPosition="2524" length="75">
                                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.REMOVE" startPosition="2586" length="12" fullyQualifiedName="Const.REMOVE">
                                  <name lexicalForm="REMOVE" startPosition="2592" length="6" fullyQualifiedName="REMOVE" identifier="REMOVE"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="2586" length="5" fullyQualifiedName="Const" identifier="Const"/>
                                </arguments>
                                <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((IQRoster.Item) roster.getChild(0))" startPosition="2524" length="36">
                                  <expression xsi:type="JavaAST:CastExpression" lexicalForm="(IQRoster.Item) roster.getChild(0)" startPosition="2525" length="34">
                                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="roster.getChild(0)" startPosition="2541" length="18">
                                      <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="2557" length="1" token="0"/>
                                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="roster" startPosition="2541" length="6" fullyQualifiedName="roster" identifier="roster"/>
                                      <name lexicalForm="getChild" startPosition="2548" length="8" fullyQualifiedName="getChild" identifier="getChild"/>
                                    </expression>
                                    <type xsi:type="JavaAST:SimpleType" lexicalForm="IQRoster.Item" startPosition="2526" length="13">
                                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="IQRoster.Item" startPosition="2526" length="13" fullyQualifiedName="IQRoster.Item">
                                        <name lexicalForm="Item" startPosition="2535" length="4" fullyQualifiedName="Item" identifier="Item"/>
                                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="IQRoster" startPosition="2526" length="8" fullyQualifiedName="IQRoster" identifier="IQRoster"/>
                                      </name>
                                    </type>
                                  </expression>
                                </expression>
                                <name lexicalForm="setSubscription" startPosition="2570" length="15" fullyQualifiedName="setSubscription" identifier="setSubscription"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="IQ iq = new IQ(Const.SET);" startPosition="2607" length="26">
                              <fragments lexicalForm="iq = new IQ(Const.SET)" startPosition="2610" length="22">
                                <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new IQ(Const.SET)" startPosition="2615" length="17">
                                  <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.SET" startPosition="2622" length="9" fullyQualifiedName="Const.SET">
                                    <name lexicalForm="SET" startPosition="2628" length="3" fullyQualifiedName="SET" identifier="SET"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="2622" length="5" fullyQualifiedName="Const" identifier="Const"/>
                                  </arguments>
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="IQ" startPosition="2619" length="2">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="IQ" startPosition="2619" length="2" fullyQualifiedName="IQ" identifier="IQ"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="iq" startPosition="2610" length="2" fullyQualifiedName="iq" identifier="iq" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="IQ" startPosition="2607" length="2">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="IQ" startPosition="2607" length="2" fullyQualifiedName="IQ" identifier="IQ"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="iq.addChild(roster);" startPosition="2640" length="20">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="iq.addChild(roster)" startPosition="2640" length="19">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="roster" startPosition="2652" length="6" fullyQualifiedName="roster" identifier="roster"/>
                                <expression xsi:type="JavaAST:SimpleName" lexicalForm="iq" startPosition="2640" length="2" fullyQualifiedName="iq" identifier="iq"/>
                                <name lexicalForm="addChild" startPosition="2643" length="8" fullyQualifiedName="addChild" identifier="addChild"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().send(iq);" startPosition="2667" length="25">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().send(iq)" startPosition="2667" length="24">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="iq" startPosition="2688" length="2" fullyQualifiedName="iq" identifier="iq"/>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="2667" length="15">
                                  <name lexicalForm="getConnection" startPosition="2667" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="send" startPosition="2683" length="4" fullyQualifiedName="send" identifier="send"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Presence presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE);" startPosition="2699" length="75">
                              <fragments lexicalForm="presence = new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE)" startPosition="2708" length="65">
                                <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Presence(c.getUserId(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Const.UNSUBSCRIBE)" startPosition="2719" length="54">
                                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getUserId()" startPosition="2732" length="13">
                                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="2732" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                                    <name lexicalForm="getUserId" startPosition="2734" length="9" fullyQualifiedName="getUserId" identifier="getUserId"/>
                                  </arguments>
                                  <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.UNSUBSCRIBE" startPosition="2755" length="17" fullyQualifiedName="Const.UNSUBSCRIBE">
                                    <name lexicalForm="UNSUBSCRIBE" startPosition="2761" length="11" fullyQualifiedName="UNSUBSCRIBE" identifier="UNSUBSCRIBE"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="2755" length="5" fullyQualifiedName="Const" identifier="Const"/>
                                  </arguments>
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Presence" startPosition="2723" length="8">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Presence" startPosition="2723" length="8" fullyQualifiedName="Presence" identifier="Presence"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="presence" startPosition="2708" length="8" fullyQualifiedName="presence" identifier="presence" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="Presence" startPosition="2699" length="8">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="Presence" startPosition="2699" length="8" fullyQualifiedName="Presence" identifier="Presence"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Removing contact &quot; + presence);" startPosition="2781" length="51">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Removing contact &quot; + presence)" startPosition="2781" length="50">
                                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Removing contact &quot; + presence" startPosition="2800" length="30" operator="+">
                                  <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Removing contact &quot;" startPosition="2800" length="19" escapedValue="&quot;Removing contact &quot;" literalValue="Removing contact "/>
                                  <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="2822" length="8" fullyQualifiedName="presence" identifier="presence"/>
                                </arguments>
                                <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="2781" length="10" fullyQualifiedName="System.out">
                                  <name lexicalForm="out" startPosition="2788" length="3" fullyQualifiedName="out" identifier="out"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="2781" length="6" fullyQualifiedName="System" identifier="System"/>
                                </expression>
                                <name lexicalForm="println" startPosition="2792" length="7" fullyQualifiedName="println" identifier="println"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().send(presence);" startPosition="2839" length="31">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().send(presence)" startPosition="2839" length="30">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="2860" length="8" fullyQualifiedName="presence" identifier="presence"/>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="2839" length="15">
                                  <name lexicalForm="getConnection" startPosition="2839" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="send" startPosition="2855" length="4" fullyQualifiedName="send" identifier="send"/>
                              </expression>
                            </statements>
                          </body>
                        </statements>
                      </body>
                      <name lexicalForm="run" startPosition="2422" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                      <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2417" length="4" code="void"/>
                    </bodyDeclarations>
                  </anonymousClassDeclaration>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Thread" startPosition="2395" length="6">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Thread" startPosition="2395" length="6" fullyQualifiedName="Thread" identifier="Thread"/>
                  </type>
                </expression>
                <name lexicalForm="start" startPosition="2985" length="5" fullyQualifiedName="start" identifier="start"/>
              </expression>
            </statements>
          </body>
          <name lexicalForm="removeContactAsync" startPosition="2341" length="18" fullyQualifiedName="removeContactAsync" identifier="removeContactAsync" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2336" length="4" code="void"/>
          <parameters lexicalForm="final im.model.Contact c" startPosition="2360" length="24">
            <name lexicalForm="c" startPosition="2383" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="2366" length="16" resolvedType="//@compilationUnits.7/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="2366" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                <name lexicalForm="Contact" startPosition="2375" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="2366" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="2369" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="2366" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="2360" length="5" final="true"/>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void sendAsync(final im.model.Message msg) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}" startPosition="3001" length="502">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="3001" length="7" private="true"/>
          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}" startPosition="3052" length="451">
            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();" startPosition="3057" length="442">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start()" startPosition="3057" length="441">
                <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="3057" length="433">
                  <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="3070" length="420">
                    <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="3076" length="409">
                      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3076" length="6" public="true"/>
                      <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="3094" length="391">
                        <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="3101" length="378">
                          <catchClauses lexicalForm="catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="3384" length="95">
                            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="3414" length="65">
                              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="im.InstantMessagingClient.getInstance().report(e);" startPosition="3422" length="50">
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance().report(e)" startPosition="3422" length="49">
                                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="3469" length="1" fullyQualifiedName="e" identifier="e"/>
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="3422" length="39" resolvedType="//@compilationUnits.2/@types.0">
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="3422" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                                      <name lexicalForm="InstantMessagingClient" startPosition="3425" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3422" length="2" fullyQualifiedName="im" identifier="im"/>
                                    </expression>
                                    <name lexicalForm="getInstance" startPosition="3448" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                                  </expression>
                                  <name lexicalForm="report" startPosition="3462" length="6" fullyQualifiedName="report" identifier="report"/>
                                </expression>
                              </statements>
                            </body>
                            <exception lexicalForm="java.io.IOException e" startPosition="3391" length="21">
                              <name lexicalForm="e" startPosition="3411" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="3391" length="19">
                                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="3391" length="19" fullyQualifiedName="java.io.IOException">
                                  <name lexicalForm="IOException" startPosition="3399" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="3391" length="7" fullyQualifiedName="java.io">
                                    <name lexicalForm="io" startPosition="3396" length="2" fullyQualifiedName="io" identifier="io"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3391" length="4" fullyQualifiedName="java" identifier="java"/>
                                  </qualifier>
                                </name>
                              </type>
                            </exception>
                          </catchClauses>
                          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Message message = new Message();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setTo(msg.getRecipient());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setFrom(msg.getSender());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;message.setBody(msg.getContent().toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(message);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="3105" length="278">
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Message message = new Message();" startPosition="3113" length="32">
                              <fragments lexicalForm="message = new Message()" startPosition="3121" length="23">
                                <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Message()" startPosition="3131" length="13">
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Message" startPosition="3135" length="7">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Message" startPosition="3135" length="7" fullyQualifiedName="Message" identifier="Message"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="message" startPosition="3121" length="7" fullyQualifiedName="message" identifier="message" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="Message" startPosition="3113" length="7">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="Message" startPosition="3113" length="7" fullyQualifiedName="Message" identifier="Message"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="message.setTo(msg.getRecipient());" startPosition="3152" length="34">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="message.setTo(msg.getRecipient())" startPosition="3152" length="33">
                                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.getRecipient()" startPosition="3166" length="18">
                                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="3166" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                                  <name lexicalForm="getRecipient" startPosition="3170" length="12" fullyQualifiedName="getRecipient" identifier="getRecipient"/>
                                </arguments>
                                <expression xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="3152" length="7" fullyQualifiedName="message" identifier="message"/>
                                <name lexicalForm="setTo" startPosition="3160" length="5" fullyQualifiedName="setTo" identifier="setTo"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="message.setFrom(msg.getSender());" startPosition="3193" length="33">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="message.setFrom(msg.getSender())" startPosition="3193" length="32">
                                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.getSender()" startPosition="3209" length="15">
                                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="3209" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                                  <name lexicalForm="getSender" startPosition="3213" length="9" fullyQualifiedName="getSender" identifier="getSender"/>
                                </arguments>
                                <expression xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="3193" length="7" fullyQualifiedName="message" identifier="message"/>
                                <name lexicalForm="setFrom" startPosition="3201" length="7" fullyQualifiedName="setFrom" identifier="setFrom"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="message.setBody(msg.getContent().toString());" startPosition="3233" length="45">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="message.setBody(msg.getContent().toString())" startPosition="3233" length="44">
                                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.getContent().toString()" startPosition="3249" length="27">
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.getContent()" startPosition="3249" length="16">
                                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="3249" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                                    <name lexicalForm="getContent" startPosition="3253" length="10" fullyQualifiedName="getContent" identifier="getContent"/>
                                  </expression>
                                  <name lexicalForm="toString" startPosition="3266" length="8" fullyQualifiedName="toString" identifier="toString"/>
                                </arguments>
                                <expression xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="3233" length="7" fullyQualifiedName="message" identifier="message"/>
                                <name lexicalForm="setBody" startPosition="3241" length="7" fullyQualifiedName="setBody" identifier="setBody"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);" startPosition="3285" length="54">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message)" startPosition="3285" length="53">
                                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Sending &quot; + msg + &quot;: &quot; + message" startPosition="3304" length="33" operator="+">
                                  <extendedOperands xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;: &quot;" startPosition="3323" length="4" escapedValue="&quot;: &quot;" literalValue=": "/>
                                  <extendedOperands xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="3330" length="7" fullyQualifiedName="message" identifier="message"/>
                                  <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Sending &quot;" startPosition="3304" length="10" escapedValue="&quot;Sending &quot;" literalValue="Sending "/>
                                  <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="3317" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                                </arguments>
                                <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="3285" length="10" fullyQualifiedName="System.out">
                                  <name lexicalForm="out" startPosition="3292" length="3" fullyQualifiedName="out" identifier="out"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="3285" length="6" fullyQualifiedName="System" identifier="System"/>
                                </expression>
                                <name lexicalForm="println" startPosition="3296" length="7" fullyQualifiedName="println" identifier="println"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().send(message);" startPosition="3346" length="30">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().send(message)" startPosition="3346" length="29">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="3367" length="7" fullyQualifiedName="message" identifier="message"/>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="3346" length="15">
                                  <name lexicalForm="getConnection" startPosition="3346" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="send" startPosition="3362" length="4" fullyQualifiedName="send" identifier="send"/>
                              </expression>
                            </statements>
                          </body>
                        </statements>
                      </body>
                      <name lexicalForm="run" startPosition="3088" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                      <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3083" length="4" code="void"/>
                    </bodyDeclarations>
                  </anonymousClassDeclaration>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Thread" startPosition="3061" length="6">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Thread" startPosition="3061" length="6" fullyQualifiedName="Thread" identifier="Thread"/>
                  </type>
                </expression>
                <name lexicalForm="start" startPosition="3491" length="5" fullyQualifiedName="start" identifier="start"/>
              </expression>
            </statements>
          </body>
          <name lexicalForm="sendAsync" startPosition="3014" length="9" fullyQualifiedName="sendAsync" identifier="sendAsync" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3009" length="4" code="void"/>
          <parameters lexicalForm="final im.model.Message msg" startPosition="3024" length="26">
            <name lexicalForm="msg" startPosition="3047" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="3030" length="16" resolvedType="//@compilationUnits.10/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="3030" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                <name lexicalForm="Message" startPosition="3039" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="3030" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="3033" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="3030" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="3024" length="5" final="true"/>
          </parameters>
        </bodyDeclarations>
        <name lexicalForm="ConnectedState" startPosition="626" length="14" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.1" fullyQualifiedName="ConnectedState" identifier="ConnectedState" declaration="true"/>
        <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="State" startPosition="649" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0">
          <name xsi:type="JavaAST:SimpleName" lexicalForm="State" startPosition="649" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="State" identifier="State"/>
        </superclassType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class DisconnectedState extends State {&#xA;&#x9;&#x9;public void login(final java.lang.String uid, final java.lang.String pwd) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}" startPosition="3510" length="2079" memberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.13/@types.0/@bodyDeclarations.2/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.3/@fragments.0/@initializer //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.5/@body/@statements.0/@expression/@rightHandSide //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.5/@body/@statements.0/@expression/@rightHandSide/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.3/@fragments.0/@initializer/@type/@name //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide" resolvedTypeReferences="//@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.2/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@type //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@type //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.1/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@type //@compilationUnits.13/@types.0/@bodyDeclarations.1/@bodyDeclarations.0/@body/@statements.0/@expression/@expression/@anonymousClassDeclaration/@bodyDeclarations.0/@body/@statements.0/@body/@statements.5/@body/@statements.0/@expression/@rightHandSide/@type //@compilationUnits.13/@types.0/@bodyDeclarations.3/@fragments.0/@initializer/@type">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3510" length="6" public="true"/>
        <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void login(final java.lang.String uid, final java.lang.String pwd) {&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}" startPosition="3559" length="2026">
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3559" length="6" public="true"/>
          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();&#xA;&#x9;&#x9;}" startPosition="3633" length="1952">
            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start();" startPosition="3638" length="1943">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}.start()" startPosition="3638" length="1942">
                <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Thread() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="3638" length="1934">
                  <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="3651" length="1921">
                    <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="3657" length="1910">
                      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3657" length="6" public="true"/>
                      <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="3675" length="1892">
                        <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="3682" length="1879">
                          <catchClauses lexicalForm="catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="5476" length="85">
                            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="5496" length="65">
                              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="im.InstantMessagingClient.getInstance().report(e);" startPosition="5504" length="50">
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance().report(e)" startPosition="5504" length="49">
                                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="5551" length="1" fullyQualifiedName="e" identifier="e"/>
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="5504" length="39" resolvedType="//@compilationUnits.2/@types.0">
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="5504" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                                      <name lexicalForm="InstantMessagingClient" startPosition="5507" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5504" length="2" fullyQualifiedName="im" identifier="im"/>
                                    </expression>
                                    <name lexicalForm="getInstance" startPosition="5530" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                                  </expression>
                                  <name lexicalForm="report" startPosition="5544" length="6" fullyQualifiedName="report" identifier="report"/>
                                </expression>
                              </statements>
                            </body>
                            <exception lexicalForm="Exception e" startPosition="5483" length="11">
                              <name lexicalForm="e" startPosition="5493" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="5483" length="9">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="5483" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                              </type>
                            </exception>
                          </catchClauses>
                          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String user = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String server = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;address = com.ssttr.util.Strings.tokenize(server, '/');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;server = (String) address.elementAt(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String resource = (String) address.elementAt(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;connect(server);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setMessageListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setIQListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().setPresenceListener(Jabber.this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;boolean try_again;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pres.setFrom(uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;incomingPresence(pres);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().send(IQRoster.createGetRequest());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="3686" length="1789">
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Vector address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@');" startPosition="3694" length="78">
                              <fragments lexicalForm="address = com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@')" startPosition="3711" length="60">
                                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="com.ssttr.util.Strings&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.tokenize(uid, '@')" startPosition="3721" length="50">
                                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="3762" length="3" fullyQualifiedName="uid" identifier="uid"/>
                                  <arguments xsi:type="JavaAST:CharacterLiteral" lexicalForm="'@'" startPosition="3767" length="3" charValue="64" escapedValue="'@'"/>
                                  <expression xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr.util.Strings" startPosition="3721" length="22" fullyQualifiedName="com.ssttr.util.Strings">
                                    <name lexicalForm="Strings" startPosition="3736" length="7" fullyQualifiedName="Strings" identifier="Strings"/>
                                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr.util" startPosition="3721" length="14" fullyQualifiedName="com.ssttr.util">
                                      <name lexicalForm="util" startPosition="3731" length="4" fullyQualifiedName="util" identifier="util"/>
                                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr" startPosition="3721" length="9" fullyQualifiedName="com.ssttr">
                                        <name lexicalForm="ssttr" startPosition="3725" length="5" fullyQualifiedName="ssttr" identifier="ssttr"/>
                                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="3721" length="3" fullyQualifiedName="com" identifier="com"/>
                                      </qualifier>
                                    </qualifier>
                                  </expression>
                                  <name lexicalForm="tokenize" startPosition="3753" length="8" fullyQualifiedName="tokenize" identifier="tokenize"/>
                                </initializer>
                                <name lexicalForm="address" startPosition="3711" length="7" fullyQualifiedName="address" identifier="address" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Vector" startPosition="3694" length="16">
                                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Vector" startPosition="3694" length="16" fullyQualifiedName="java.util.Vector">
                                  <name lexicalForm="Vector" startPosition="3704" length="6" fullyQualifiedName="Vector" identifier="Vector"/>
                                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="3694" length="9" fullyQualifiedName="java.util">
                                    <name lexicalForm="util" startPosition="3699" length="4" fullyQualifiedName="util" identifier="util"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3694" length="4" fullyQualifiedName="java" identifier="java"/>
                                  </qualifier>
                                </name>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String user = (String) address.elementAt(0);" startPosition="3779" length="44">
                              <fragments lexicalForm="user = (String) address.elementAt(0)" startPosition="3786" length="36">
                                <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(String) address.elementAt(0)" startPosition="3793" length="29">
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="address.elementAt(0)" startPosition="3802" length="20">
                                    <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3820" length="1" token="0"/>
                                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="address" startPosition="3802" length="7" fullyQualifiedName="address" identifier="address"/>
                                    <name lexicalForm="elementAt" startPosition="3810" length="9" fullyQualifiedName="elementAt" identifier="elementAt"/>
                                  </expression>
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="3794" length="6">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="3794" length="6" fullyQualifiedName="String" identifier="String"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="user" startPosition="3786" length="4" fullyQualifiedName="user" identifier="user" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="3779" length="6">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="3779" length="6" fullyQualifiedName="String" identifier="String"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String server = (String) address.elementAt(1);" startPosition="3830" length="46">
                              <fragments lexicalForm="server = (String) address.elementAt(1)" startPosition="3837" length="38">
                                <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(String) address.elementAt(1)" startPosition="3846" length="29">
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="address.elementAt(1)" startPosition="3855" length="20">
                                    <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="1" startPosition="3873" length="1" token="1"/>
                                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="address" startPosition="3855" length="7" fullyQualifiedName="address" identifier="address"/>
                                    <name lexicalForm="elementAt" startPosition="3863" length="9" fullyQualifiedName="elementAt" identifier="elementAt"/>
                                  </expression>
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="3847" length="6">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="3847" length="6" fullyQualifiedName="String" identifier="String"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="server" startPosition="3837" length="6" fullyQualifiedName="server" identifier="server" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="3830" length="6">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="3830" length="6" fullyQualifiedName="String" identifier="String"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="address = com.ssttr.util.Strings.tokenize(server, '/');" startPosition="3883" length="55">
                              <expression xsi:type="JavaAST:Assignment" lexicalForm="address = com.ssttr.util.Strings.tokenize(server, '/')" startPosition="3883" length="54" operator="=">
                                <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="address" startPosition="3883" length="7" fullyQualifiedName="address" identifier="address"/>
                                <rightHandSide xsi:type="JavaAST:MethodInvocation" lexicalForm="com.ssttr.util.Strings.tokenize(server, '/')" startPosition="3893" length="44">
                                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="server" startPosition="3925" length="6" fullyQualifiedName="server" identifier="server"/>
                                  <arguments xsi:type="JavaAST:CharacterLiteral" lexicalForm="'/'" startPosition="3933" length="3" charValue="47" escapedValue="'/'"/>
                                  <expression xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr.util.Strings" startPosition="3893" length="22" fullyQualifiedName="com.ssttr.util.Strings">
                                    <name lexicalForm="Strings" startPosition="3908" length="7" fullyQualifiedName="Strings" identifier="Strings"/>
                                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr.util" startPosition="3893" length="14" fullyQualifiedName="com.ssttr.util">
                                      <name lexicalForm="util" startPosition="3903" length="4" fullyQualifiedName="util" identifier="util"/>
                                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr" startPosition="3893" length="9" fullyQualifiedName="com.ssttr">
                                        <name lexicalForm="ssttr" startPosition="3897" length="5" fullyQualifiedName="ssttr" identifier="ssttr"/>
                                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="3893" length="3" fullyQualifiedName="com" identifier="com"/>
                                      </qualifier>
                                    </qualifier>
                                  </expression>
                                  <name lexicalForm="tokenize" startPosition="3916" length="8" fullyQualifiedName="tokenize" identifier="tokenize"/>
                                </rightHandSide>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="server = (String) address.elementAt(0);" startPosition="3945" length="39">
                              <expression xsi:type="JavaAST:Assignment" lexicalForm="server = (String) address.elementAt(0)" startPosition="3945" length="38" operator="=">
                                <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="server" startPosition="3945" length="6" fullyQualifiedName="server" identifier="server"/>
                                <rightHandSide xsi:type="JavaAST:CastExpression" lexicalForm="(String) address.elementAt(0)" startPosition="3954" length="29">
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="address.elementAt(0)" startPosition="3963" length="20">
                                    <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3981" length="1" token="0"/>
                                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="address" startPosition="3963" length="7" fullyQualifiedName="address" identifier="address"/>
                                    <name lexicalForm="elementAt" startPosition="3971" length="9" fullyQualifiedName="elementAt" identifier="elementAt"/>
                                  </expression>
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="3955" length="6">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="3955" length="6" fullyQualifiedName="String" identifier="String"/>
                                  </type>
                                </rightHandSide>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String resource = (String) address.elementAt(1);" startPosition="3991" length="48">
                              <fragments lexicalForm="resource = (String) address.elementAt(1)" startPosition="3998" length="40">
                                <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(String) address.elementAt(1)" startPosition="4009" length="29">
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="address.elementAt(1)" startPosition="4018" length="20">
                                    <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="1" startPosition="4036" length="1" token="1"/>
                                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="address" startPosition="4018" length="7" fullyQualifiedName="address" identifier="address"/>
                                    <name lexicalForm="elementAt" startPosition="4026" length="9" fullyQualifiedName="elementAt" identifier="elementAt"/>
                                  </expression>
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="4010" length="6">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="4010" length="6" fullyQualifiedName="String" identifier="String"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="resource" startPosition="3998" length="8" fullyQualifiedName="resource" identifier="resource" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="3991" length="6">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="3991" length="6" fullyQualifiedName="String" identifier="String"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="connect(server);" startPosition="4046" length="16">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="connect(server)" startPosition="4046" length="15">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="server" startPosition="4054" length="6" fullyQualifiedName="server" identifier="server"/>
                                <name lexicalForm="connect" startPosition="4046" length="7" fullyQualifiedName="connect" identifier="connect"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().setMessageListener(Jabber.this);" startPosition="4069" length="48">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().setMessageListener(Jabber.this)" startPosition="4069" length="47">
                                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="Jabber.this" startPosition="4104" length="11" resolvedType="//@compilationUnits.13/@types.0">
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Jabber" startPosition="4104" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
                                </arguments>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="4069" length="15">
                                  <name lexicalForm="getConnection" startPosition="4069" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="setMessageListener" startPosition="4085" length="18" fullyQualifiedName="setMessageListener" identifier="setMessageListener"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().setIQListener(Jabber.this);" startPosition="4124" length="43">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().setIQListener(Jabber.this)" startPosition="4124" length="42">
                                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="Jabber.this" startPosition="4154" length="11" resolvedType="//@compilationUnits.13/@types.0">
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Jabber" startPosition="4154" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
                                </arguments>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="4124" length="15">
                                  <name lexicalForm="getConnection" startPosition="4124" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="setIQListener" startPosition="4140" length="13" fullyQualifiedName="setIQListener" identifier="setIQListener"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().setPresenceListener(Jabber.this);" startPosition="4174" length="49">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().setPresenceListener(Jabber.this)" startPosition="4174" length="48">
                                <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="Jabber.this" startPosition="4210" length="11" resolvedType="//@compilationUnits.13/@types.0">
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Jabber" startPosition="4210" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
                                </arguments>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="4174" length="15">
                                  <name lexicalForm="getConnection" startPosition="4174" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="setPresenceListener" startPosition="4190" length="19" fullyQualifiedName="setPresenceListener" identifier="setPresenceListener"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="boolean try_again;" startPosition="4230" length="18">
                              <fragments lexicalForm="try_again" startPosition="4238" length="9">
                                <name lexicalForm="try_again" startPosition="4238" length="9" fullyQualifiedName="try_again" identifier="try_again" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="4230" length="7" code="boolean"/>
                            </statements>
                            <statements xsi:type="JavaAST:DoStatement" lexicalForm="do {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} while (try_again);" startPosition="4255" length="898">
                              <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Logging in &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="4258" length="876">
                                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="try_again = false;" startPosition="4267" length="18">
                                  <expression xsi:type="JavaAST:Assignment" lexicalForm="try_again = false" startPosition="4267" length="17" operator="=">
                                    <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="try_again" startPosition="4267" length="9" fullyQualifiedName="try_again" identifier="try_again"/>
                                    <rightHandSide xsi:type="JavaAST:BooleanLiteral" lexicalForm="false" startPosition="4279" length="5"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Logging in &quot; + uid);" startPosition="4293" length="40">
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Logging in &quot; + uid)" startPosition="4293" length="39">
                                    <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Logging in &quot; + uid" startPosition="4312" length="19" operator="+">
                                      <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Logging in &quot;" startPosition="4312" length="13" escapedValue="&quot;Logging in &quot;" literalValue="Logging in "/>
                                      <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="4328" length="3" fullyQualifiedName="uid" identifier="uid"/>
                                    </arguments>
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="4293" length="10" fullyQualifiedName="System.out">
                                      <name lexicalForm="out" startPosition="4300" length="3" fullyQualifiedName="out" identifier="out"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="4293" length="6" fullyQualifiedName="System" identifier="System"/>
                                    </expression>
                                    <name lexicalForm="println" startPosition="4304" length="7" fullyQualifiedName="println" identifier="println"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="JavaAST:SwitchStatement" lexicalForm="switch (getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_PASS :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_BAD_UID :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_FAILED :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_PASS_EXP :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case Client2Server.LOGIN_OK :&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="4341" length="785">
                                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().loginAny(user, resource,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pwd, 30000)" startPosition="4349" length="61">
                                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="user" startPosition="4374" length="4" fullyQualifiedName="user" identifier="user"/>
                                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="resource" startPosition="4380" length="8" fullyQualifiedName="resource" identifier="resource"/>
                                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="pwd" startPosition="4399" length="3" fullyQualifiedName="pwd" identifier="pwd"/>
                                    <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="30000" startPosition="4404" length="5" token="30000"/>
                                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="4349" length="15">
                                      <name lexicalForm="getConnection" startPosition="4349" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                    </expression>
                                    <name lexicalForm="loginAny" startPosition="4365" length="8" fullyQualifiedName="loginAny" identifier="loginAny"/>
                                  </expression>
                                  <statements xsi:type="JavaAST:SwitchCase" lexicalForm="case Client2Server.LOGIN_BAD_PASS :" startPosition="4422" length="35">
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="Client2Server.LOGIN_BAD_PASS" startPosition="4427" length="28" fullyQualifiedName="Client2Server.LOGIN_BAD_PASS">
                                      <name lexicalForm="LOGIN_BAD_PASS" startPosition="4441" length="14" fullyQualifiedName="LOGIN_BAD_PASS" identifier="LOGIN_BAD_PASS"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Client2Server" startPosition="4427" length="13" fullyQualifiedName="Client2Server" identifier="Client2Server"/>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="JavaAST:ThrowStatement" lexicalForm="throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid);" startPosition="4467" length="69">
                                    <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Bad password for &quot; + uid)" startPosition="4473" length="62">
                                      <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Bad password for &quot; + uid" startPosition="4509" length="25" operator="+">
                                        <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Bad password for &quot;" startPosition="4509" length="19" escapedValue="&quot;Bad password for &quot;" literalValue="Bad password for "/>
                                        <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="4531" length="3" fullyQualifiedName="uid" identifier="uid"/>
                                      </arguments>
                                      <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="4477" length="19">
                                        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="4477" length="19" fullyQualifiedName="java.io.IOException">
                                          <name lexicalForm="IOException" startPosition="4485" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                                          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="4477" length="7" fullyQualifiedName="java.io">
                                            <name lexicalForm="io" startPosition="4482" length="2" fullyQualifiedName="io" identifier="io"/>
                                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="4477" length="4" fullyQualifiedName="java" identifier="java"/>
                                          </qualifier>
                                        </name>
                                      </type>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="JavaAST:SwitchCase" lexicalForm="case Client2Server.LOGIN_BAD_UID :" startPosition="4545" length="34">
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="Client2Server.LOGIN_BAD_UID" startPosition="4550" length="27" fullyQualifiedName="Client2Server.LOGIN_BAD_UID">
                                      <name lexicalForm="LOGIN_BAD_UID" startPosition="4564" length="13" fullyQualifiedName="LOGIN_BAD_UID" identifier="LOGIN_BAD_UID"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Client2Server" startPosition="4550" length="13" fullyQualifiedName="Client2Server" identifier="Client2Server"/>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!registerUser(user, pwd))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try_again = true;" startPosition="4589" length="177">
                                    <elseStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="try_again = true;" startPosition="4749" length="17">
                                      <expression xsi:type="JavaAST:Assignment" lexicalForm="try_again = true" startPosition="4749" length="16" operator="=">
                                        <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="try_again" startPosition="4749" length="9" fullyQualifiedName="try_again" identifier="try_again"/>
                                        <rightHandSide xsi:type="JavaAST:BooleanLiteral" lexicalForm="true" startPosition="4761" length="4" booleanValue="true"/>
                                      </expression>
                                    </elseStatement>
                                    <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!registerUser(user, pwd)" startPosition="4593" length="24" operator="!">
                                      <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="registerUser(user, pwd)" startPosition="4594" length="23">
                                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="user" startPosition="4607" length="4" fullyQualifiedName="user" identifier="user"/>
                                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="pwd" startPosition="4613" length="3" fullyQualifiedName="pwd" identifier="pwd"/>
                                        <name lexicalForm="registerUser" startPosition="4594" length="12" fullyQualifiedName="registerUser" identifier="registerUser"/>
                                      </operand>
                                    </expression>
                                    <thenStatement xsi:type="JavaAST:ThrowStatement" lexicalForm="throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);" startPosition="4629" length="95">
                                      <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid)" startPosition="4635" length="88">
                                        <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Could not register user for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid" startPosition="4672" length="50" operator="+">
                                          <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Could not register user for &quot;" startPosition="4672" length="30" escapedValue="&quot;Could not register user for &quot;" literalValue="Could not register user for "/>
                                          <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="4719" length="3" fullyQualifiedName="uid" identifier="uid"/>
                                        </arguments>
                                        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="4639" length="19">
                                          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="4639" length="19" fullyQualifiedName="java.io.IOException">
                                            <name lexicalForm="IOException" startPosition="4647" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                                            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="4639" length="7" fullyQualifiedName="java.io">
                                              <name lexicalForm="io" startPosition="4644" length="2" fullyQualifiedName="io" identifier="io"/>
                                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="4639" length="4" fullyQualifiedName="java" identifier="java"/>
                                            </qualifier>
                                          </name>
                                        </type>
                                      </expression>
                                    </thenStatement>
                                  </statements>
                                  <statements xsi:type="JavaAST:BreakStatement" lexicalForm="break;" startPosition="4776" length="6"/>
                                  <statements xsi:type="JavaAST:SwitchCase" lexicalForm="case Client2Server.LOGIN_FAILED :" startPosition="4791" length="33">
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="Client2Server.LOGIN_FAILED" startPosition="4796" length="26" fullyQualifiedName="Client2Server.LOGIN_FAILED">
                                      <name lexicalForm="LOGIN_FAILED" startPosition="4810" length="12" fullyQualifiedName="LOGIN_FAILED" identifier="LOGIN_FAILED"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Client2Server" startPosition="4796" length="13" fullyQualifiedName="Client2Server" identifier="Client2Server"/>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="JavaAST:ThrowStatement" lexicalForm="throw new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid);" startPosition="4834" length="75">
                                    <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.io.IOException(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Login failed: unknown: &quot; + uid)" startPosition="4840" length="68">
                                      <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Login failed: unknown: &quot; + uid" startPosition="4876" length="31" operator="+">
                                        <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Login failed: unknown: &quot;" startPosition="4876" length="25" escapedValue="&quot;Login failed: unknown: &quot;" literalValue="Login failed: unknown: "/>
                                        <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="4904" length="3" fullyQualifiedName="uid" identifier="uid"/>
                                      </arguments>
                                      <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="4844" length="19">
                                        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="4844" length="19" fullyQualifiedName="java.io.IOException">
                                          <name lexicalForm="IOException" startPosition="4852" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                                          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="4844" length="7" fullyQualifiedName="java.io">
                                            <name lexicalForm="io" startPosition="4849" length="2" fullyQualifiedName="io" identifier="io"/>
                                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="4844" length="4" fullyQualifiedName="java" identifier="java"/>
                                          </qualifier>
                                        </name>
                                      </type>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="JavaAST:SwitchCase" lexicalForm="case Client2Server.LOGIN_PASS_EXP :" startPosition="4918" length="35">
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="Client2Server.LOGIN_PASS_EXP" startPosition="4923" length="28" fullyQualifiedName="Client2Server.LOGIN_PASS_EXP">
                                      <name lexicalForm="LOGIN_PASS_EXP" startPosition="4937" length="14" fullyQualifiedName="LOGIN_PASS_EXP" identifier="LOGIN_PASS_EXP"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Client2Server" startPosition="4923" length="13" fullyQualifiedName="Client2Server" identifier="Client2Server"/>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid);" startPosition="4963" length="84">
                                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid)" startPosition="4963" length="83">
                                      <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Your password has expired for &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ uid" startPosition="4994" length="51" operator="+">
                                        <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Your password has expired for &quot;" startPosition="4994" length="32" escapedValue="&quot;Your password has expired for &quot;" literalValue="Your password has expired for "/>
                                        <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="5042" length="3" fullyQualifiedName="uid" identifier="uid"/>
                                      </arguments>
                                      <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="4963" length="10" fullyQualifiedName="System.out">
                                        <name lexicalForm="out" startPosition="4970" length="3" fullyQualifiedName="out" identifier="out"/>
                                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="4963" length="6" fullyQualifiedName="System" identifier="System"/>
                                      </expression>
                                      <name lexicalForm="println" startPosition="4986" length="7" fullyQualifiedName="println" identifier="println"/>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="JavaAST:BreakStatement" lexicalForm="break;" startPosition="5057" length="6"/>
                                  <statements xsi:type="JavaAST:SwitchCase" lexicalForm="case Client2Server.LOGIN_OK :" startPosition="5072" length="29">
                                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="Client2Server.LOGIN_OK" startPosition="5077" length="22" fullyQualifiedName="Client2Server.LOGIN_OK">
                                      <name lexicalForm="LOGIN_OK" startPosition="5091" length="8" fullyQualifiedName="LOGIN_OK" identifier="LOGIN_OK"/>
                                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Client2Server" startPosition="5077" length="13" fullyQualifiedName="Client2Server" identifier="Client2Server"/>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="JavaAST:BreakStatement" lexicalForm="break;" startPosition="5111" length="6"/>
                                </statements>
                              </body>
                              <expression xsi:type="JavaAST:SimpleName" lexicalForm="try_again" startPosition="5142" length="9" fullyQualifiedName="try_again" identifier="try_again"/>
                            </statements>
                            <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Presence pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1);" startPosition="5160" length="70">
                              <fragments lexicalForm="pres = new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1)" startPosition="5169" length="60">
                                <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Presence(Const.AVAILABLE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Available&quot;, 1)" startPosition="5176" length="53">
                                  <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.AVAILABLE" startPosition="5189" length="15" fullyQualifiedName="Const.AVAILABLE">
                                    <name lexicalForm="AVAILABLE" startPosition="5195" length="9" fullyQualifiedName="AVAILABLE" identifier="AVAILABLE"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="5189" length="5" fullyQualifiedName="Const" identifier="Const"/>
                                  </arguments>
                                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Available&quot;" startPosition="5214" length="11" escapedValue="&quot;Available&quot;" literalValue="Available"/>
                                  <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="1" startPosition="5227" length="1" token="1"/>
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Presence" startPosition="5180" length="8">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Presence" startPosition="5180" length="8" fullyQualifiedName="Presence" identifier="Presence"/>
                                  </type>
                                </initializer>
                                <name lexicalForm="pres" startPosition="5169" length="4" fullyQualifiedName="pres" identifier="pres" declaration="true"/>
                              </fragments>
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="Presence" startPosition="5160" length="8">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="Presence" startPosition="5160" length="8" fullyQualifiedName="Presence" identifier="Presence"/>
                              </type>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="pres.setFrom(uid);" startPosition="5237" length="18">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="pres.setFrom(uid)" startPosition="5237" length="17">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="5250" length="3" fullyQualifiedName="uid" identifier="uid"/>
                                <expression xsi:type="JavaAST:SimpleName" lexicalForm="pres" startPosition="5237" length="4" fullyQualifiedName="pres" identifier="pres"/>
                                <name lexicalForm="setFrom" startPosition="5242" length="7" fullyQualifiedName="setFrom" identifier="setFrom"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().send(pres);" startPosition="5262" length="27">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().send(pres)" startPosition="5262" length="26">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="pres" startPosition="5283" length="4" fullyQualifiedName="pres" identifier="pres"/>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="5262" length="15">
                                  <name lexicalForm="getConnection" startPosition="5262" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="send" startPosition="5278" length="4" fullyQualifiedName="send" identifier="send"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="incomingPresence(pres);" startPosition="5296" length="23">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="incomingPresence(pres)" startPosition="5296" length="22">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="pres" startPosition="5313" length="4" fullyQualifiedName="pres" identifier="pres"/>
                                <name lexicalForm="incomingPresence" startPosition="5296" length="16" fullyQualifiedName="incomingPresence" identifier="incomingPresence"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().send(IQRoster.createGetRequest());" startPosition="5326" length="50">
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().send(IQRoster.createGetRequest())" startPosition="5326" length="49">
                                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="IQRoster.createGetRequest()" startPosition="5347" length="27">
                                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="IQRoster" startPosition="5347" length="8" fullyQualifiedName="IQRoster" identifier="IQRoster"/>
                                  <name lexicalForm="createGetRequest" startPosition="5356" length="16" fullyQualifiedName="createGetRequest" identifier="createGetRequest"/>
                                </arguments>
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="5326" length="15">
                                  <name lexicalForm="getConnection" startPosition="5326" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="send" startPosition="5342" length="4" fullyQualifiedName="send" identifier="send"/>
                              </expression>
                            </statements>
                            <statements xsi:type="JavaAST:SynchronizedStatement" lexicalForm="synchronized (Jabber.this) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="5383" length="85">
                              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Jabber.this.state = new ConnectedState();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="5410" length="58">
                                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="Jabber.this.state = new ConnectedState();" startPosition="5419" length="41">
                                  <expression xsi:type="JavaAST:Assignment" lexicalForm="Jabber.this.state = new ConnectedState()" startPosition="5419" length="40" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" operator="=">
                                    <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="Jabber.this.state" startPosition="5419" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0">
                                      <expression xsi:type="JavaAST:ThisExpression" lexicalForm="Jabber.this" startPosition="5419" length="11" resolvedType="//@compilationUnits.13/@types.0">
                                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Jabber" startPosition="5419" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
                                      </expression>
                                      <name lexicalForm="state" startPosition="5431" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state"/>
                                    </leftHandSide>
                                    <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new ConnectedState()" startPosition="5439" length="20" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.1">
                                      <type xsi:type="JavaAST:SimpleType" lexicalForm="ConnectedState" startPosition="5443" length="14" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.1">
                                        <name xsi:type="JavaAST:SimpleName" lexicalForm="ConnectedState" startPosition="5443" length="14" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.1" fullyQualifiedName="ConnectedState" identifier="ConnectedState"/>
                                      </type>
                                    </rightHandSide>
                                  </expression>
                                </statements>
                              </body>
                              <expression xsi:type="JavaAST:ThisExpression" lexicalForm="Jabber.this" startPosition="5397" length="11" resolvedType="//@compilationUnits.13/@types.0">
                                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Jabber" startPosition="5397" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
                              </expression>
                            </statements>
                          </body>
                        </statements>
                      </body>
                      <name lexicalForm="run" startPosition="3669" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                      <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3664" length="4" code="void"/>
                    </bodyDeclarations>
                  </anonymousClassDeclaration>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Thread" startPosition="3642" length="6">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Thread" startPosition="3642" length="6" fullyQualifiedName="Thread" identifier="Thread"/>
                  </type>
                </expression>
                <name lexicalForm="start" startPosition="5573" length="5" fullyQualifiedName="start" identifier="start"/>
              </expression>
            </statements>
          </body>
          <name lexicalForm="login" startPosition="3571" length="5" fullyQualifiedName="login" identifier="login" declaration="true"/>
          <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3566" length="4" code="void"/>
          <parameters lexicalForm="final java.lang.String uid" startPosition="3577" length="26">
            <name lexicalForm="uid" startPosition="3600" length="3" fullyQualifiedName="uid" identifier="uid" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="3583" length="16">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="3583" length="16" fullyQualifiedName="java.lang.String">
                <name lexicalForm="String" startPosition="3593" length="6" fullyQualifiedName="String" identifier="String"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="3583" length="9" fullyQualifiedName="java.lang">
                  <name lexicalForm="lang" startPosition="3588" length="4" fullyQualifiedName="lang" identifier="lang"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3583" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="3577" length="5" final="true"/>
          </parameters>
          <parameters lexicalForm="final java.lang.String pwd" startPosition="3605" length="26">
            <name lexicalForm="pwd" startPosition="3628" length="3" fullyQualifiedName="pwd" identifier="pwd" declaration="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="3611" length="16">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="3611" length="16" fullyQualifiedName="java.lang.String">
                <name lexicalForm="String" startPosition="3621" length="6" fullyQualifiedName="String" identifier="String"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="3611" length="9" fullyQualifiedName="java.lang">
                  <name lexicalForm="lang" startPosition="3616" length="4" fullyQualifiedName="lang" identifier="lang"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3611" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="3605" length="5" final="true"/>
          </parameters>
        </bodyDeclarations>
        <name lexicalForm="DisconnectedState" startPosition="3523" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2" fullyQualifiedName="DisconnectedState" identifier="DisconnectedState" declaration="true"/>
        <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="State" startPosition="3549" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0">
          <name xsi:type="JavaAST:SimpleName" lexicalForm="State" startPosition="3549" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="State" identifier="State"/>
        </superclassType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private State state = new DisconnectedState();" startPosition="5592" length="46">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="5592" length="7" private="true"/>
        <fragments lexicalForm="state = new DisconnectedState()" startPosition="5606" length="31">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new DisconnectedState()" startPosition="5614" length="23" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2">
            <type xsi:type="JavaAST:SimpleType" lexicalForm="DisconnectedState" startPosition="5618" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="DisconnectedState" startPosition="5618" length="17" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.2" fullyQualifiedName="DisconnectedState" identifier="DisconnectedState"/>
            </type>
          </initializer>
          <name lexicalForm="state" startPosition="5606" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="State" startPosition="5600" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0">
          <name xsi:type="JavaAST:SimpleName" lexicalForm="State" startPosition="5600" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="State" identifier="State"/>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.lang.String uid = null;" startPosition="5641" length="36">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="5641" length="7" private="true"/>
        <fragments lexicalForm="uid = null" startPosition="5666" length="10">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="5672" length="4"/>
          <name lexicalForm="uid" startPosition="5666" length="3" fullyQualifiedName="uid" identifier="uid" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="5649" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="5649" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="5659" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="5649" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="5654" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="5649" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private com.jabberwookie.Client2Server connection;" startPosition="5680" length="50">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="5680" length="7" private="true"/>
        <fragments lexicalForm="connection" startPosition="5719" length="10">
          <name lexicalForm="connection" startPosition="5719" length="10" fullyQualifiedName="connection" identifier="connection" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="com.jabberwookie.Client2Server" startPosition="5688" length="30">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.Client2Server" startPosition="5688" length="30" fullyQualifiedName="com.jabberwookie.Client2Server">
            <name lexicalForm="Client2Server" startPosition="5705" length="13" fullyQualifiedName="Client2Server" identifier="Client2Server"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="5688" length="16" fullyQualifiedName="com.jabberwookie">
              <name lexicalForm="jabberwookie" startPosition="5692" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="5688" length="3" fullyQualifiedName="com" identifier="com"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public Jabber() {&#xA;&#x9;&#x9;setName(&quot;Jabber&quot;);&#xA;&#x9;}" startPosition="5733" length="41" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5733" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;setName(&quot;Jabber&quot;);&#xA;&#x9;}" startPosition="5749" length="25">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setName(&quot;Jabber&quot;);" startPosition="5753" length="18">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setName(&quot;Jabber&quot;)" startPosition="5753" length="17">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Jabber&quot;" startPosition="5761" length="8" escapedValue="&quot;Jabber&quot;" literalValue="Jabber"/>
              <name lexicalForm="setName" startPosition="5753" length="7" fullyQualifiedName="setName" identifier="setName"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="Jabber" startPosition="5740" length="6" fullyQualifiedName="Jabber" identifier="Jabber"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void login(java.lang.String uid, java.lang.String pwd) {&#xA;&#x9;&#x9;this.uid = uid;&#xA;&#x9;&#x9;state.login(uid, pwd);&#xA;&#x9;}" startPosition="5777" length="109">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5777" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.uid = uid;&#xA;&#x9;&#x9;state.login(uid, pwd);&#xA;&#x9;}" startPosition="5839" length="47">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.uid = uid;" startPosition="5843" length="15">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.uid = uid" startPosition="5843" length="14" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.uid" startPosition="5843" length="8">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5843" length="4" resolvedType="//@compilationUnits.13/@types.0"/>
                <name lexicalForm="uid" startPosition="5848" length="3" fullyQualifiedName="uid" identifier="uid"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="5854" length="3" fullyQualifiedName="uid" identifier="uid"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="state.login(uid, pwd);" startPosition="5861" length="22">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="state.login(uid, pwd)" startPosition="5861" length="21">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="5873" length="3" fullyQualifiedName="uid" identifier="uid"/>
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="pwd" startPosition="5878" length="3" fullyQualifiedName="pwd" identifier="pwd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="state" startPosition="5861" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state"/>
              <name lexicalForm="login" startPosition="5867" length="5" fullyQualifiedName="login" identifier="login"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="login" startPosition="5789" length="5" fullyQualifiedName="login" identifier="login" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5784" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String uid" startPosition="5795" length="20">
          <name lexicalForm="uid" startPosition="5812" length="3" fullyQualifiedName="uid" identifier="uid" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="5795" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="5795" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="5805" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="5795" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="5800" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="5795" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="java.lang.String pwd" startPosition="5817" length="20">
          <name lexicalForm="pwd" startPosition="5834" length="3" fullyQualifiedName="pwd" identifier="pwd" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="5817" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="5817" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="5827" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="5817" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="5822" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="5817" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void logout() {&#xA;&#x9;&#x9;state.logout();&#xA;&#x9;}" startPosition="5889" length="43">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5889" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;state.logout();&#xA;&#x9;}" startPosition="5910" length="22">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="state.logout();" startPosition="5914" length="15">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="state.logout()" startPosition="5914" length="14">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="state" startPosition="5914" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state"/>
              <name lexicalForm="logout" startPosition="5920" length="6" fullyQualifiedName="logout" identifier="logout"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="logout" startPosition="5901" length="6" fullyQualifiedName="logout" identifier="logout" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5896" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addContact(im.model.Contact c) {&#xA;&#x9;&#x9;state.addContact(c);&#xA;&#x9;}" startPosition="5935" length="70">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5935" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;state.addContact(c);&#xA;&#x9;}" startPosition="5978" length="27">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="state.addContact(c);" startPosition="5982" length="20">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="state.addContact(c)" startPosition="5982" length="19">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="5999" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="state" startPosition="5982" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state"/>
              <name lexicalForm="addContact" startPosition="5988" length="10" fullyQualifiedName="addContact" identifier="addContact"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="addContact" startPosition="5947" length="10" fullyQualifiedName="addContact" identifier="addContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5942" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact c" startPosition="5958" length="18">
          <name lexicalForm="c" startPosition="5975" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="5958" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="5958" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="5967" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="5958" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="5961" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5958" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeContact(im.model.Contact c) {&#xA;&#x9;&#x9;state.removeContact(c);&#xA;&#x9;}" startPosition="6008" length="76">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="6008" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;state.removeContact(c);&#xA;&#x9;}" startPosition="6054" length="30">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="state.removeContact(c);" startPosition="6058" length="23">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="state.removeContact(c)" startPosition="6058" length="22">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="6078" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="state" startPosition="6058" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state"/>
              <name lexicalForm="removeContact" startPosition="6064" length="13" fullyQualifiedName="removeContact" identifier="removeContact"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="removeContact" startPosition="6020" length="13" fullyQualifiedName="removeContact" identifier="removeContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="6015" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact c" startPosition="6034" length="18">
          <name lexicalForm="c" startPosition="6051" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="6034" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="6034" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="6043" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="6034" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="6037" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="6034" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void send(im.model.Message msg) {&#xA;&#x9;&#x9;state.send(msg);&#xA;&#x9;}" startPosition="6087" length="62">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="6087" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;state.send(msg);&#xA;&#x9;}" startPosition="6126" length="23">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="state.send(msg);" startPosition="6130" length="16">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="state.send(msg)" startPosition="6130" length="15">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="6141" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="state" startPosition="6130" length="5" resolvedType="//@compilationUnits.13/@types.0/@bodyDeclarations.0" fullyQualifiedName="state" identifier="state"/>
              <name lexicalForm="send" startPosition="6136" length="4" fullyQualifiedName="send" identifier="send"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="send" startPosition="6099" length="4" fullyQualifiedName="send" identifier="send" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="6094" length="4" code="void"/>
        <parameters lexicalForm="im.model.Message msg" startPosition="6104" length="20">
          <name lexicalForm="msg" startPosition="6121" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="6104" length="16" resolvedType="//@compilationUnits.10/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="6104" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
              <name lexicalForm="Message" startPosition="6113" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="6104" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="6107" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="6104" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private boolean registerUser(java.lang.String user, java.lang.String pwd) {&#xA;&#x9;&#x9;System.out.println(&quot;Registering &quot; + user + &quot; at &quot;&#xA;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable info = IQRegister&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getRequiredRegInfo(getConnection());&#xA;&#x9;&#x9;&#x9;String key;&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;key = (String) e.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;if (key.equals(Const.USERNAME))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.PASSWORD))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, pwd);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;Chunk chunk = getConnection().send(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRegister.createSetRequest(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().getServerName(), info), 30000);&#xA;&#x9;&#x9;&#x9;return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return false;&#xA;&#x9;}" startPosition="6152" length="1062">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="6152" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;System.out.println(&quot;Registering &quot; + user + &quot; at &quot;&#xA;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable info = IQRegister&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getRequiredRegInfo(getConnection());&#xA;&#x9;&#x9;&#x9;String key;&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;key = (String) e.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;if (key.equals(Const.USERNAME))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.PASSWORD))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, pwd);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;Chunk chunk = getConnection().send(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRegister.createSetRequest(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().getServerName(), info), 30000);&#xA;&#x9;&#x9;&#x9;return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return false;&#xA;&#x9;}" startPosition="6226" length="988">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Registering &quot; + user + &quot; at &quot;&#xA;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName());" startPosition="6230" length="89">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Registering &quot; + user + &quot; at &quot;&#xA;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName())" startPosition="6230" length="88">
              <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Registering &quot; + user + &quot; at &quot;&#xA;&#x9;&#x9;&#x9;&#x9;+ getConnection().getServerName()" startPosition="6249" length="68" operator="+">
                <extendedOperands xsi:type="JavaAST:StringLiteral" lexicalForm="&quot; at &quot;" startPosition="6273" length="6" escapedValue="&quot; at &quot;" literalValue=" at "/>
                <extendedOperands xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().getServerName()" startPosition="6286" length="31">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="6286" length="15">
                    <name lexicalForm="getConnection" startPosition="6286" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                  </expression>
                  <name lexicalForm="getServerName" startPosition="6302" length="13" fullyQualifiedName="getServerName" identifier="getServerName"/>
                </extendedOperands>
                <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Registering &quot;" startPosition="6249" length="14" escapedValue="&quot;Registering &quot;" literalValue="Registering "/>
                <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="user" startPosition="6266" length="4" fullyQualifiedName="user" identifier="user"/>
              </arguments>
              <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="6230" length="10" fullyQualifiedName="System.out">
                <name lexicalForm="out" startPosition="6237" length="3" fullyQualifiedName="out" identifier="out"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="6230" length="6" fullyQualifiedName="System" identifier="System"/>
              </expression>
              <name lexicalForm="println" startPosition="6241" length="7" fullyQualifiedName="println" identifier="println"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;java.util.Hashtable info = IQRegister&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getRequiredRegInfo(getConnection());&#xA;&#x9;&#x9;&#x9;String key;&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;key = (String) e.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;if (key.equals(Const.USERNAME))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.PASSWORD))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, pwd);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;Chunk chunk = getConnection().send(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRegister.createSetRequest(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().getServerName(), info), 30000);&#xA;&#x9;&#x9;&#x9;return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}" startPosition="6322" length="873">
            <catchClauses lexicalForm="catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}" startPosition="7106" length="89">
              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}" startPosition="7136" length="59">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="im.InstantMessagingClient.getInstance().report(e);" startPosition="7141" length="50">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance().report(e)" startPosition="7141" length="49">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="7188" length="1" fullyQualifiedName="e" identifier="e"/>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="7141" length="39" resolvedType="//@compilationUnits.2/@types.0">
                      <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="7141" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                        <name lexicalForm="InstantMessagingClient" startPosition="7144" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="7141" length="2" fullyQualifiedName="im" identifier="im"/>
                      </expression>
                      <name lexicalForm="getInstance" startPosition="7167" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                    </expression>
                    <name lexicalForm="report" startPosition="7181" length="6" fullyQualifiedName="report" identifier="report"/>
                  </expression>
                </statements>
              </body>
              <exception lexicalForm="java.io.IOException e" startPosition="7113" length="21">
                <name lexicalForm="e" startPosition="7133" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="7113" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="7113" length="19" fullyQualifiedName="java.io.IOException">
                    <name lexicalForm="IOException" startPosition="7121" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="7113" length="7" fullyQualifiedName="java.io">
                      <name lexicalForm="io" startPosition="7118" length="2" fullyQualifiedName="io" identifier="io"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="7113" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </exception>
            </catchClauses>
            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;java.util.Hashtable info = IQRegister&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getRequiredRegInfo(getConnection());&#xA;&#x9;&#x9;&#x9;String key;&#xA;&#x9;&#x9;&#x9;for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;key = (String) e.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;if (key.equals(Const.USERNAME))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.PASSWORD))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, pwd);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;Chunk chunk = getConnection().send(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRegister.createSetRequest(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().getServerName(), info), 30000);&#xA;&#x9;&#x9;&#x9;return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));&#xA;&#x9;&#x9;}" startPosition="6326" length="779">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Hashtable info = IQRegister&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getRequiredRegInfo(getConnection());" startPosition="6331" length="80">
                <fragments lexicalForm="info = IQRegister&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getRequiredRegInfo(getConnection())" startPosition="6351" length="59">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="IQRegister&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.getRequiredRegInfo(getConnection())" startPosition="6358" length="52">
                    <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="6394" length="15">
                      <name lexicalForm="getConnection" startPosition="6394" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                    </arguments>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="IQRegister" startPosition="6358" length="10" fullyQualifiedName="IQRegister" identifier="IQRegister"/>
                    <name lexicalForm="getRequiredRegInfo" startPosition="6375" length="18" fullyQualifiedName="getRequiredRegInfo" identifier="getRequiredRegInfo"/>
                  </initializer>
                  <name lexicalForm="info" startPosition="6351" length="4" fullyQualifiedName="info" identifier="info" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Hashtable" startPosition="6331" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Hashtable" startPosition="6331" length="19" fullyQualifiedName="java.util.Hashtable">
                    <name lexicalForm="Hashtable" startPosition="6341" length="9" fullyQualifiedName="Hashtable" identifier="Hashtable"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="6331" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="6336" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="6331" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String key;" startPosition="6415" length="11">
                <fragments lexicalForm="key" startPosition="6422" length="3">
                  <name lexicalForm="key" startPosition="6422" length="3" fullyQualifiedName="key" identifier="key" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="6415" length="6">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="6415" length="6" fullyQualifiedName="String" identifier="String"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;key = (String) e.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;if (key.equals(Const.USERNAME))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.PASSWORD))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, pwd);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);&#xA;&#x9;&#x9;&#x9;}" startPosition="6430" length="476">
                <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;key = (String) e.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;if (key.equals(Const.USERNAME))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.PASSWORD))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, pwd);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);&#xA;&#x9;&#x9;&#x9;}" startPosition="6496" length="410">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="key = (String) e.nextElement();" startPosition="6502" length="31">
                    <expression xsi:type="JavaAST:Assignment" lexicalForm="key = (String) e.nextElement()" startPosition="6502" length="30" operator="=">
                      <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="key" startPosition="6502" length="3" fullyQualifiedName="key" identifier="key"/>
                      <rightHandSide xsi:type="JavaAST:CastExpression" lexicalForm="(String) e.nextElement()" startPosition="6508" length="24">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.nextElement()" startPosition="6517" length="15">
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="6517" length="1" fullyQualifiedName="e" identifier="e"/>
                          <name lexicalForm="nextElement" startPosition="6519" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                        </expression>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="6509" length="6">
                          <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="6509" length="6" fullyQualifiedName="String" identifier="String"/>
                        </type>
                      </rightHandSide>
                    </expression>
                  </statements>
                  <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (key.equals(Const.USERNAME))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.PASSWORD))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, pwd);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);" startPosition="6538" length="363">
                    <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (key.equals(Const.PASSWORD))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, pwd);&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);" startPosition="6605" length="296">
                      <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (key.equals(Const.EMAIL))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#xA;&#x9;&#x9;&#x9;&#x9;else if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);" startPosition="6671" length="230">
                        <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (key.equals(Const.INSTRUCTIONS))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);" startPosition="6775" length="126">
                          <elseStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key);" startPosition="6832" length="69">
                            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.err&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Unknown registration parameter: &quot; + key)" startPosition="6832" length="68">
                              <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Unknown registration parameter: &quot; + key" startPosition="6859" length="40" operator="+">
                                <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Unknown registration parameter: &quot;" startPosition="6859" length="34" escapedValue="&quot;Unknown registration parameter: &quot;" literalValue="Unknown registration parameter: "/>
                                <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="key" startPosition="6896" length="3" fullyQualifiedName="key" identifier="key"/>
                              </arguments>
                              <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.err" startPosition="6832" length="10" fullyQualifiedName="System.err">
                                <name lexicalForm="err" startPosition="6839" length="3" fullyQualifiedName="err" identifier="err"/>
                                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="6832" length="6" fullyQualifiedName="System" identifier="System"/>
                              </expression>
                              <name lexicalForm="println" startPosition="6851" length="7" fullyQualifiedName="println" identifier="println"/>
                            </expression>
                          </elseStatement>
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="key.equals(Const.INSTRUCTIONS)" startPosition="6779" length="30">
                            <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.INSTRUCTIONS" startPosition="6790" length="18" fullyQualifiedName="Const.INSTRUCTIONS">
                              <name lexicalForm="INSTRUCTIONS" startPosition="6796" length="12" fullyQualifiedName="INSTRUCTIONS" identifier="INSTRUCTIONS"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="6790" length="5" fullyQualifiedName="Const" identifier="Const"/>
                            </arguments>
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="key" startPosition="6779" length="3" fullyQualifiedName="key" identifier="key"/>
                            <name lexicalForm="equals" startPosition="6783" length="6" fullyQualifiedName="equals" identifier="equals"/>
                          </expression>
                          <thenStatement xsi:type="JavaAST:EmptyStatement" lexicalForm=";" startPosition="6816" length="1"/>
                        </elseStatement>
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="key.equals(Const.EMAIL)" startPosition="6675" length="23">
                          <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.EMAIL" startPosition="6686" length="11" fullyQualifiedName="Const.EMAIL">
                            <name lexicalForm="EMAIL" startPosition="6692" length="5" fullyQualifiedName="EMAIL" identifier="EMAIL"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="6686" length="5" fullyQualifiedName="Const" identifier="Const"/>
                          </arguments>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="key" startPosition="6675" length="3" fullyQualifiedName="key" identifier="key"/>
                          <name lexicalForm="equals" startPosition="6679" length="6" fullyQualifiedName="equals" identifier="equals"/>
                        </expression>
                        <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="info.put(key, user + &quot;@&quot; + getConnection().getServerName());" startPosition="6705" length="60">
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="info.put(key, user + &quot;@&quot; + getConnection().getServerName())" startPosition="6705" length="59">
                            <arguments xsi:type="JavaAST:SimpleName" lexicalForm="key" startPosition="6714" length="3" fullyQualifiedName="key" identifier="key"/>
                            <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="user + &quot;@&quot; + getConnection().getServerName()" startPosition="6719" length="44" operator="+">
                              <extendedOperands xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().getServerName()" startPosition="6732" length="31">
                                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="6732" length="15">
                                  <name lexicalForm="getConnection" startPosition="6732" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                                </expression>
                                <name lexicalForm="getServerName" startPosition="6748" length="13" fullyQualifiedName="getServerName" identifier="getServerName"/>
                              </extendedOperands>
                              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="user" startPosition="6719" length="4" fullyQualifiedName="user" identifier="user"/>
                              <rightOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;@&quot;" startPosition="6726" length="3" escapedValue="&quot;@&quot;" literalValue="@"/>
                            </arguments>
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="info" startPosition="6705" length="4" fullyQualifiedName="info" identifier="info"/>
                            <name lexicalForm="put" startPosition="6710" length="3" fullyQualifiedName="put" identifier="put"/>
                          </expression>
                        </thenStatement>
                      </elseStatement>
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="key.equals(Const.PASSWORD)" startPosition="6609" length="26">
                        <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.PASSWORD" startPosition="6620" length="14" fullyQualifiedName="Const.PASSWORD">
                          <name lexicalForm="PASSWORD" startPosition="6626" length="8" fullyQualifiedName="PASSWORD" identifier="PASSWORD"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="6620" length="5" fullyQualifiedName="Const" identifier="Const"/>
                        </arguments>
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="key" startPosition="6609" length="3" fullyQualifiedName="key" identifier="key"/>
                        <name lexicalForm="equals" startPosition="6613" length="6" fullyQualifiedName="equals" identifier="equals"/>
                      </expression>
                      <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="info.put(key, pwd);" startPosition="6642" length="19">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="info.put(key, pwd)" startPosition="6642" length="18">
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="key" startPosition="6651" length="3" fullyQualifiedName="key" identifier="key"/>
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="pwd" startPosition="6656" length="3" fullyQualifiedName="pwd" identifier="pwd"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="info" startPosition="6642" length="4" fullyQualifiedName="info" identifier="info"/>
                          <name lexicalForm="put" startPosition="6647" length="3" fullyQualifiedName="put" identifier="put"/>
                        </expression>
                      </thenStatement>
                    </elseStatement>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="key.equals(Const.USERNAME)" startPosition="6542" length="26">
                      <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.USERNAME" startPosition="6553" length="14" fullyQualifiedName="Const.USERNAME">
                        <name lexicalForm="USERNAME" startPosition="6559" length="8" fullyQualifiedName="USERNAME" identifier="USERNAME"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="6553" length="5" fullyQualifiedName="Const" identifier="Const"/>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="key" startPosition="6542" length="3" fullyQualifiedName="key" identifier="key"/>
                      <name lexicalForm="equals" startPosition="6546" length="6" fullyQualifiedName="equals" identifier="equals"/>
                    </expression>
                    <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="info.put(key, user);" startPosition="6575" length="20">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="info.put(key, user)" startPosition="6575" length="19">
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="key" startPosition="6584" length="3" fullyQualifiedName="key" identifier="key"/>
                        <arguments xsi:type="JavaAST:SimpleName" lexicalForm="user" startPosition="6589" length="4" fullyQualifiedName="user" identifier="user"/>
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="info" startPosition="6575" length="4" fullyQualifiedName="info" identifier="info"/>
                        <name lexicalForm="put" startPosition="6580" length="3" fullyQualifiedName="put" identifier="put"/>
                      </expression>
                    </thenStatement>
                  </statements>
                </body>
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.hasMoreElements()" startPosition="6474" length="19">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="6474" length="1" fullyQualifiedName="e" identifier="e"/>
                  <name lexicalForm="hasMoreElements" startPosition="6476" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
                </expression>
                <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration e = info.keys()" startPosition="6435" length="37">
                  <fragments lexicalForm="e = info.keys()" startPosition="6457" length="15">
                    <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="info.keys()" startPosition="6461" length="11">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="info" startPosition="6461" length="4" fullyQualifiedName="info" identifier="info"/>
                      <name lexicalForm="keys" startPosition="6466" length="4" fullyQualifiedName="keys" identifier="keys"/>
                    </initializer>
                    <name lexicalForm="e" startPosition="6457" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                  </fragments>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="6435" length="21">
                    <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="6435" length="21" fullyQualifiedName="java.util.Enumeration">
                      <name lexicalForm="Enumeration" startPosition="6445" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="6435" length="9" fullyQualifiedName="java.util">
                        <name lexicalForm="util" startPosition="6440" length="4" fullyQualifiedName="util" identifier="util"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="6435" length="4" fullyQualifiedName="java" identifier="java"/>
                      </qualifier>
                    </name>
                  </type>
                </initializers>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Chunk chunk = getConnection().send(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRegister.createSetRequest(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().getServerName(), info), 30000);" startPosition="6910" length="124">
                <fragments lexicalForm="chunk = getConnection().send(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRegister.createSetRequest(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().getServerName(), info), 30000)" startPosition="6916" length="117">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().send(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRegister.createSetRequest(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().getServerName(), info), 30000)" startPosition="6924" length="109">
                    <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="IQRegister.createSetRequest(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getConnection().getServerName(), info)" startPosition="6951" length="74">
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().getServerName()" startPosition="6987" length="31">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="6987" length="15">
                          <name lexicalForm="getConnection" startPosition="6987" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                        </expression>
                        <name lexicalForm="getServerName" startPosition="7003" length="13" fullyQualifiedName="getServerName" identifier="getServerName"/>
                      </arguments>
                      <arguments xsi:type="JavaAST:SimpleName" lexicalForm="info" startPosition="7020" length="4" fullyQualifiedName="info" identifier="info"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="IQRegister" startPosition="6951" length="10" fullyQualifiedName="IQRegister" identifier="IQRegister"/>
                      <name lexicalForm="createSetRequest" startPosition="6962" length="16" fullyQualifiedName="createSetRequest" identifier="createSetRequest"/>
                    </arguments>
                    <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="30000" startPosition="7027" length="5" token="30000"/>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="6924" length="15">
                      <name lexicalForm="getConnection" startPosition="6924" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                    </expression>
                    <name lexicalForm="send" startPosition="6940" length="4" fullyQualifiedName="send" identifier="send"/>
                  </initializer>
                  <name lexicalForm="chunk" startPosition="6916" length="5" fullyQualifiedName="chunk" identifier="chunk" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Chunk" startPosition="6910" length="5">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Chunk" startPosition="6910" length="5" fullyQualifiedName="Chunk" identifier="Chunk"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));" startPosition="7038" length="63">
                <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="(chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT))" startPosition="7045" length="55">
                  <expression xsi:type="JavaAST:InfixExpression" lexicalForm="chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT)" startPosition="7046" length="53" operator="&amp;&amp;">
                    <leftOperand xsi:type="JavaAST:InfixExpression" lexicalForm="chunk != null" startPosition="7046" length="13" operator="!=">
                      <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="chunk" startPosition="7046" length="5" fullyQualifiedName="chunk" identifier="chunk"/>
                      <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="7055" length="4"/>
                    </leftOperand>
                    <rightOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="chunk.getType().equals(Const.RESULT)" startPosition="7063" length="36">
                      <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.RESULT" startPosition="7086" length="12" fullyQualifiedName="Const.RESULT">
                        <name lexicalForm="RESULT" startPosition="7092" length="6" fullyQualifiedName="RESULT" identifier="RESULT"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="7086" length="5" fullyQualifiedName="Const" identifier="Const"/>
                      </arguments>
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="chunk.getType()" startPosition="7063" length="15">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="chunk" startPosition="7063" length="5" fullyQualifiedName="chunk" identifier="chunk"/>
                        <name lexicalForm="getType" startPosition="7069" length="7" fullyQualifiedName="getType" identifier="getType"/>
                      </expression>
                      <name lexicalForm="equals" startPosition="7079" length="6" fullyQualifiedName="equals" identifier="equals"/>
                    </rightOperand>
                  </expression>
                </expression>
              </statements>
            </body>
          </statements>
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return false;" startPosition="7198" length="13">
            <expression xsi:type="JavaAST:BooleanLiteral" lexicalForm="false" startPosition="7205" length="5"/>
          </statements>
        </body>
        <name lexicalForm="registerUser" startPosition="6168" length="12" fullyQualifiedName="registerUser" identifier="registerUser" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="6160" length="7" code="boolean"/>
        <parameters lexicalForm="java.lang.String user" startPosition="6181" length="21">
          <name lexicalForm="user" startPosition="6198" length="4" fullyQualifiedName="user" identifier="user" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="6181" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="6181" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="6191" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="6181" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="6186" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="6181" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="java.lang.String pwd" startPosition="6204" length="20">
          <name lexicalForm="pwd" startPosition="6221" length="3" fullyQualifiedName="pwd" identifier="pwd" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="6204" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="6204" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="6214" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="6204" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="6209" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="6204" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private java.lang.String stripResource(java.lang.String jid) {&#xA;&#x9;&#x9;if (uid.equals(jid)) {&#xA;&#x9;&#x9;&#x9;return jid;&#xA;&#x9;&#x9;} else { // strip resource bit if remote user&#xA;&#x9;&#x9;&#x9;java.util.Vector strip = com.ssttr.util.Strings.tokenize(jid, '/');&#xA;&#x9;&#x9;&#x9;return (String) strip.elementAt(0);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="7217" length="267">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="7217" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (uid.equals(jid)) {&#xA;&#x9;&#x9;&#x9;return jid;&#xA;&#x9;&#x9;} else { // strip resource bit if remote user&#xA;&#x9;&#x9;&#x9;java.util.Vector strip = com.ssttr.util.Strings.tokenize(jid, '/');&#xA;&#x9;&#x9;&#x9;return (String) strip.elementAt(0);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="7278" length="206">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (uid.equals(jid)) {&#xA;&#x9;&#x9;&#x9;return jid;&#xA;&#x9;&#x9;} else { // strip resource bit if remote user&#xA;&#x9;&#x9;&#x9;java.util.Vector strip = com.ssttr.util.Strings.tokenize(jid, '/');&#xA;&#x9;&#x9;&#x9;return (String) strip.elementAt(0);&#xA;&#x9;&#x9;}" startPosition="7282" length="199">
            <elseStatement xsi:type="JavaAST:Block" lexicalForm="{ // strip resource bit if remote user&#xA;&#x9;&#x9;&#x9;java.util.Vector strip = com.ssttr.util.Strings.tokenize(jid, '/');&#xA;&#x9;&#x9;&#x9;return (String) strip.elementAt(0);&#xA;&#x9;&#x9;}" startPosition="7329" length="152">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Vector strip = com.ssttr.util.Strings.tokenize(jid, '/');" startPosition="7371" length="67">
                <fragments lexicalForm="strip = com.ssttr.util.Strings.tokenize(jid, '/')" startPosition="7388" length="49">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="com.ssttr.util.Strings.tokenize(jid, '/')" startPosition="7396" length="41">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="jid" startPosition="7428" length="3" fullyQualifiedName="jid" identifier="jid"/>
                    <arguments xsi:type="JavaAST:CharacterLiteral" lexicalForm="'/'" startPosition="7433" length="3" charValue="47" escapedValue="'/'"/>
                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr.util.Strings" startPosition="7396" length="22" fullyQualifiedName="com.ssttr.util.Strings">
                      <name lexicalForm="Strings" startPosition="7411" length="7" fullyQualifiedName="Strings" identifier="Strings"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr.util" startPosition="7396" length="14" fullyQualifiedName="com.ssttr.util">
                        <name lexicalForm="util" startPosition="7406" length="4" fullyQualifiedName="util" identifier="util"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr" startPosition="7396" length="9" fullyQualifiedName="com.ssttr">
                          <name lexicalForm="ssttr" startPosition="7400" length="5" fullyQualifiedName="ssttr" identifier="ssttr"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="7396" length="3" fullyQualifiedName="com" identifier="com"/>
                        </qualifier>
                      </qualifier>
                    </expression>
                    <name lexicalForm="tokenize" startPosition="7419" length="8" fullyQualifiedName="tokenize" identifier="tokenize"/>
                  </initializer>
                  <name lexicalForm="strip" startPosition="7388" length="5" fullyQualifiedName="strip" identifier="strip" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Vector" startPosition="7371" length="16">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Vector" startPosition="7371" length="16" fullyQualifiedName="java.util.Vector">
                    <name lexicalForm="Vector" startPosition="7381" length="6" fullyQualifiedName="Vector" identifier="Vector"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="7371" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="7376" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="7371" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return (String) strip.elementAt(0);" startPosition="7442" length="35">
                <expression xsi:type="JavaAST:CastExpression" lexicalForm="(String) strip.elementAt(0)" startPosition="7449" length="27">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="strip.elementAt(0)" startPosition="7458" length="18">
                    <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="7474" length="1" token="0"/>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="strip" startPosition="7458" length="5" fullyQualifiedName="strip" identifier="strip"/>
                    <name lexicalForm="elementAt" startPosition="7464" length="9" fullyQualifiedName="elementAt" identifier="elementAt"/>
                  </expression>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="7450" length="6">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="7450" length="6" fullyQualifiedName="String" identifier="String"/>
                  </type>
                </expression>
              </statements>
            </elseStatement>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="uid.equals(jid)" startPosition="7286" length="15">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="jid" startPosition="7297" length="3" fullyQualifiedName="jid" identifier="jid"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="7286" length="3" fullyQualifiedName="uid" identifier="uid"/>
              <name lexicalForm="equals" startPosition="7290" length="6" fullyQualifiedName="equals" identifier="equals"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;return jid;&#xA;&#x9;&#x9;}" startPosition="7303" length="20">
              <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return jid;" startPosition="7308" length="11">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="jid" startPosition="7315" length="3" fullyQualifiedName="jid" identifier="jid"/>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="stripResource" startPosition="7242" length="13" fullyQualifiedName="stripResource" identifier="stripResource" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="7225" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="7225" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="7235" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="7225" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="7230" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="7225" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
        <parameters lexicalForm="java.lang.String jid" startPosition="7256" length="20">
          <name lexicalForm="jid" startPosition="7273" length="3" fullyQualifiedName="jid" identifier="jid" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="7256" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="7256" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="7266" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="7256" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="7261" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="7256" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void incomingIQ(com.jabberwookie.ns.jabber.IQ iq) {&#xA;&#x9;&#x9;java.util.Enumeration children = iq.getChildren().elements();&#xA;&#x9;&#x9;while (children.hasMoreElements()) {&#xA;&#x9;&#x9;&#x9;com.ssttr.xml.XMLElement el = (com.ssttr.xml.XMLElement) children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;if (el instanceof IQRoster) {&#xA;&#x9;&#x9;&#x9;&#x9;for (java.util.Enumeration items = el.enumerateChildren(); items&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster.Item item = (IQRoster.Item) items.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Roster Item: &quot; + item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setUserId(item.getJID());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setName(item.getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Unknown iq element: &quot; + el);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="7487" length="861">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="7487" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;java.util.Enumeration children = iq.getChildren().elements();&#xA;&#x9;&#x9;while (children.hasMoreElements()) {&#xA;&#x9;&#x9;&#x9;com.ssttr.xml.XMLElement el = (com.ssttr.xml.XMLElement) children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;if (el instanceof IQRoster) {&#xA;&#x9;&#x9;&#x9;&#x9;for (java.util.Enumeration items = el.enumerateChildren(); items&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster.Item item = (IQRoster.Item) items.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Roster Item: &quot; + item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setUserId(item.getJID());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setName(item.getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Unknown iq element: &quot; + el);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="7544" length="804">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Enumeration children = iq.getChildren().elements();" startPosition="7548" length="61">
            <fragments lexicalForm="children = iq.getChildren().elements()" startPosition="7570" length="38">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="iq.getChildren().elements()" startPosition="7581" length="27">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="iq.getChildren()" startPosition="7581" length="16">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="iq" startPosition="7581" length="2" fullyQualifiedName="iq" identifier="iq"/>
                  <name lexicalForm="getChildren" startPosition="7584" length="11" fullyQualifiedName="getChildren" identifier="getChildren"/>
                </expression>
                <name lexicalForm="elements" startPosition="7598" length="8" fullyQualifiedName="elements" identifier="elements"/>
              </initializer>
              <name lexicalForm="children" startPosition="7570" length="8" fullyQualifiedName="children" identifier="children" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="7548" length="21">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="7548" length="21" fullyQualifiedName="java.util.Enumeration">
                <name lexicalForm="Enumeration" startPosition="7558" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="7548" length="9" fullyQualifiedName="java.util">
                  <name lexicalForm="util" startPosition="7553" length="4" fullyQualifiedName="util" identifier="util"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="7548" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:WhileStatement" lexicalForm="while (children.hasMoreElements()) {&#xA;&#x9;&#x9;&#x9;com.ssttr.xml.XMLElement el = (com.ssttr.xml.XMLElement) children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;if (el instanceof IQRoster) {&#xA;&#x9;&#x9;&#x9;&#x9;for (java.util.Enumeration items = el.enumerateChildren(); items&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster.Item item = (IQRoster.Item) items.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Roster Item: &quot; + item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setUserId(item.getJID());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setName(item.getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Unknown iq element: &quot; + el);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="7612" length="733">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;com.ssttr.xml.XMLElement el = (com.ssttr.xml.XMLElement) children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();&#xA;&#x9;&#x9;&#x9;if (el instanceof IQRoster) {&#xA;&#x9;&#x9;&#x9;&#x9;for (java.util.Enumeration items = el.enumerateChildren(); items&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster.Item item = (IQRoster.Item) items.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Roster Item: &quot; + item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setUserId(item.getJID());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setName(item.getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Unknown iq element: &quot; + el);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="7647" length="698">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="com.ssttr.xml.XMLElement el = (com.ssttr.xml.XMLElement) children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement();" startPosition="7652" length="86">
                <fragments lexicalForm="el = (com.ssttr.xml.XMLElement) children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement()" startPosition="7677" length="60">
                  <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(com.ssttr.xml.XMLElement) children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement()" startPosition="7682" length="55">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.nextElement()" startPosition="7709" length="28">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="children" startPosition="7709" length="8" fullyQualifiedName="children" identifier="children"/>
                      <name lexicalForm="nextElement" startPosition="7724" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                    </expression>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="com.ssttr.xml.XMLElement" startPosition="7683" length="24">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr.xml.XMLElement" startPosition="7683" length="24" fullyQualifiedName="com.ssttr.xml.XMLElement">
                        <name lexicalForm="XMLElement" startPosition="7697" length="10" fullyQualifiedName="XMLElement" identifier="XMLElement"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr.xml" startPosition="7683" length="13" fullyQualifiedName="com.ssttr.xml">
                          <name lexicalForm="xml" startPosition="7693" length="3" fullyQualifiedName="xml" identifier="xml"/>
                          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr" startPosition="7683" length="9" fullyQualifiedName="com.ssttr">
                            <name lexicalForm="ssttr" startPosition="7687" length="5" fullyQualifiedName="ssttr" identifier="ssttr"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="7683" length="3" fullyQualifiedName="com" identifier="com"/>
                          </qualifier>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="el" startPosition="7677" length="2" fullyQualifiedName="el" identifier="el" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="com.ssttr.xml.XMLElement" startPosition="7652" length="24">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr.xml.XMLElement" startPosition="7652" length="24" fullyQualifiedName="com.ssttr.xml.XMLElement">
                    <name lexicalForm="XMLElement" startPosition="7666" length="10" fullyQualifiedName="XMLElement" identifier="XMLElement"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr.xml" startPosition="7652" length="13" fullyQualifiedName="com.ssttr.xml">
                      <name lexicalForm="xml" startPosition="7662" length="3" fullyQualifiedName="xml" identifier="xml"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.ssttr" startPosition="7652" length="9" fullyQualifiedName="com.ssttr">
                        <name lexicalForm="ssttr" startPosition="7656" length="5" fullyQualifiedName="ssttr" identifier="ssttr"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="7652" length="3" fullyQualifiedName="com" identifier="com"/>
                      </qualifier>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (el instanceof IQRoster) {&#xA;&#x9;&#x9;&#x9;&#x9;for (java.util.Enumeration items = el.enumerateChildren(); items&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster.Item item = (IQRoster.Item) items.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Roster Item: &quot; + item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setUserId(item.getJID());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setName(item.getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Unknown iq element: &quot; + el);&#xA;&#x9;&#x9;&#x9;}" startPosition="7742" length="599">
                <elseStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Unknown iq element: &quot; + el);&#xA;&#x9;&#x9;&#x9;}" startPosition="8282" length="59">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Unknown iq element: &quot; + el);" startPosition="8288" length="48">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Unknown iq element: &quot; + el)" startPosition="8288" length="47">
                      <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Unknown iq element: &quot; + el" startPosition="8307" length="27" operator="+">
                        <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Unknown iq element: &quot;" startPosition="8307" length="22" escapedValue="&quot;Unknown iq element: &quot;" literalValue="Unknown iq element: "/>
                        <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="el" startPosition="8332" length="2" fullyQualifiedName="el" identifier="el"/>
                      </arguments>
                      <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="8288" length="10" fullyQualifiedName="System.out">
                        <name lexicalForm="out" startPosition="8295" length="3" fullyQualifiedName="out" identifier="out"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="8288" length="6" fullyQualifiedName="System" identifier="System"/>
                      </expression>
                      <name lexicalForm="println" startPosition="8299" length="7" fullyQualifiedName="println" identifier="println"/>
                    </expression>
                  </statements>
                </elseStatement>
                <expression xsi:type="JavaAST:InstanceofExpression" lexicalForm="el instanceof IQRoster" startPosition="7746" length="22">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="el" startPosition="7746" length="2" fullyQualifiedName="el" identifier="el"/>
                  <rightOperand xsi:type="JavaAST:SimpleType" lexicalForm="IQRoster" startPosition="7760" length="8">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="IQRoster" startPosition="7760" length="8" fullyQualifiedName="IQRoster" identifier="IQRoster"/>
                  </rightOperand>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;for (java.util.Enumeration items = el.enumerateChildren(); items&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster.Item item = (IQRoster.Item) items.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Roster Item: &quot; + item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setUserId(item.getJID());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setName(item.getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="7770" length="506">
                  <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration items = el.enumerateChildren(); items&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster.Item item = (IQRoster.Item) items.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Roster Item: &quot; + item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setUserId(item.getJID());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setName(item.getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="7776" length="495">
                    <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IQRoster.Item item = (IQRoster.Item) items.nextElement();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Roster Item: &quot; + item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setUserId(item.getJID());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;c.setName(item.getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="7868" length="403">
                      <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="IQRoster.Item item = (IQRoster.Item) items.nextElement();" startPosition="7875" length="57">
                        <fragments lexicalForm="item = (IQRoster.Item) items.nextElement()" startPosition="7889" length="42">
                          <initializer xsi:type="JavaAST:CastExpression" lexicalForm="(IQRoster.Item) items.nextElement()" startPosition="7896" length="35">
                            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="items.nextElement()" startPosition="7912" length="19">
                              <expression xsi:type="JavaAST:SimpleName" lexicalForm="items" startPosition="7912" length="5" fullyQualifiedName="items" identifier="items"/>
                              <name lexicalForm="nextElement" startPosition="7918" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                            </expression>
                            <type xsi:type="JavaAST:SimpleType" lexicalForm="IQRoster.Item" startPosition="7897" length="13">
                              <name xsi:type="JavaAST:QualifiedName" lexicalForm="IQRoster.Item" startPosition="7897" length="13" fullyQualifiedName="IQRoster.Item">
                                <name lexicalForm="Item" startPosition="7906" length="4" fullyQualifiedName="Item" identifier="Item"/>
                                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="IQRoster" startPosition="7897" length="8" fullyQualifiedName="IQRoster" identifier="IQRoster"/>
                              </name>
                            </type>
                          </initializer>
                          <name lexicalForm="item" startPosition="7889" length="4" fullyQualifiedName="item" identifier="item" declaration="true"/>
                        </fragments>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="IQRoster.Item" startPosition="7875" length="13">
                          <name xsi:type="JavaAST:QualifiedName" lexicalForm="IQRoster.Item" startPosition="7875" length="13" fullyQualifiedName="IQRoster.Item">
                            <name lexicalForm="Item" startPosition="7884" length="4" fullyQualifiedName="Item" identifier="Item"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="IQRoster" startPosition="7875" length="8" fullyQualifiedName="IQRoster" identifier="IQRoster"/>
                          </name>
                        </type>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Roster Item: &quot; + item);" startPosition="7938" length="43">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Roster Item: &quot; + item)" startPosition="7938" length="42">
                          <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Roster Item: &quot; + item" startPosition="7957" length="22" operator="+">
                            <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Roster Item: &quot;" startPosition="7957" length="15" escapedValue="&quot;Roster Item: &quot;" literalValue="Roster Item: "/>
                            <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="item" startPosition="7975" length="4" fullyQualifiedName="item" identifier="item"/>
                          </arguments>
                          <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="7938" length="10" fullyQualifiedName="System.out">
                            <name lexicalForm="out" startPosition="7945" length="3" fullyQualifiedName="out" identifier="out"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="7938" length="6" fullyQualifiedName="System" identifier="System"/>
                          </expression>
                          <name lexicalForm="println" startPosition="7949" length="7" fullyQualifiedName="println" identifier="println"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Contact c = new im.model.Contact();" startPosition="7987" length="44">
                        <fragments lexicalForm="c = new im.model.Contact()" startPosition="8004" length="26">
                          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new im.model.Contact()" startPosition="8008" length="22" resolvedType="//@compilationUnits.7/@types.0">
                            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="8012" length="16" resolvedType="//@compilationUnits.7/@types.0">
                              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="8012" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                                <name lexicalForm="Contact" startPosition="8021" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="8012" length="8" fullyQualifiedName="im.model">
                                  <name lexicalForm="model" startPosition="8015" length="5" fullyQualifiedName="model" identifier="model"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8012" length="2" fullyQualifiedName="im" identifier="im"/>
                                </qualifier>
                              </name>
                            </type>
                          </initializer>
                          <name lexicalForm="c" startPosition="8004" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
                        </fragments>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="7987" length="16" resolvedType="//@compilationUnits.7/@types.0">
                          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="7987" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                            <name lexicalForm="Contact" startPosition="7996" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="7987" length="8" fullyQualifiedName="im.model">
                              <name lexicalForm="model" startPosition="7990" length="5" fullyQualifiedName="model" identifier="model"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="7987" length="2" fullyQualifiedName="im" identifier="im"/>
                            </qualifier>
                          </name>
                        </type>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setNetwork(this);" startPosition="8037" length="19">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setNetwork(this)" startPosition="8037" length="18">
                          <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="8050" length="4" resolvedType="//@compilationUnits.13/@types.0"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="8037" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setNetwork" startPosition="8039" length="10" fullyQualifiedName="setNetwork" identifier="setNetwork"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setUserId(item.getJID());" startPosition="8062" length="27">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setUserId(item.getJID())" startPosition="8062" length="26">
                          <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="item.getJID()" startPosition="8074" length="13">
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="item" startPosition="8074" length="4" fullyQualifiedName="item" identifier="item"/>
                            <name lexicalForm="getJID" startPosition="8079" length="6" fullyQualifiedName="getJID" identifier="getJID"/>
                          </arguments>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="8062" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setUserId" startPosition="8064" length="9" fullyQualifiedName="setUserId" identifier="setUserId"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setName(item.getItemName());" startPosition="8095" length="30">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setName(item.getItemName())" startPosition="8095" length="29">
                          <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="item.getItemName()" startPosition="8105" length="18">
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="item" startPosition="8105" length="4" fullyQualifiedName="item" identifier="item"/>
                            <name lexicalForm="getItemName" startPosition="8110" length="11" fullyQualifiedName="getItemName" identifier="getItemName"/>
                          </arguments>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="8095" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setName" startPosition="8097" length="7" fullyQualifiedName="setName" identifier="setName"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setRecvContact(c);" startPosition="8131" length="18">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setRecvContact(c)" startPosition="8131" length="17">
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="8146" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setRecvContact" startPosition="8131" length="14" fullyQualifiedName="setRecvContact" identifier="setRecvContact"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="8155" length="110">
                        <expression xsi:type="JavaAST:InfixExpression" lexicalForm="item.getSubscription().equals(Const.NONE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (item.getAsk() == null)" startPosition="8159" length="75" operator="&amp;&amp;">
                          <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="item.getSubscription().equals(Const.NONE)" startPosition="8159" length="41">
                            <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.NONE" startPosition="8189" length="10" fullyQualifiedName="Const.NONE">
                              <name lexicalForm="NONE" startPosition="8195" length="4" fullyQualifiedName="NONE" identifier="NONE"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="8189" length="5" fullyQualifiedName="Const" identifier="Const"/>
                            </arguments>
                            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="item.getSubscription()" startPosition="8159" length="22">
                              <expression xsi:type="JavaAST:SimpleName" lexicalForm="item" startPosition="8159" length="4" fullyQualifiedName="item" identifier="item"/>
                              <name lexicalForm="getSubscription" startPosition="8164" length="15" fullyQualifiedName="getSubscription" identifier="getSubscription"/>
                            </expression>
                            <name lexicalForm="equals" startPosition="8182" length="6" fullyQualifiedName="equals" identifier="equals"/>
                          </leftOperand>
                          <rightOperand xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="(item.getAsk() == null)" startPosition="8211" length="23">
                            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="item.getAsk() == null" startPosition="8212" length="21" operator="==">
                              <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="item.getAsk()" startPosition="8212" length="13">
                                <expression xsi:type="JavaAST:SimpleName" lexicalForm="item" startPosition="8212" length="4" fullyQualifiedName="item" identifier="item"/>
                                <name lexicalForm="getAsk" startPosition="8217" length="6" fullyQualifiedName="getAsk" identifier="getAsk"/>
                              </leftOperand>
                              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="8229" length="4"/>
                            </expression>
                          </rightOperand>
                        </expression>
                        <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;addContact(c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="8236" length="29">
                          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="addContact(c);" startPosition="8244" length="14">
                            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="addContact(c)" startPosition="8244" length="13">
                              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="8255" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                              <name lexicalForm="addContact" startPosition="8244" length="10" fullyQualifiedName="addContact" identifier="addContact"/>
                            </expression>
                          </statements>
                        </thenStatement>
                      </statements>
                    </body>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="items&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.hasMoreElements()" startPosition="7835" length="30">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="items" startPosition="7835" length="5" fullyQualifiedName="items" identifier="items"/>
                      <name lexicalForm="hasMoreElements" startPosition="7848" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
                    </expression>
                    <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration items = el.enumerateChildren()" startPosition="7781" length="52">
                      <fragments lexicalForm="items = el.enumerateChildren()" startPosition="7803" length="30">
                        <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="el.enumerateChildren()" startPosition="7811" length="22">
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="el" startPosition="7811" length="2" fullyQualifiedName="el" identifier="el"/>
                          <name lexicalForm="enumerateChildren" startPosition="7814" length="17" fullyQualifiedName="enumerateChildren" identifier="enumerateChildren"/>
                        </initializer>
                        <name lexicalForm="items" startPosition="7803" length="5" fullyQualifiedName="items" identifier="items" declaration="true"/>
                      </fragments>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="7781" length="21">
                        <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="7781" length="21" fullyQualifiedName="java.util.Enumeration">
                          <name lexicalForm="Enumeration" startPosition="7791" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="7781" length="9" fullyQualifiedName="java.util">
                            <name lexicalForm="util" startPosition="7786" length="4" fullyQualifiedName="util" identifier="util"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="7781" length="4" fullyQualifiedName="java" identifier="java"/>
                          </qualifier>
                        </name>
                      </type>
                    </initializers>
                  </statements>
                </thenStatement>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="children.hasMoreElements()" startPosition="7619" length="26">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="children" startPosition="7619" length="8" fullyQualifiedName="children" identifier="children"/>
              <name lexicalForm="hasMoreElements" startPosition="7628" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="incomingIQ" startPosition="7499" length="10" fullyQualifiedName="incomingIQ" identifier="incomingIQ" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="7494" length="4" code="void"/>
        <parameters lexicalForm="com.jabberwookie.ns.jabber.IQ iq" startPosition="7510" length="32">
          <name lexicalForm="iq" startPosition="7540" length="2" fullyQualifiedName="iq" identifier="iq" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="com.jabberwookie.ns.jabber.IQ" startPosition="7510" length="29">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns.jabber.IQ" startPosition="7510" length="29" fullyQualifiedName="com.jabberwookie.ns.jabber.IQ">
              <name lexicalForm="IQ" startPosition="7537" length="2" fullyQualifiedName="IQ" identifier="IQ"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns.jabber" startPosition="7510" length="26" fullyQualifiedName="com.jabberwookie.ns.jabber">
                <name lexicalForm="jabber" startPosition="7530" length="6" fullyQualifiedName="jabber" identifier="jabber"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns" startPosition="7510" length="19" fullyQualifiedName="com.jabberwookie.ns">
                  <name lexicalForm="ns" startPosition="7527" length="2" fullyQualifiedName="ns" identifier="ns"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="7510" length="16" fullyQualifiedName="com.jabberwookie">
                    <name lexicalForm="jabberwookie" startPosition="7514" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="7510" length="3" fullyQualifiedName="com" identifier="com"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void incomingMessage(com.jabberwookie.ns.jabber.Message message) {&#xA;&#x9;&#x9;System.out.println(&quot;Message: &quot; + message);&#xA;&#x9;&#x9;if (message.getBody() == null) {&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;msg.setSender(stripResource(message.getFrom()));&#xA;&#x9;&#x9;msg.setRecipient(message.getTo());&#xA;&#x9;&#x9;msg.setContent(message.getBody());&#xA;&#x9;&#x9;setRecvMsg(msg);&#xA;&#x9;}" startPosition="8351" length="364">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="8351" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;System.out.println(&quot;Message: &quot; + message);&#xA;&#x9;&#x9;if (message.getBody() == null) {&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;msg.setSender(stripResource(message.getFrom()));&#xA;&#x9;&#x9;msg.setRecipient(message.getTo());&#xA;&#x9;&#x9;msg.setContent(message.getBody());&#xA;&#x9;&#x9;setRecvMsg(msg);&#xA;&#x9;}" startPosition="8423" length="292">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Message: &quot; + message);" startPosition="8427" length="42">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Message: &quot; + message)" startPosition="8427" length="41">
              <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Message: &quot; + message" startPosition="8446" length="21" operator="+">
                <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Message: &quot;" startPosition="8446" length="11" escapedValue="&quot;Message: &quot;" literalValue="Message: "/>
                <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="8460" length="7" fullyQualifiedName="message" identifier="message"/>
              </arguments>
              <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="8427" length="10" fullyQualifiedName="System.out">
                <name lexicalForm="out" startPosition="8434" length="3" fullyQualifiedName="out" identifier="out"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="8427" length="6" fullyQualifiedName="System" identifier="System"/>
              </expression>
              <name lexicalForm="println" startPosition="8438" length="7" fullyQualifiedName="println" identifier="println"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (message.getBody() == null) {&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}" startPosition="8472" length="47">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="message.getBody() == null" startPosition="8476" length="25" operator="==">
              <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="message.getBody()" startPosition="8476" length="17">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="8476" length="7" fullyQualifiedName="message" identifier="message"/>
                <name lexicalForm="getBody" startPosition="8484" length="7" fullyQualifiedName="getBody" identifier="getBody"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="8497" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}" startPosition="8503" length="16">
              <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return;" startPosition="8508" length="7"/>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Message msg = new im.model.Message();" startPosition="8522" length="46">
            <fragments lexicalForm="msg = new im.model.Message()" startPosition="8539" length="28">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new im.model.Message()" startPosition="8545" length="22" resolvedType="//@compilationUnits.10/@types.0">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="8549" length="16" resolvedType="//@compilationUnits.10/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="8549" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                    <name lexicalForm="Message" startPosition="8558" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="8549" length="8" fullyQualifiedName="im.model">
                      <name lexicalForm="model" startPosition="8552" length="5" fullyQualifiedName="model" identifier="model"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8549" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </initializer>
              <name lexicalForm="msg" startPosition="8539" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="8522" length="16" resolvedType="//@compilationUnits.10/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="8522" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                <name lexicalForm="Message" startPosition="8531" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="8522" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="8525" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8522" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.setSender(stripResource(message.getFrom()));" startPosition="8571" length="48">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.setSender(stripResource(message.getFrom()))" startPosition="8571" length="47">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="stripResource(message.getFrom())" startPosition="8585" length="32">
                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="message.getFrom()" startPosition="8599" length="17">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="8599" length="7" fullyQualifiedName="message" identifier="message"/>
                  <name lexicalForm="getFrom" startPosition="8607" length="7" fullyQualifiedName="getFrom" identifier="getFrom"/>
                </arguments>
                <name lexicalForm="stripResource" startPosition="8585" length="13" fullyQualifiedName="stripResource" identifier="stripResource"/>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="8571" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
              <name lexicalForm="setSender" startPosition="8575" length="9" fullyQualifiedName="setSender" identifier="setSender"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.setRecipient(message.getTo());" startPosition="8622" length="34">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.setRecipient(message.getTo())" startPosition="8622" length="33">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="message.getTo()" startPosition="8639" length="15">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="8639" length="7" fullyQualifiedName="message" identifier="message"/>
                <name lexicalForm="getTo" startPosition="8647" length="5" fullyQualifiedName="getTo" identifier="getTo"/>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="8622" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
              <name lexicalForm="setRecipient" startPosition="8626" length="12" fullyQualifiedName="setRecipient" identifier="setRecipient"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.setContent(message.getBody());" startPosition="8659" length="34">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.setContent(message.getBody())" startPosition="8659" length="33">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="message.getBody()" startPosition="8674" length="17">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="message" startPosition="8674" length="7" fullyQualifiedName="message" identifier="message"/>
                <name lexicalForm="getBody" startPosition="8682" length="7" fullyQualifiedName="getBody" identifier="getBody"/>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="8659" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
              <name lexicalForm="setContent" startPosition="8663" length="10" fullyQualifiedName="setContent" identifier="setContent"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setRecvMsg(msg);" startPosition="8696" length="16">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setRecvMsg(msg)" startPosition="8696" length="15">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="8707" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
              <name lexicalForm="setRecvMsg" startPosition="8696" length="10" fullyQualifiedName="setRecvMsg" identifier="setRecvMsg"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="incomingMessage" startPosition="8363" length="15" fullyQualifiedName="incomingMessage" identifier="incomingMessage" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="8358" length="4" code="void"/>
        <parameters lexicalForm="com.jabberwookie.ns.jabber.Message message" startPosition="8379" length="42">
          <name lexicalForm="message" startPosition="8414" length="7" fullyQualifiedName="message" identifier="message" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="com.jabberwookie.ns.jabber.Message" startPosition="8379" length="34">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns.jabber.Message" startPosition="8379" length="34" fullyQualifiedName="com.jabberwookie.ns.jabber.Message">
              <name lexicalForm="Message" startPosition="8406" length="7" fullyQualifiedName="Message" identifier="Message"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns.jabber" startPosition="8379" length="26" fullyQualifiedName="com.jabberwookie.ns.jabber">
                <name lexicalForm="jabber" startPosition="8399" length="6" fullyQualifiedName="jabber" identifier="jabber"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns" startPosition="8379" length="19" fullyQualifiedName="com.jabberwookie.ns">
                  <name lexicalForm="ns" startPosition="8396" length="2" fullyQualifiedName="ns" identifier="ns"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="8379" length="16" fullyQualifiedName="com.jabberwookie">
                    <name lexicalForm="jabberwookie" startPosition="8383" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="8379" length="3" fullyQualifiedName="com" identifier="com"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void incomingPresence(com.jabberwookie.ns.jabber.Presence presence) {&#xA;&#x9;&#x9;String type = presence.getType();&#xA;&#x9;&#x9;if (type == null)&#xA;&#x9;&#x9;&#x9;type = &quot;&quot;;&#xA;&#x9;&#x9;if (type.equals(Const.SUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to subscribe to our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.SUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to subscribe to your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to unsubscribe from our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.UNSUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to unsubscribe from your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.SUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Subscribed to: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unsubscribed from: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNAVAILABLE)) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;c.setStatus(&quot;offline&quot;);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Received presence: &quot; + presence);&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;String from = presence.getTo();&#xA;&#x9;&#x9;presence.setTo(presence.getFrom());&#xA;&#x9;&#x9;presence.setFrom(from);&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="8718" length="1737">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="8718" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;String type = presence.getType();&#xA;&#x9;&#x9;if (type == null)&#xA;&#x9;&#x9;&#x9;type = &quot;&quot;;&#xA;&#x9;&#x9;if (type.equals(Const.SUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to subscribe to our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.SUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to subscribe to your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to unsubscribe from our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.UNSUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to unsubscribe from your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.SUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Subscribed to: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unsubscribed from: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNAVAILABLE)) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;c.setStatus(&quot;offline&quot;);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Received presence: &quot; + presence);&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;String from = presence.getTo();&#xA;&#x9;&#x9;presence.setTo(presence.getFrom());&#xA;&#x9;&#x9;presence.setFrom(from);&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="8793" length="1662">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String type = presence.getType();" startPosition="8797" length="33">
            <fragments lexicalForm="type = presence.getType()" startPosition="8804" length="25">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.getType()" startPosition="8811" length="18">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="8811" length="8" fullyQualifiedName="presence" identifier="presence"/>
                <name lexicalForm="getType" startPosition="8820" length="7" fullyQualifiedName="getType" identifier="getType"/>
              </initializer>
              <name lexicalForm="type" startPosition="8804" length="4" fullyQualifiedName="type" identifier="type" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="8797" length="6">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="8797" length="6" fullyQualifiedName="String" identifier="String"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (type == null)&#xA;&#x9;&#x9;&#x9;type = &quot;&quot;;" startPosition="8833" length="31">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="type == null" startPosition="8837" length="12" operator="==">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="type" startPosition="8837" length="4" fullyQualifiedName="type" identifier="type"/>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="8845" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="type = &quot;&quot;;" startPosition="8854" length="10">
              <expression xsi:type="JavaAST:Assignment" lexicalForm="type = &quot;&quot;" startPosition="8854" length="9" operator="=">
                <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="type" startPosition="8854" length="4" fullyQualifiedName="type" identifier="type"/>
                <rightHandSide xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;&quot;" startPosition="8861" length="2" escapedValue="&quot;&quot;" literalValue=""/>
              </expression>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (type.equals(Const.SUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to subscribe to our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.SUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to subscribe to your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to unsubscribe from our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.UNSUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to unsubscribe from your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.SUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Subscribed to: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unsubscribed from: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNAVAILABLE)) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;c.setStatus(&quot;offline&quot;);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Received presence: &quot; + presence);&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}" startPosition="8867" length="1350">
            <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (type.equals(Const.UNSUBSCRIBE)) {&#xA;&#x9;&#x9;&#x9;// someone wants to unsubscribe from our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.UNSUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to unsubscribe from your presence, allowing.&quot;);&#xA;&#x9;&#x9;} else if (type.equals(Const.SUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Subscribed to: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unsubscribed from: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNAVAILABLE)) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;c.setStatus(&quot;offline&quot;);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Received presence: &quot; + presence);&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}" startPosition="9154" length="1063">
              <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (type.equals(Const.SUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Subscribed to: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNSUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unsubscribed from: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNAVAILABLE)) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;c.setStatus(&quot;offline&quot;);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Received presence: &quot; + presence);&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}" startPosition="9453" length="764">
                <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (type.equals(Const.UNSUBSCRIBED)) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unsubscribed from: &quot; + presence);&#xA;&#x9;&#x9;} else if (type.equals(Const.UNAVAILABLE)) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;c.setStatus(&quot;offline&quot;);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Received presence: &quot; + presence);&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}" startPosition="9552" length="665">
                  <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (type.equals(Const.UNAVAILABLE)) {&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;c.setStatus(&quot;offline&quot;);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Received presence: &quot; + presence);&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}" startPosition="9657" length="560">
                    <elseStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Received presence: &quot; + presence);&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}" startPosition="9886" length="331">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Received presence: &quot; + presence);" startPosition="9891" length="53">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Received presence: &quot; + presence)" startPosition="9891" length="52">
                          <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Received presence: &quot; + presence" startPosition="9910" length="32" operator="+">
                            <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Received presence: &quot;" startPosition="9910" length="21" escapedValue="&quot;Received presence: &quot;" literalValue="Received presence: "/>
                            <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="9934" length="8" fullyQualifiedName="presence" identifier="presence"/>
                          </arguments>
                          <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="9891" length="10" fullyQualifiedName="System.out">
                            <name lexicalForm="out" startPosition="9898" length="3" fullyQualifiedName="out" identifier="out"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="9891" length="6" fullyQualifiedName="System" identifier="System"/>
                          </expression>
                          <name lexicalForm="println" startPosition="9902" length="7" fullyQualifiedName="println" identifier="println"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Contact c = new im.model.Contact();" startPosition="9948" length="44">
                        <fragments lexicalForm="c = new im.model.Contact()" startPosition="9965" length="26">
                          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new im.model.Contact()" startPosition="9969" length="22" resolvedType="//@compilationUnits.7/@types.0">
                            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="9973" length="16" resolvedType="//@compilationUnits.7/@types.0">
                              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="9973" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                                <name lexicalForm="Contact" startPosition="9982" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="9973" length="8" fullyQualifiedName="im.model">
                                  <name lexicalForm="model" startPosition="9976" length="5" fullyQualifiedName="model" identifier="model"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="9973" length="2" fullyQualifiedName="im" identifier="im"/>
                                </qualifier>
                              </name>
                            </type>
                          </initializer>
                          <name lexicalForm="c" startPosition="9965" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
                        </fragments>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="9948" length="16" resolvedType="//@compilationUnits.7/@types.0">
                          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="9948" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                            <name lexicalForm="Contact" startPosition="9957" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="9948" length="8" fullyQualifiedName="im.model">
                              <name lexicalForm="model" startPosition="9951" length="5" fullyQualifiedName="model" identifier="model"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="9948" length="2" fullyQualifiedName="im" identifier="im"/>
                            </qualifier>
                          </name>
                        </type>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setNetwork(this);" startPosition="9996" length="19">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setNetwork(this)" startPosition="9996" length="18">
                          <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="10009" length="4" resolvedType="//@compilationUnits.13/@types.0"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="9996" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setNetwork" startPosition="9998" length="10" fullyQualifiedName="setNetwork" identifier="setNetwork"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setUserId(stripResource(presence.getFrom()));" startPosition="10019" length="47">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setUserId(stripResource(presence.getFrom()))" startPosition="10019" length="46">
                          <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="stripResource(presence.getFrom())" startPosition="10031" length="33">
                            <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.getFrom()" startPosition="10045" length="18">
                              <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="10045" length="8" fullyQualifiedName="presence" identifier="presence"/>
                              <name lexicalForm="getFrom" startPosition="10054" length="7" fullyQualifiedName="getFrom" identifier="getFrom"/>
                            </arguments>
                            <name lexicalForm="stripResource" startPosition="10031" length="13" fullyQualifiedName="stripResource" identifier="stripResource"/>
                          </arguments>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="10019" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setUserId" startPosition="10021" length="9" fullyQualifiedName="setUserId" identifier="setUserId"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (presence.getShow() != null)&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(presence.getShow());&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;c.setStatus(Const.AVAILABLE);" startPosition="10070" length="110">
                        <elseStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setStatus(Const.AVAILABLE);" startPosition="10151" length="29">
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setStatus(Const.AVAILABLE)" startPosition="10151" length="28">
                            <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.AVAILABLE" startPosition="10163" length="15" fullyQualifiedName="Const.AVAILABLE">
                              <name lexicalForm="AVAILABLE" startPosition="10169" length="9" fullyQualifiedName="AVAILABLE" identifier="AVAILABLE"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="10163" length="5" fullyQualifiedName="Const" identifier="Const"/>
                            </arguments>
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="10151" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                            <name lexicalForm="setStatus" startPosition="10153" length="9" fullyQualifiedName="setStatus" identifier="setStatus"/>
                          </expression>
                        </elseStatement>
                        <expression xsi:type="JavaAST:InfixExpression" lexicalForm="presence.getShow() != null" startPosition="10074" length="26" operator="!=">
                          <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.getShow()" startPosition="10074" length="18">
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="10074" length="8" fullyQualifiedName="presence" identifier="presence"/>
                            <name lexicalForm="getShow" startPosition="10083" length="7" fullyQualifiedName="getShow" identifier="getShow"/>
                          </leftOperand>
                          <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="10096" length="4"/>
                        </expression>
                        <thenStatement xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setStatus(presence.getShow());" startPosition="10106" length="32">
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setStatus(presence.getShow())" startPosition="10106" length="31">
                            <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.getShow()" startPosition="10118" length="18">
                              <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="10118" length="8" fullyQualifiedName="presence" identifier="presence"/>
                              <name lexicalForm="getShow" startPosition="10127" length="7" fullyQualifiedName="getShow" identifier="getShow"/>
                            </arguments>
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="10106" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                            <name lexicalForm="setStatus" startPosition="10108" length="9" fullyQualifiedName="setStatus" identifier="setStatus"/>
                          </expression>
                        </thenStatement>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setRecvContact(c);" startPosition="10184" length="18">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setRecvContact(c)" startPosition="10184" length="17">
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="10199" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setRecvContact" startPosition="10184" length="14" fullyQualifiedName="setRecvContact" identifier="setRecvContact"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return;" startPosition="10206" length="7"/>
                    </elseStatement>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="type.equals(Const.UNAVAILABLE)" startPosition="9661" length="30">
                      <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.UNAVAILABLE" startPosition="9673" length="17" fullyQualifiedName="Const.UNAVAILABLE">
                        <name lexicalForm="UNAVAILABLE" startPosition="9679" length="11" fullyQualifiedName="UNAVAILABLE" identifier="UNAVAILABLE"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="9673" length="5" fullyQualifiedName="Const" identifier="Const"/>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="type" startPosition="9661" length="4" fullyQualifiedName="type" identifier="type"/>
                      <name lexicalForm="equals" startPosition="9666" length="6" fullyQualifiedName="equals" identifier="equals"/>
                    </expression>
                    <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;im.model.Contact c = new im.model.Contact();&#xA;&#x9;&#x9;&#x9;c.setNetwork(this);&#xA;&#x9;&#x9;&#x9;c.setUserId(stripResource(presence.getFrom()));&#xA;&#x9;&#x9;&#x9;c.setStatus(&quot;offline&quot;);&#xA;&#x9;&#x9;&#x9;setRecvContact(c);&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;}" startPosition="9693" length="187">
                      <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Contact c = new im.model.Contact();" startPosition="9698" length="44">
                        <fragments lexicalForm="c = new im.model.Contact()" startPosition="9715" length="26">
                          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new im.model.Contact()" startPosition="9719" length="22" resolvedType="//@compilationUnits.7/@types.0">
                            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="9723" length="16" resolvedType="//@compilationUnits.7/@types.0">
                              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="9723" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                                <name lexicalForm="Contact" startPosition="9732" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="9723" length="8" fullyQualifiedName="im.model">
                                  <name lexicalForm="model" startPosition="9726" length="5" fullyQualifiedName="model" identifier="model"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="9723" length="2" fullyQualifiedName="im" identifier="im"/>
                                </qualifier>
                              </name>
                            </type>
                          </initializer>
                          <name lexicalForm="c" startPosition="9715" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
                        </fragments>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="9698" length="16" resolvedType="//@compilationUnits.7/@types.0">
                          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="9698" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
                            <name lexicalForm="Contact" startPosition="9707" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
                            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="9698" length="8" fullyQualifiedName="im.model">
                              <name lexicalForm="model" startPosition="9701" length="5" fullyQualifiedName="model" identifier="model"/>
                              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="9698" length="2" fullyQualifiedName="im" identifier="im"/>
                            </qualifier>
                          </name>
                        </type>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setNetwork(this);" startPosition="9746" length="19">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setNetwork(this)" startPosition="9746" length="18">
                          <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="9759" length="4" resolvedType="//@compilationUnits.13/@types.0"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="9746" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setNetwork" startPosition="9748" length="10" fullyQualifiedName="setNetwork" identifier="setNetwork"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setUserId(stripResource(presence.getFrom()));" startPosition="9769" length="47">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setUserId(stripResource(presence.getFrom()))" startPosition="9769" length="46">
                          <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="stripResource(presence.getFrom())" startPosition="9781" length="33">
                            <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.getFrom()" startPosition="9795" length="18">
                              <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="9795" length="8" fullyQualifiedName="presence" identifier="presence"/>
                              <name lexicalForm="getFrom" startPosition="9804" length="7" fullyQualifiedName="getFrom" identifier="getFrom"/>
                            </arguments>
                            <name lexicalForm="stripResource" startPosition="9781" length="13" fullyQualifiedName="stripResource" identifier="stripResource"/>
                          </arguments>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="9769" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setUserId" startPosition="9771" length="9" fullyQualifiedName="setUserId" identifier="setUserId"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="c.setStatus(&quot;offline&quot;);" startPosition="9820" length="23">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="c.setStatus(&quot;offline&quot;)" startPosition="9820" length="22">
                          <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;offline&quot;" startPosition="9832" length="9" escapedValue="&quot;offline&quot;" literalValue="offline"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="9820" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setStatus" startPosition="9822" length="9" fullyQualifiedName="setStatus" identifier="setStatus"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setRecvContact(c);" startPosition="9847" length="18">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setRecvContact(c)" startPosition="9847" length="17">
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="9862" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                          <name lexicalForm="setRecvContact" startPosition="9847" length="14" fullyQualifiedName="setRecvContact" identifier="setRecvContact"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return;" startPosition="9869" length="7"/>
                    </thenStatement>
                  </elseStatement>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="type.equals(Const.UNSUBSCRIBED)" startPosition="9556" length="31">
                    <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.UNSUBSCRIBED" startPosition="9568" length="18" fullyQualifiedName="Const.UNSUBSCRIBED">
                      <name lexicalForm="UNSUBSCRIBED" startPosition="9574" length="12" fullyQualifiedName="UNSUBSCRIBED" identifier="UNSUBSCRIBED"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="9568" length="5" fullyQualifiedName="Const" identifier="Const"/>
                    </arguments>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="type" startPosition="9556" length="4" fullyQualifiedName="type" identifier="type"/>
                    <name lexicalForm="equals" startPosition="9561" length="6" fullyQualifiedName="equals" identifier="equals"/>
                  </expression>
                  <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unsubscribed from: &quot; + presence);&#xA;&#x9;&#x9;}" startPosition="9589" length="62">
                    <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Unsubscribed from: &quot; + presence);" startPosition="9594" length="53">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Unsubscribed from: &quot; + presence)" startPosition="9594" length="52">
                        <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Unsubscribed from: &quot; + presence" startPosition="9613" length="32" operator="+">
                          <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Unsubscribed from: &quot;" startPosition="9613" length="21" escapedValue="&quot;Unsubscribed from: &quot;" literalValue="Unsubscribed from: "/>
                          <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="9637" length="8" fullyQualifiedName="presence" identifier="presence"/>
                        </arguments>
                        <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="9594" length="10" fullyQualifiedName="System.out">
                          <name lexicalForm="out" startPosition="9601" length="3" fullyQualifiedName="out" identifier="out"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="9594" length="6" fullyQualifiedName="System" identifier="System"/>
                        </expression>
                        <name lexicalForm="println" startPosition="9605" length="7" fullyQualifiedName="println" identifier="println"/>
                      </expression>
                    </statements>
                  </thenStatement>
                </elseStatement>
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="type.equals(Const.SUBSCRIBED)" startPosition="9457" length="29">
                  <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.SUBSCRIBED" startPosition="9469" length="16" fullyQualifiedName="Const.SUBSCRIBED">
                    <name lexicalForm="SUBSCRIBED" startPosition="9475" length="10" fullyQualifiedName="SUBSCRIBED" identifier="SUBSCRIBED"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="9469" length="5" fullyQualifiedName="Const" identifier="Const"/>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="type" startPosition="9457" length="4" fullyQualifiedName="type" identifier="type"/>
                  <name lexicalForm="equals" startPosition="9462" length="6" fullyQualifiedName="equals" identifier="equals"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Subscribed to: &quot; + presence);&#xA;&#x9;&#x9;}" startPosition="9488" length="58">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(&quot;Subscribed to: &quot; + presence);" startPosition="9493" length="49">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(&quot;Subscribed to: &quot; + presence)" startPosition="9493" length="48">
                      <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Subscribed to: &quot; + presence" startPosition="9512" length="28" operator="+">
                        <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Subscribed to: &quot;" startPosition="9512" length="17" escapedValue="&quot;Subscribed to: &quot;" literalValue="Subscribed to: "/>
                        <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="9532" length="8" fullyQualifiedName="presence" identifier="presence"/>
                      </arguments>
                      <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="9493" length="10" fullyQualifiedName="System.out">
                        <name lexicalForm="out" startPosition="9500" length="3" fullyQualifiedName="out" identifier="out"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="9493" length="6" fullyQualifiedName="System" identifier="System"/>
                      </expression>
                      <name lexicalForm="println" startPosition="9504" length="7" fullyQualifiedName="println" identifier="println"/>
                    </expression>
                  </statements>
                </thenStatement>
              </elseStatement>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="type.equals(Const.UNSUBSCRIBE)" startPosition="9158" length="30">
                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.UNSUBSCRIBE" startPosition="9170" length="17" fullyQualifiedName="Const.UNSUBSCRIBE">
                  <name lexicalForm="UNSUBSCRIBE" startPosition="9176" length="11" fullyQualifiedName="UNSUBSCRIBE" identifier="UNSUBSCRIBE"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="9170" length="5" fullyQualifiedName="Const" identifier="Const"/>
                </arguments>
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="type" startPosition="9158" length="4" fullyQualifiedName="type" identifier="type"/>
                <name lexicalForm="equals" startPosition="9163" length="6" fullyQualifiedName="equals" identifier="equals"/>
              </expression>
              <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;// someone wants to unsubscribe from our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.UNSUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to unsubscribe from your presence, allowing.&quot;);&#xA;&#x9;&#x9;}" startPosition="9190" length="257">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="presence.setType(Const.UNSUBSCRIBED);" startPosition="9302" length="37">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.setType(Const.UNSUBSCRIBED)" startPosition="9302" length="36">
                    <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.UNSUBSCRIBED" startPosition="9319" length="18" fullyQualifiedName="Const.UNSUBSCRIBED">
                      <name lexicalForm="UNSUBSCRIBED" startPosition="9325" length="12" fullyQualifiedName="UNSUBSCRIBED" identifier="UNSUBSCRIBED"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="9319" length="5" fullyQualifiedName="Const" identifier="Const"/>
                    </arguments>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="9302" length="8" fullyQualifiedName="presence" identifier="presence"/>
                    <name lexicalForm="setType" startPosition="9311" length="7" fullyQualifiedName="setType" identifier="setType"/>
                  </expression>
                </statements>
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to unsubscribe from your presence, allowing.&quot;);" startPosition="9343" length="100">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to unsubscribe from your presence, allowing.&quot;)" startPosition="9343" length="99">
                    <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to unsubscribe from your presence, allowing.&quot;" startPosition="9362" length="79" operator="+">
                      <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.getFrom()" startPosition="9362" length="18">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="9362" length="8" fullyQualifiedName="presence" identifier="presence"/>
                        <name lexicalForm="getFrom" startPosition="9371" length="7" fullyQualifiedName="getFrom" identifier="getFrom"/>
                      </leftOperand>
                      <rightOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot; wants to unsubscribe from your presence, allowing.&quot;" startPosition="9388" length="53" escapedValue="&quot; wants to unsubscribe from your presence, allowing.&quot;" literalValue=" wants to unsubscribe from your presence, allowing."/>
                    </arguments>
                    <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="9343" length="10" fullyQualifiedName="System.out">
                      <name lexicalForm="out" startPosition="9350" length="3" fullyQualifiedName="out" identifier="out"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="9343" length="6" fullyQualifiedName="System" identifier="System"/>
                    </expression>
                    <name lexicalForm="println" startPosition="9354" length="7" fullyQualifiedName="println" identifier="println"/>
                  </expression>
                </statements>
              </thenStatement>
            </elseStatement>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="type.equals(Const.SUBSCRIBE)" startPosition="8871" length="28">
              <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.SUBSCRIBE" startPosition="8883" length="15" fullyQualifiedName="Const.SUBSCRIBE">
                <name lexicalForm="SUBSCRIBE" startPosition="8889" length="9" fullyQualifiedName="SUBSCRIBE" identifier="SUBSCRIBE"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="8883" length="5" fullyQualifiedName="Const" identifier="Const"/>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="type" startPosition="8871" length="4" fullyQualifiedName="type" identifier="type"/>
              <name lexicalForm="equals" startPosition="8876" length="6" fullyQualifiedName="equals" identifier="equals"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;// someone wants to subscribe to our presence&#xA;&#x9;&#x9;&#x9;// so we slightly re-write the packet to send back&#xA;&#x9;&#x9;&#x9;presence.setType(Const.SUBSCRIBED);&#xA;&#x9;&#x9;&#x9;System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to subscribe to your presence, allowing.&quot;);&#xA;&#x9;&#x9;}" startPosition="8901" length="247">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="presence.setType(Const.SUBSCRIBED);" startPosition="9009" length="35">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.setType(Const.SUBSCRIBED)" startPosition="9009" length="34">
                  <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="Const.SUBSCRIBED" startPosition="9026" length="16" fullyQualifiedName="Const.SUBSCRIBED">
                    <name lexicalForm="SUBSCRIBED" startPosition="9032" length="10" fullyQualifiedName="SUBSCRIBED" identifier="SUBSCRIBED"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="Const" startPosition="9026" length="5" fullyQualifiedName="Const" identifier="Const"/>
                  </arguments>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="9009" length="8" fullyQualifiedName="presence" identifier="presence"/>
                  <name lexicalForm="setType" startPosition="9018" length="7" fullyQualifiedName="setType" identifier="setType"/>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to subscribe to your presence, allowing.&quot;);" startPosition="9048" length="96">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="System.out.println(presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to subscribe to your presence, allowing.&quot;)" startPosition="9048" length="95">
                  <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="presence.getFrom()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; wants to subscribe to your presence, allowing.&quot;" startPosition="9067" length="75" operator="+">
                    <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.getFrom()" startPosition="9067" length="18">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="9067" length="8" fullyQualifiedName="presence" identifier="presence"/>
                      <name lexicalForm="getFrom" startPosition="9076" length="7" fullyQualifiedName="getFrom" identifier="getFrom"/>
                    </leftOperand>
                    <rightOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot; wants to subscribe to your presence, allowing.&quot;" startPosition="9093" length="49" escapedValue="&quot; wants to subscribe to your presence, allowing.&quot;" literalValue=" wants to subscribe to your presence, allowing."/>
                  </arguments>
                  <expression xsi:type="JavaAST:QualifiedName" lexicalForm="System.out" startPosition="9048" length="10" fullyQualifiedName="System.out">
                    <name lexicalForm="out" startPosition="9055" length="3" fullyQualifiedName="out" identifier="out"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="System" startPosition="9048" length="6" fullyQualifiedName="System" identifier="System"/>
                  </expression>
                  <name lexicalForm="println" startPosition="9059" length="7" fullyQualifiedName="println" identifier="println"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String from = presence.getTo();" startPosition="10220" length="31">
            <fragments lexicalForm="from = presence.getTo()" startPosition="10227" length="23">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.getTo()" startPosition="10234" length="16">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="10234" length="8" fullyQualifiedName="presence" identifier="presence"/>
                <name lexicalForm="getTo" startPosition="10243" length="5" fullyQualifiedName="getTo" identifier="getTo"/>
              </initializer>
              <name lexicalForm="from" startPosition="10227" length="4" fullyQualifiedName="from" identifier="from" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="10220" length="6">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="10220" length="6" fullyQualifiedName="String" identifier="String"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="presence.setTo(presence.getFrom());" startPosition="10254" length="35">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.setTo(presence.getFrom())" startPosition="10254" length="34">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.getFrom()" startPosition="10269" length="18">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="10269" length="8" fullyQualifiedName="presence" identifier="presence"/>
                <name lexicalForm="getFrom" startPosition="10278" length="7" fullyQualifiedName="getFrom" identifier="getFrom"/>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="10254" length="8" fullyQualifiedName="presence" identifier="presence"/>
              <name lexicalForm="setTo" startPosition="10263" length="5" fullyQualifiedName="setTo" identifier="setTo"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="presence.setFrom(from);" startPosition="10292" length="23">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="presence.setFrom(from)" startPosition="10292" length="22">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="from" startPosition="10309" length="4" fullyQualifiedName="from" identifier="from"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="10292" length="8" fullyQualifiedName="presence" identifier="presence"/>
              <name lexicalForm="setFrom" startPosition="10301" length="7" fullyQualifiedName="setFrom" identifier="setFrom"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}" startPosition="10318" length="134">
            <catchClauses lexicalForm="catch (java.io.IOException e) {&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}" startPosition="10363" length="89">
              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;im.InstantMessagingClient.getInstance().report(e);&#xA;&#x9;&#x9;}" startPosition="10393" length="59">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="im.InstantMessagingClient.getInstance().report(e);" startPosition="10398" length="50">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance().report(e)" startPosition="10398" length="49">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="10445" length="1" fullyQualifiedName="e" identifier="e"/>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient.getInstance()" startPosition="10398" length="39" resolvedType="//@compilationUnits.2/@types.0">
                      <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="10398" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                        <name lexicalForm="InstantMessagingClient" startPosition="10401" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="10398" length="2" fullyQualifiedName="im" identifier="im"/>
                      </expression>
                      <name lexicalForm="getInstance" startPosition="10424" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                    </expression>
                    <name lexicalForm="report" startPosition="10438" length="6" fullyQualifiedName="report" identifier="report"/>
                  </expression>
                </statements>
              </body>
              <exception lexicalForm="java.io.IOException e" startPosition="10370" length="21">
                <name lexicalForm="e" startPosition="10390" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="10370" length="19">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="10370" length="19" fullyQualifiedName="java.io.IOException">
                    <name lexicalForm="IOException" startPosition="10378" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="10370" length="7" fullyQualifiedName="java.io">
                      <name lexicalForm="io" startPosition="10375" length="2" fullyQualifiedName="io" identifier="io"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="10370" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </exception>
            </catchClauses>
            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;getConnection().send(presence);&#xA;&#x9;&#x9;}" startPosition="10322" length="40">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getConnection().send(presence);" startPosition="10327" length="31">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().send(presence)" startPosition="10327" length="30">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="presence" startPosition="10348" length="8" fullyQualifiedName="presence" identifier="presence"/>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="10327" length="15">
                    <name lexicalForm="getConnection" startPosition="10327" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                  </expression>
                  <name lexicalForm="send" startPosition="10343" length="4" fullyQualifiedName="send" identifier="send"/>
                </expression>
              </statements>
            </body>
          </statements>
        </body>
        <name lexicalForm="incomingPresence" startPosition="8730" length="16" fullyQualifiedName="incomingPresence" identifier="incomingPresence" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="8725" length="4" code="void"/>
        <parameters lexicalForm="com.jabberwookie.ns.jabber.Presence presence" startPosition="8747" length="44">
          <name lexicalForm="presence" startPosition="8783" length="8" fullyQualifiedName="presence" identifier="presence" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="com.jabberwookie.ns.jabber.Presence" startPosition="8747" length="35">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns.jabber.Presence" startPosition="8747" length="35" fullyQualifiedName="com.jabberwookie.ns.jabber.Presence">
              <name lexicalForm="Presence" startPosition="8774" length="8" fullyQualifiedName="Presence" identifier="Presence"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns.jabber" startPosition="8747" length="26" fullyQualifiedName="com.jabberwookie.ns.jabber">
                <name lexicalForm="jabber" startPosition="8767" length="6" fullyQualifiedName="jabber" identifier="jabber"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.ns" startPosition="8747" length="19" fullyQualifiedName="com.jabberwookie.ns">
                  <name lexicalForm="ns" startPosition="8764" length="2" fullyQualifiedName="ns" identifier="ns"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="8747" length="16" fullyQualifiedName="com.jabberwookie">
                    <name lexicalForm="jabberwookie" startPosition="8751" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="8747" length="3" fullyQualifiedName="com" identifier="com"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="protected abstract void connect(java.lang.String host)&#xA;&#x9;&#x9;&#x9;throws java.io.IOException;" startPosition="10458" length="85">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="protected" startPosition="10458" length="9" protected="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="10468" length="8" abstract="true"/>
        <name lexicalForm="connect" startPosition="10482" length="7" fullyQualifiedName="connect" identifier="connect" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="10477" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String host" startPosition="10490" length="21">
          <name lexicalForm="host" startPosition="10507" length="4" fullyQualifiedName="host" identifier="host" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="10490" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="10490" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="10500" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="10490" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="10495" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="10490" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <thrownExceptions xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="10523" length="19" fullyQualifiedName="java.io.IOException">
          <name lexicalForm="IOException" startPosition="10531" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="10523" length="7" fullyQualifiedName="java.io">
            <name lexicalForm="io" startPosition="10528" length="2" fullyQualifiedName="io" identifier="io"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="10523" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </thrownExceptions>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getUid() {&#xA;&#x9;&#x9;return uid;&#xA;&#x9;}" startPosition="10546" length="51">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="10546" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return uid;&#xA;&#x9;}" startPosition="10579" length="18">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return uid;" startPosition="10583" length="11">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="10590" length="3" fullyQualifiedName="uid" identifier="uid"/>
          </statements>
        </body>
        <name lexicalForm="getUid" startPosition="10570" length="6" fullyQualifiedName="getUid" identifier="getUid" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="10553" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="10553" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="10563" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="10553" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="10558" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="10553" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setUid(java.lang.String uid) {&#xA;&#x9;&#x9;this.uid = uid;&#xA;&#x9;}" startPosition="10600" length="63">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="10600" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.uid = uid;&#xA;&#x9;}" startPosition="10641" length="22">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.uid = uid;" startPosition="10645" length="15">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.uid = uid" startPosition="10645" length="14" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.uid" startPosition="10645" length="8">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="10645" length="4" resolvedType="//@compilationUnits.13/@types.0"/>
                <name lexicalForm="uid" startPosition="10650" length="3" fullyQualifiedName="uid" identifier="uid"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="10656" length="3" fullyQualifiedName="uid" identifier="uid"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setUid" startPosition="10612" length="6" fullyQualifiedName="setUid" identifier="setUid" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="10607" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String uid" startPosition="10619" length="20">
          <name lexicalForm="uid" startPosition="10636" length="3" fullyQualifiedName="uid" identifier="uid" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="10619" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="10619" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="10629" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="10619" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="10624" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="10619" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public com.jabberwookie.Client2Server getConnection() {&#xA;&#x9;&#x9;return connection;&#xA;&#x9;}" startPosition="10666" length="79">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="10666" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return connection;&#xA;&#x9;}" startPosition="10720" length="25">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return connection;" startPosition="10724" length="18">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="connection" startPosition="10731" length="10" fullyQualifiedName="connection" identifier="connection"/>
          </statements>
        </body>
        <name lexicalForm="getConnection" startPosition="10704" length="13" fullyQualifiedName="getConnection" identifier="getConnection" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="com.jabberwookie.Client2Server" startPosition="10673" length="30">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.Client2Server" startPosition="10673" length="30" fullyQualifiedName="com.jabberwookie.Client2Server">
            <name lexicalForm="Client2Server" startPosition="10690" length="13" fullyQualifiedName="Client2Server" identifier="Client2Server"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="10673" length="16" fullyQualifiedName="com.jabberwookie">
              <name lexicalForm="jabberwookie" startPosition="10677" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="10673" length="3" fullyQualifiedName="com" identifier="com"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setConnection(com.jabberwookie.Client2Server connection) {&#xA;&#x9;&#x9;this.connection = connection;&#xA;&#x9;}" startPosition="10748" length="105">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="10748" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.connection = connection;&#xA;&#x9;}" startPosition="10817" length="36">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.connection = connection;" startPosition="10821" length="29">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.connection = connection" startPosition="10821" length="28" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.connection" startPosition="10821" length="15">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="10821" length="4" resolvedType="//@compilationUnits.13/@types.0"/>
                <name lexicalForm="connection" startPosition="10826" length="10" fullyQualifiedName="connection" identifier="connection"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="connection" startPosition="10839" length="10" fullyQualifiedName="connection" identifier="connection"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setConnection" startPosition="10760" length="13" fullyQualifiedName="setConnection" identifier="setConnection" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="10755" length="4" code="void"/>
        <parameters lexicalForm="com.jabberwookie.Client2Server connection" startPosition="10774" length="41">
          <name lexicalForm="connection" startPosition="10805" length="10" fullyQualifiedName="connection" identifier="connection" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="com.jabberwookie.Client2Server" startPosition="10774" length="30">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.Client2Server" startPosition="10774" length="30" fullyQualifiedName="com.jabberwookie.Client2Server">
              <name lexicalForm="Client2Server" startPosition="10791" length="13" fullyQualifiedName="Client2Server" identifier="Client2Server"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="10774" length="16" fullyQualifiedName="com.jabberwookie">
                <name lexicalForm="jabberwookie" startPosition="10778" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="10774" length="3" fullyQualifiedName="com" identifier="com"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="Jabber" startPosition="158" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="173" length="21" resolvedType="//@compilationUnits.12/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="173" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
          <name lexicalForm="Network" startPosition="187" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="173" length="13" fullyQualifiedName="im.networking">
            <name lexicalForm="networking" startPosition="176" length="10" fullyQualifiedName="networking" identifier="networking"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="173" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superclassType>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="com.jabberwookie.MessageListener" startPosition="211" length="32">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.MessageListener" startPosition="211" length="32" fullyQualifiedName="com.jabberwookie.MessageListener">
          <name lexicalForm="MessageListener" startPosition="228" length="15" fullyQualifiedName="MessageListener" identifier="MessageListener"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="211" length="16" fullyQualifiedName="com.jabberwookie">
            <name lexicalForm="jabberwookie" startPosition="215" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="211" length="3" fullyQualifiedName="com" identifier="com"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="com.jabberwookie.PresenceListener" startPosition="248" length="33">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.PresenceListener" startPosition="248" length="33" fullyQualifiedName="com.jabberwookie.PresenceListener">
          <name lexicalForm="PresenceListener" startPosition="265" length="16" fullyQualifiedName="PresenceListener" identifier="PresenceListener"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="248" length="16" fullyQualifiedName="com.jabberwookie">
            <name lexicalForm="jabberwookie" startPosition="252" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="248" length="3" fullyQualifiedName="com" identifier="com"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="com.jabberwookie.IQListener" startPosition="286" length="27">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.IQListener" startPosition="286" length="27" fullyQualifiedName="com.jabberwookie.IQListener">
          <name lexicalForm="IQListener" startPosition="303" length="10" fullyQualifiedName="IQListener" identifier="IQListener"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="286" length="16" fullyQualifiedName="com.jabberwookie">
            <name lexicalForm="jabberwookie" startPosition="290" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="286" length="3" fullyQualifiedName="com" identifier="com"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.networking.jabber.defaultjabber;&#xA;&#xA;import java.net.*;&#xA;&#xA;public class DefaultJabber extends im.networking.jabber.Jabber {&#xA;&#x9;private java.lang.String connectError = null;&#xA;&#xA;&#x9;private java.net.Socket socket = null;&#xA;&#xA;&#x9;protected void connect(java.lang.String host) throws java.io.IOException {&#xA;&#x9;&#x9;setSocket(connect(host, 5222));&#xA;&#x9;&#x9;if (getSocket() == null) {&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(connectError);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;setConnection(new com.jabberwookie.Client2Server(getSocket()&#xA;&#x9;&#x9;&#x9;&#x9;.getInputStream(), getSocket().getOutputStream()));&#xA;&#x9;&#x9;if (!getConnection().open(host, 60000)) {&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(&quot;Could not establish stream to &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ host + &quot;:5222 after 60 seconds&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private java.net.Socket connect(java.lang.String host, int port)&#xA;&#x9;&#x9;&#x9;throws java.io.IOException {&#xA;&#x9;&#x9;Socket s = null;&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;InetAddress[] hosts = InetAddress.getAllByName(host);&#xA;&#x9;&#x9;&#x9;java.util.Stack exceptions = new java.util.Stack();&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; hosts.length; i++) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s = new Socket(hosts[i], port);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;StringBuffer sb = new StringBuffer();&#xA;&#x9;&#x9;&#x9;while (!exceptions.empty()) {&#xA;&#x9;&#x9;&#x9;&#x9;sb.append(((Exception) exceptions.pop()).getMessage());&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;connectError = sb.toString();&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot; + port + &quot;)&quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return s;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.net.Socket getSocket() {&#xA;&#x9;&#x9;return socket;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setSocket(java.net.Socket socket) {&#xA;&#x9;&#x9;this.socket = socket;&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="1545">
    <package lexicalForm="package im.networking.jabber.defaultjabber;" length="43">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.jabber.defaultjabber" startPosition="8" length="34" fullyQualifiedName="im.networking.jabber.defaultjabber">
        <name lexicalForm="defaultjabber" startPosition="29" length="13" fullyQualifiedName="defaultjabber" identifier="defaultjabber"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.jabber" startPosition="8" length="20" fullyQualifiedName="im.networking.jabber">
          <name lexicalForm="jabber" startPosition="22" length="6" fullyQualifiedName="jabber" identifier="jabber"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="8" length="13" fullyQualifiedName="im.networking">
            <name lexicalForm="networking" startPosition="11" length="10" fullyQualifiedName="networking" identifier="networking"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </qualifier>
      </name>
    </package>
    <imports lexicalForm="import java.net.*;" startPosition="45" length="18" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.net" startPosition="52" length="8" fullyQualifiedName="java.net">
        <name lexicalForm="net" startPosition="57" length="3" fullyQualifiedName="net" identifier="net"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="52" length="4" fullyQualifiedName="java" identifier="java"/>
      </name>
    </imports>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class DefaultJabber extends im.networking.jabber.Jabber {&#xA;&#x9;private java.lang.String connectError = null;&#xA;&#xA;&#x9;private java.net.Socket socket = null;&#xA;&#xA;&#x9;protected void connect(java.lang.String host) throws java.io.IOException {&#xA;&#x9;&#x9;setSocket(connect(host, 5222));&#xA;&#x9;&#x9;if (getSocket() == null) {&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(connectError);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;setConnection(new com.jabberwookie.Client2Server(getSocket()&#xA;&#x9;&#x9;&#x9;&#x9;.getInputStream(), getSocket().getOutputStream()));&#xA;&#x9;&#x9;if (!getConnection().open(host, 60000)) {&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(&quot;Could not establish stream to &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ host + &quot;:5222 after 60 seconds&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private java.net.Socket connect(java.lang.String host, int port)&#xA;&#x9;&#x9;&#x9;throws java.io.IOException {&#xA;&#x9;&#x9;Socket s = null;&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;InetAddress[] hosts = InetAddress.getAllByName(host);&#xA;&#x9;&#x9;&#x9;java.util.Stack exceptions = new java.util.Stack();&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; hosts.length; i++) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s = new Socket(hosts[i], port);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;StringBuffer sb = new StringBuffer();&#xA;&#x9;&#x9;&#x9;while (!exceptions.empty()) {&#xA;&#x9;&#x9;&#x9;&#x9;sb.append(((Exception) exceptions.pop()).getMessage());&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;connectError = sb.toString();&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot; + port + &quot;)&quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return s;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.net.Socket getSocket() {&#xA;&#x9;&#x9;return socket;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setSocket(java.net.Socket socket) {&#xA;&#x9;&#x9;this.socket = socket;&#xA;&#x9;}&#xA;&#xA;}" startPosition="65" length="1479" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.14/@types.0/@name //@compilationUnits.14/@types.0/@bodyDeclarations.5/@body/@statements.0/@expression/@leftHandSide/@expression">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="65" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.lang.String connectError = null;" startPosition="131" length="45">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="131" length="7" private="true"/>
        <fragments lexicalForm="connectError = null" startPosition="156" length="19">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="171" length="4"/>
          <name lexicalForm="connectError" startPosition="156" length="12" fullyQualifiedName="connectError" identifier="connectError" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="139" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="139" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="149" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="139" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="144" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="139" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.net.Socket socket = null;" startPosition="179" length="38">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="179" length="7" private="true"/>
        <fragments lexicalForm="socket = null" startPosition="203" length="13">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="212" length="4"/>
          <name lexicalForm="socket" startPosition="203" length="6" fullyQualifiedName="socket" identifier="socket" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.net.Socket" startPosition="187" length="15">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.net.Socket" startPosition="187" length="15" fullyQualifiedName="java.net.Socket">
            <name lexicalForm="Socket" startPosition="196" length="6" fullyQualifiedName="Socket" identifier="Socket"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.net" startPosition="187" length="8" fullyQualifiedName="java.net">
              <name lexicalForm="net" startPosition="192" length="3" fullyQualifiedName="net" identifier="net"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="187" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="protected void connect(java.lang.String host) throws java.io.IOException {&#xA;&#x9;&#x9;setSocket(connect(host, 5222));&#xA;&#x9;&#x9;if (getSocket() == null) {&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(connectError);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;setConnection(new com.jabberwookie.Client2Server(getSocket()&#xA;&#x9;&#x9;&#x9;&#x9;.getInputStream(), getSocket().getOutputStream()));&#xA;&#x9;&#x9;if (!getConnection().open(host, 60000)) {&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(&quot;Could not establish stream to &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ host + &quot;:5222 after 60 seconds&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="220" length="466">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="protected" startPosition="220" length="9" protected="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;setSocket(connect(host, 5222));&#xA;&#x9;&#x9;if (getSocket() == null) {&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(connectError);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;setConnection(new com.jabberwookie.Client2Server(getSocket()&#xA;&#x9;&#x9;&#x9;&#x9;.getInputStream(), getSocket().getOutputStream()));&#xA;&#x9;&#x9;if (!getConnection().open(host, 60000)) {&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(&quot;Could not establish stream to &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ host + &quot;:5222 after 60 seconds&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="293" length="393">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setSocket(connect(host, 5222));" startPosition="297" length="31">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setSocket(connect(host, 5222))" startPosition="297" length="30">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="connect(host, 5222)" startPosition="307" length="19">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="host" startPosition="315" length="4" fullyQualifiedName="host" identifier="host"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5222" startPosition="321" length="4" token="5222"/>
                <name lexicalForm="connect" startPosition="307" length="7" fullyQualifiedName="connect" identifier="connect"/>
              </arguments>
              <name lexicalForm="setSocket" startPosition="297" length="9" fullyQualifiedName="setSocket" identifier="setSocket"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (getSocket() == null) {&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(connectError);&#xA;&#x9;&#x9;}" startPosition="331" length="78">
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="getSocket() == null" startPosition="335" length="19" operator="==">
              <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="getSocket()" startPosition="335" length="11">
                <name lexicalForm="getSocket" startPosition="335" length="9" fullyQualifiedName="getSocket" identifier="getSocket"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="350" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(connectError);&#xA;&#x9;&#x9;}" startPosition="356" length="53">
              <statements xsi:type="JavaAST:ThrowStatement" lexicalForm="throw new java.io.IOException(connectError);" startPosition="361" length="44">
                <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.io.IOException(connectError)" startPosition="367" length="37">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="connectError" startPosition="391" length="12" fullyQualifiedName="connectError" identifier="connectError"/>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="371" length="19">
                    <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="371" length="19" fullyQualifiedName="java.io.IOException">
                      <name lexicalForm="IOException" startPosition="379" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="371" length="7" fullyQualifiedName="java.io">
                        <name lexicalForm="io" startPosition="376" length="2" fullyQualifiedName="io" identifier="io"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="371" length="4" fullyQualifiedName="java" identifier="java"/>
                      </qualifier>
                    </name>
                  </type>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setConnection(new com.jabberwookie.Client2Server(getSocket()&#xA;&#x9;&#x9;&#x9;&#x9;.getInputStream(), getSocket().getOutputStream()));" startPosition="412" length="116">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setConnection(new com.jabberwookie.Client2Server(getSocket()&#xA;&#x9;&#x9;&#x9;&#x9;.getInputStream(), getSocket().getOutputStream()))" startPosition="412" length="115">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new com.jabberwookie.Client2Server(getSocket()&#xA;&#x9;&#x9;&#x9;&#x9;.getInputStream(), getSocket().getOutputStream())" startPosition="426" length="100">
                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getSocket()&#xA;&#x9;&#x9;&#x9;&#x9;.getInputStream()" startPosition="461" length="33">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getSocket()" startPosition="461" length="11">
                    <name lexicalForm="getSocket" startPosition="461" length="9" fullyQualifiedName="getSocket" identifier="getSocket"/>
                  </expression>
                  <name lexicalForm="getInputStream" startPosition="478" length="14" fullyQualifiedName="getInputStream" identifier="getInputStream"/>
                </arguments>
                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getSocket().getOutputStream()" startPosition="496" length="29">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getSocket()" startPosition="496" length="11">
                    <name lexicalForm="getSocket" startPosition="496" length="9" fullyQualifiedName="getSocket" identifier="getSocket"/>
                  </expression>
                  <name lexicalForm="getOutputStream" startPosition="508" length="15" fullyQualifiedName="getOutputStream" identifier="getOutputStream"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="com.jabberwookie.Client2Server" startPosition="430" length="30">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie.Client2Server" startPosition="430" length="30" fullyQualifiedName="com.jabberwookie.Client2Server">
                    <name lexicalForm="Client2Server" startPosition="447" length="13" fullyQualifiedName="Client2Server" identifier="Client2Server"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="com.jabberwookie" startPosition="430" length="16" fullyQualifiedName="com.jabberwookie">
                      <name lexicalForm="jabberwookie" startPosition="434" length="12" fullyQualifiedName="jabberwookie" identifier="jabberwookie"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="com" startPosition="430" length="3" fullyQualifiedName="com" identifier="com"/>
                    </qualifier>
                  </name>
                </type>
              </arguments>
              <name lexicalForm="setConnection" startPosition="412" length="13" fullyQualifiedName="setConnection" identifier="setConnection"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!getConnection().open(host, 60000)) {&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(&quot;Could not establish stream to &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ host + &quot;:5222 after 60 seconds&quot;);&#xA;&#x9;&#x9;}" startPosition="531" length="152">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!getConnection().open(host, 60000)" startPosition="535" length="34" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection().open(host, 60000)" startPosition="536" length="33">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="host" startPosition="557" length="4" fullyQualifiedName="host" identifier="host"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="60000" startPosition="563" length="5" token="60000"/>
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getConnection()" startPosition="536" length="15">
                  <name lexicalForm="getConnection" startPosition="536" length="13" fullyQualifiedName="getConnection" identifier="getConnection"/>
                </expression>
                <name lexicalForm="open" startPosition="552" length="4" fullyQualifiedName="open" identifier="open"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;throw new java.io.IOException(&quot;Could not establish stream to &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ host + &quot;:5222 after 60 seconds&quot;);&#xA;&#x9;&#x9;}" startPosition="571" length="112">
              <statements xsi:type="JavaAST:ThrowStatement" lexicalForm="throw new java.io.IOException(&quot;Could not establish stream to &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ host + &quot;:5222 after 60 seconds&quot;);" startPosition="576" length="103">
                <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.io.IOException(&quot;Could not establish stream to &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ host + &quot;:5222 after 60 seconds&quot;)" startPosition="582" length="96">
                  <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="&quot;Could not establish stream to &quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ host + &quot;:5222 after 60 seconds&quot;" startPosition="606" length="71" operator="+">
                    <extendedOperands xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;:5222 after 60 seconds&quot;" startPosition="653" length="24" escapedValue="&quot;:5222 after 60 seconds&quot;" literalValue=":5222 after 60 seconds"/>
                    <leftOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Could not establish stream to &quot;" startPosition="606" length="32" escapedValue="&quot;Could not establish stream to &quot;" literalValue="Could not establish stream to "/>
                    <rightOperand xsi:type="JavaAST:SimpleName" lexicalForm="host" startPosition="646" length="4" fullyQualifiedName="host" identifier="host"/>
                  </arguments>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="java.io.IOException" startPosition="586" length="19">
                    <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="586" length="19" fullyQualifiedName="java.io.IOException">
                      <name lexicalForm="IOException" startPosition="594" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="586" length="7" fullyQualifiedName="java.io">
                        <name lexicalForm="io" startPosition="591" length="2" fullyQualifiedName="io" identifier="io"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="586" length="4" fullyQualifiedName="java" identifier="java"/>
                      </qualifier>
                    </name>
                  </type>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="connect" startPosition="235" length="7" fullyQualifiedName="connect" identifier="connect" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="230" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String host" startPosition="243" length="21">
          <name lexicalForm="host" startPosition="260" length="4" fullyQualifiedName="host" identifier="host" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="243" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="243" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="253" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="243" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="248" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="243" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <thrownExceptions xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="273" length="19" fullyQualifiedName="java.io.IOException">
          <name lexicalForm="IOException" startPosition="281" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="273" length="7" fullyQualifiedName="java.io">
            <name lexicalForm="io" startPosition="278" length="2" fullyQualifiedName="io" identifier="io"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="273" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </thrownExceptions>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private java.net.Socket connect(java.lang.String host, int port)&#xA;&#x9;&#x9;&#x9;throws java.io.IOException {&#xA;&#x9;&#x9;Socket s = null;&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;InetAddress[] hosts = InetAddress.getAllByName(host);&#xA;&#x9;&#x9;&#x9;java.util.Stack exceptions = new java.util.Stack();&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; hosts.length; i++) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s = new Socket(hosts[i], port);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;StringBuffer sb = new StringBuffer();&#xA;&#x9;&#x9;&#x9;while (!exceptions.empty()) {&#xA;&#x9;&#x9;&#x9;&#x9;sb.append(((Exception) exceptions.pop()).getMessage());&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;connectError = sb.toString();&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot; + port + &quot;)&quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return s;&#xA;&#x9;}" startPosition="689" length="716">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="689" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;Socket s = null;&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;InetAddress[] hosts = InetAddress.getAllByName(host);&#xA;&#x9;&#x9;&#x9;java.util.Stack exceptions = new java.util.Stack();&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; hosts.length; i++) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s = new Socket(hosts[i], port);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;StringBuffer sb = new StringBuffer();&#xA;&#x9;&#x9;&#x9;while (!exceptions.empty()) {&#xA;&#x9;&#x9;&#x9;&#x9;sb.append(((Exception) exceptions.pop()).getMessage());&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;connectError = sb.toString();&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot; + port + &quot;)&quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return s;&#xA;&#x9;}" startPosition="784" length="621">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="Socket s = null;" startPosition="788" length="16">
            <fragments lexicalForm="s = null" startPosition="795" length="8">
              <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="799" length="4"/>
              <name lexicalForm="s" startPosition="795" length="1" fullyQualifiedName="s" identifier="s" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="Socket" startPosition="788" length="6">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="Socket" startPosition="788" length="6" fullyQualifiedName="Socket" identifier="Socket"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;InetAddress[] hosts = InetAddress.getAllByName(host);&#xA;&#x9;&#x9;&#x9;java.util.Stack exceptions = new java.util.Stack();&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; hosts.length; i++) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s = new Socket(hosts[i], port);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;StringBuffer sb = new StringBuffer();&#xA;&#x9;&#x9;&#x9;while (!exceptions.empty()) {&#xA;&#x9;&#x9;&#x9;&#x9;sb.append(((Exception) exceptions.pop()).getMessage());&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;connectError = sb.toString();&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot; + port + &quot;)&quot;;&#xA;&#x9;&#x9;}" startPosition="807" length="583">
            <catchClauses lexicalForm="catch (Exception e) {&#xA;&#x9;&#x9;&#x9;connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot; + port + &quot;)&quot;;&#xA;&#x9;&#x9;}" startPosition="1268" length="122">
              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot; + port + &quot;)&quot;;&#xA;&#x9;&#x9;}" startPosition="1288" length="102">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot; + port + &quot;)&quot;;" startPosition="1293" length="93">
                  <expression xsi:type="JavaAST:Assignment" lexicalForm="connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot; + port + &quot;)&quot;" startPosition="1293" length="92" operator="=">
                    <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="connectError" startPosition="1293" length="12" fullyQualifiedName="connectError" identifier="connectError"/>
                    <rightHandSide xsi:type="JavaAST:InfixExpression" lexicalForm="e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot; + port + &quot;)&quot;" startPosition="1308" length="77" operator="+">
                      <extendedOperands xsi:type="JavaAST:SimpleName" lexicalForm="host" startPosition="1356" length="4" fullyQualifiedName="host" identifier="host"/>
                      <extendedOperands xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;, &quot;" startPosition="1368" length="4" escapedValue="&quot;, &quot;" literalValue=", "/>
                      <extendedOperands xsi:type="JavaAST:SimpleName" lexicalForm="port" startPosition="1375" length="4" fullyQualifiedName="port" identifier="port"/>
                      <extendedOperands xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;)&quot;" startPosition="1382" length="3" escapedValue="&quot;)&quot;" literalValue=")"/>
                      <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="e.getMessage()" startPosition="1308" length="14">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1308" length="1" fullyQualifiedName="e" identifier="e"/>
                        <name lexicalForm="getMessage" startPosition="1310" length="10" fullyQualifiedName="getMessage" identifier="getMessage"/>
                      </leftOperand>
                      <rightOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot; at DefaultJabber.connect(&quot;" startPosition="1325" length="28" escapedValue="&quot; at DefaultJabber.connect(&quot;" literalValue=" at DefaultJabber.connect("/>
                    </rightHandSide>
                  </expression>
                </statements>
              </body>
              <exception lexicalForm="Exception e" startPosition="1275" length="11">
                <name lexicalForm="e" startPosition="1285" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="1275" length="9">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="1275" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                </type>
              </exception>
            </catchClauses>
            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;InetAddress[] hosts = InetAddress.getAllByName(host);&#xA;&#x9;&#x9;&#x9;java.util.Stack exceptions = new java.util.Stack();&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; hosts.length; i++) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s = new Socket(hosts[i], port);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;StringBuffer sb = new StringBuffer();&#xA;&#x9;&#x9;&#x9;while (!exceptions.empty()) {&#xA;&#x9;&#x9;&#x9;&#x9;sb.append(((Exception) exceptions.pop()).getMessage());&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;connectError = sb.toString();&#xA;&#x9;&#x9;}" startPosition="811" length="456">
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="InetAddress[] hosts = InetAddress.getAllByName(host);" startPosition="816" length="53">
                <fragments lexicalForm="hosts = InetAddress.getAllByName(host)" startPosition="830" length="38">
                  <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="InetAddress.getAllByName(host)" startPosition="838" length="30">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="host" startPosition="863" length="4" fullyQualifiedName="host" identifier="host"/>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="InetAddress" startPosition="838" length="11" fullyQualifiedName="InetAddress" identifier="InetAddress"/>
                    <name lexicalForm="getAllByName" startPosition="850" length="12" fullyQualifiedName="getAllByName" identifier="getAllByName"/>
                  </initializer>
                  <name lexicalForm="hosts" startPosition="830" length="5" fullyQualifiedName="hosts" identifier="hosts" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:ArrayType" lexicalForm="InetAddress[]" startPosition="816" length="13" dimensions="1">
                  <componentType xsi:type="JavaAST:SimpleType" lexicalForm="InetAddress" startPosition="816" length="11">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="InetAddress" startPosition="816" length="11" fullyQualifiedName="InetAddress" identifier="InetAddress"/>
                  </componentType>
                </type>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="java.util.Stack exceptions = new java.util.Stack();" startPosition="873" length="51">
                <fragments lexicalForm="exceptions = new java.util.Stack()" startPosition="889" length="34">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.Stack()" startPosition="902" length="21">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Stack" startPosition="906" length="15">
                      <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Stack" startPosition="906" length="15" fullyQualifiedName="java.util.Stack">
                        <name lexicalForm="Stack" startPosition="916" length="5" fullyQualifiedName="Stack" identifier="Stack"/>
                        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="906" length="9" fullyQualifiedName="java.util">
                          <name lexicalForm="util" startPosition="911" length="4" fullyQualifiedName="util" identifier="util"/>
                          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="906" length="4" fullyQualifiedName="java" identifier="java"/>
                        </qualifier>
                      </name>
                    </type>
                  </initializer>
                  <name lexicalForm="exceptions" startPosition="889" length="10" fullyQualifiedName="exceptions" identifier="exceptions" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Stack" startPosition="873" length="15">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Stack" startPosition="873" length="15" fullyQualifiedName="java.util.Stack">
                    <name lexicalForm="Stack" startPosition="883" length="5" fullyQualifiedName="Stack" identifier="Stack"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="873" length="9" fullyQualifiedName="java.util">
                      <name lexicalForm="util" startPosition="878" length="4" fullyQualifiedName="util" identifier="util"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="873" length="4" fullyQualifiedName="java" identifier="java"/>
                    </qualifier>
                  </name>
                </type>
              </statements>
              <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (int i = 0; i &lt; hosts.length; i++) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s = new Socket(hosts[i], port);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="928" length="163">
                <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s = new Socket(hosts[i], port);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="967" length="124">
                  <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s = new Socket(hosts[i], port);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="973" length="113">
                    <catchClauses lexicalForm="catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1034" length="52">
                      <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;exceptions.push(e);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1054" length="32">
                        <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="exceptions.push(e);" startPosition="1061" length="19">
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="exceptions.push(e)" startPosition="1061" length="18">
                            <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="1077" length="1" fullyQualifiedName="e" identifier="e"/>
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="exceptions" startPosition="1061" length="10" fullyQualifiedName="exceptions" identifier="exceptions"/>
                            <name lexicalForm="push" startPosition="1072" length="4" fullyQualifiedName="push" identifier="push"/>
                          </expression>
                        </statements>
                      </body>
                      <exception lexicalForm="Exception e" startPosition="1041" length="11">
                        <name lexicalForm="e" startPosition="1051" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="1041" length="9">
                          <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="1041" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                        </type>
                      </exception>
                    </catchClauses>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s = new Socket(hosts[i], port);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="977" length="56">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="s = new Socket(hosts[i], port);" startPosition="984" length="31">
                        <expression xsi:type="JavaAST:Assignment" lexicalForm="s = new Socket(hosts[i], port)" startPosition="984" length="30" operator="=">
                          <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="s" startPosition="984" length="1" fullyQualifiedName="s" identifier="s"/>
                          <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Socket(hosts[i], port)" startPosition="988" length="26">
                            <arguments xsi:type="JavaAST:ArrayAccess" lexicalForm="hosts[i]" startPosition="999" length="8">
                              <array xsi:type="JavaAST:SimpleName" lexicalForm="hosts" startPosition="999" length="5" fullyQualifiedName="hosts" identifier="hosts"/>
                              <index xsi:type="JavaAST:SimpleName" lexicalForm="i" startPosition="1005" length="1" fullyQualifiedName="i" identifier="i"/>
                            </arguments>
                            <arguments xsi:type="JavaAST:SimpleName" lexicalForm="port" startPosition="1009" length="4" fullyQualifiedName="port" identifier="port"/>
                            <type xsi:type="JavaAST:SimpleType" lexicalForm="Socket" startPosition="992" length="6">
                              <name xsi:type="JavaAST:SimpleName" lexicalForm="Socket" startPosition="992" length="6" fullyQualifiedName="Socket" identifier="Socket"/>
                            </type>
                          </rightHandSide>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:BreakStatement" lexicalForm="break;" startPosition="1021" length="6"/>
                    </body>
                  </statements>
                </body>
                <expression xsi:type="JavaAST:InfixExpression" lexicalForm="i &lt; hosts.length" startPosition="944" length="16" operator="&lt;">
                  <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="i" startPosition="944" length="1" fullyQualifiedName="i" identifier="i"/>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="hosts.length" startPosition="948" length="12" fullyQualifiedName="hosts.length">
                    <name lexicalForm="length" startPosition="954" length="6" fullyQualifiedName="length" identifier="length"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="hosts" startPosition="948" length="5" fullyQualifiedName="hosts" identifier="hosts"/>
                  </rightOperand>
                </expression>
                <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="int i = 0" startPosition="933" length="9">
                  <fragments lexicalForm="i = 0" startPosition="937" length="5">
                    <initializer xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="941" length="1" token="0"/>
                    <name lexicalForm="i" startPosition="937" length="1" fullyQualifiedName="i" identifier="i" declaration="true"/>
                  </fragments>
                  <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="933" length="3" code="int"/>
                </initializers>
                <updaters xsi:type="JavaAST:PostfixExpression" lexicalForm="i++" startPosition="962" length="3">
                  <operand xsi:type="JavaAST:SimpleName" lexicalForm="i" startPosition="962" length="1" fullyQualifiedName="i" identifier="i"/>
                </updaters>
              </statements>
              <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="StringBuffer sb = new StringBuffer();" startPosition="1095" length="37">
                <fragments lexicalForm="sb = new StringBuffer()" startPosition="1108" length="23">
                  <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new StringBuffer()" startPosition="1113" length="18">
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="StringBuffer" startPosition="1117" length="12">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="StringBuffer" startPosition="1117" length="12" fullyQualifiedName="StringBuffer" identifier="StringBuffer"/>
                    </type>
                  </initializer>
                  <name lexicalForm="sb" startPosition="1108" length="2" fullyQualifiedName="sb" identifier="sb" declaration="true"/>
                </fragments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="StringBuffer" startPosition="1095" length="12">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="StringBuffer" startPosition="1095" length="12" fullyQualifiedName="StringBuffer" identifier="StringBuffer"/>
                </type>
              </statements>
              <statements xsi:type="JavaAST:WhileStatement" lexicalForm="while (!exceptions.empty()) {&#xA;&#x9;&#x9;&#x9;&#x9;sb.append(((Exception) exceptions.pop()).getMessage());&#xA;&#x9;&#x9;&#x9;}" startPosition="1136" length="94">
                <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;sb.append(((Exception) exceptions.pop()).getMessage());&#xA;&#x9;&#x9;&#x9;}" startPosition="1164" length="66">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="sb.append(((Exception) exceptions.pop()).getMessage());" startPosition="1170" length="55">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="sb.append(((Exception) exceptions.pop()).getMessage())" startPosition="1170" length="54">
                      <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="((Exception) exceptions.pop()).getMessage()" startPosition="1180" length="43">
                        <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((Exception) exceptions.pop())" startPosition="1180" length="30">
                          <expression xsi:type="JavaAST:CastExpression" lexicalForm="(Exception) exceptions.pop()" startPosition="1181" length="28">
                            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="exceptions.pop()" startPosition="1193" length="16">
                              <expression xsi:type="JavaAST:SimpleName" lexicalForm="exceptions" startPosition="1193" length="10" fullyQualifiedName="exceptions" identifier="exceptions"/>
                              <name lexicalForm="pop" startPosition="1204" length="3" fullyQualifiedName="pop" identifier="pop"/>
                            </expression>
                            <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="1182" length="9">
                              <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="1182" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                            </type>
                          </expression>
                        </expression>
                        <name lexicalForm="getMessage" startPosition="1211" length="10" fullyQualifiedName="getMessage" identifier="getMessage"/>
                      </arguments>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="sb" startPosition="1170" length="2" fullyQualifiedName="sb" identifier="sb"/>
                      <name lexicalForm="append" startPosition="1173" length="6" fullyQualifiedName="append" identifier="append"/>
                    </expression>
                  </statements>
                </body>
                <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!exceptions.empty()" startPosition="1143" length="19" operator="!">
                  <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="exceptions.empty()" startPosition="1144" length="18">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="exceptions" startPosition="1144" length="10" fullyQualifiedName="exceptions" identifier="exceptions"/>
                    <name lexicalForm="empty" startPosition="1155" length="5" fullyQualifiedName="empty" identifier="empty"/>
                  </operand>
                </expression>
              </statements>
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="connectError = sb.toString();" startPosition="1234" length="29">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="connectError = sb.toString()" startPosition="1234" length="28" operator="=">
                  <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="connectError" startPosition="1234" length="12" fullyQualifiedName="connectError" identifier="connectError"/>
                  <rightHandSide xsi:type="JavaAST:MethodInvocation" lexicalForm="sb.toString()" startPosition="1249" length="13">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="sb" startPosition="1249" length="2" fullyQualifiedName="sb" identifier="sb"/>
                    <name lexicalForm="toString" startPosition="1252" length="8" fullyQualifiedName="toString" identifier="toString"/>
                  </rightHandSide>
                </expression>
              </statements>
            </body>
          </statements>
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return s;" startPosition="1393" length="9">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="s" startPosition="1400" length="1" fullyQualifiedName="s" identifier="s"/>
          </statements>
        </body>
        <name lexicalForm="connect" startPosition="713" length="7" fullyQualifiedName="connect" identifier="connect" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.net.Socket" startPosition="697" length="15">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.net.Socket" startPosition="697" length="15" fullyQualifiedName="java.net.Socket">
            <name lexicalForm="Socket" startPosition="706" length="6" fullyQualifiedName="Socket" identifier="Socket"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.net" startPosition="697" length="8" fullyQualifiedName="java.net">
              <name lexicalForm="net" startPosition="702" length="3" fullyQualifiedName="net" identifier="net"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="697" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
        <parameters lexicalForm="java.lang.String host" startPosition="721" length="21">
          <name lexicalForm="host" startPosition="738" length="4" fullyQualifiedName="host" identifier="host" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="721" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="721" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="731" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="721" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="726" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="721" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="int port" startPosition="744" length="8">
          <name lexicalForm="port" startPosition="748" length="4" fullyQualifiedName="port" identifier="port" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="744" length="3" code="int"/>
        </parameters>
        <thrownExceptions xsi:type="JavaAST:QualifiedName" lexicalForm="java.io.IOException" startPosition="764" length="19" fullyQualifiedName="java.io.IOException">
          <name lexicalForm="IOException" startPosition="772" length="11" fullyQualifiedName="IOException" identifier="IOException"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.io" startPosition="764" length="7" fullyQualifiedName="java.io">
            <name lexicalForm="io" startPosition="769" length="2" fullyQualifiedName="io" identifier="io"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="764" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </thrownExceptions>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.net.Socket getSocket() {&#xA;&#x9;&#x9;return socket;&#xA;&#x9;}" startPosition="1408" length="56">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1408" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return socket;&#xA;&#x9;}" startPosition="1443" length="21">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return socket;" startPosition="1447" length="14">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="socket" startPosition="1454" length="6" fullyQualifiedName="socket" identifier="socket"/>
          </statements>
        </body>
        <name lexicalForm="getSocket" startPosition="1431" length="9" fullyQualifiedName="getSocket" identifier="getSocket" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.net.Socket" startPosition="1415" length="15">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.net.Socket" startPosition="1415" length="15" fullyQualifiedName="java.net.Socket">
            <name lexicalForm="Socket" startPosition="1424" length="6" fullyQualifiedName="Socket" identifier="Socket"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.net" startPosition="1415" length="8" fullyQualifiedName="java.net">
              <name lexicalForm="net" startPosition="1420" length="3" fullyQualifiedName="net" identifier="net"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1415" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setSocket(java.net.Socket socket) {&#xA;&#x9;&#x9;this.socket = socket;&#xA;&#x9;}" startPosition="1467" length="74">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1467" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.socket = socket;&#xA;&#x9;}" startPosition="1513" length="28">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.socket = socket;" startPosition="1517" length="21">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.socket = socket" startPosition="1517" length="20" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.socket" startPosition="1517" length="11">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1517" length="4" resolvedType="//@compilationUnits.14/@types.0"/>
                <name lexicalForm="socket" startPosition="1522" length="6" fullyQualifiedName="socket" identifier="socket"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="socket" startPosition="1531" length="6" fullyQualifiedName="socket" identifier="socket"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setSocket" startPosition="1479" length="9" fullyQualifiedName="setSocket" identifier="setSocket" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1474" length="4" code="void"/>
        <parameters lexicalForm="java.net.Socket socket" startPosition="1489" length="22">
          <name lexicalForm="socket" startPosition="1505" length="6" fullyQualifiedName="socket" identifier="socket" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.net.Socket" startPosition="1489" length="15">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.net.Socket" startPosition="1489" length="15" fullyQualifiedName="java.net.Socket">
              <name lexicalForm="Socket" startPosition="1498" length="6" fullyQualifiedName="Socket" identifier="Socket"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.net" startPosition="1489" length="8" fullyQualifiedName="java.net">
                <name lexicalForm="net" startPosition="1494" length="3" fullyQualifiedName="net" identifier="net"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1489" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="DefaultJabber" startPosition="78" length="13" resolvedType="//@compilationUnits.14/@types.0" fullyQualifiedName="DefaultJabber" identifier="DefaultJabber" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.jabber.Jabber" startPosition="100" length="27" resolvedType="//@compilationUnits.13/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.jabber.Jabber" startPosition="100" length="27" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="im.networking.jabber.Jabber">
          <name lexicalForm="Jabber" startPosition="121" length="6" resolvedType="//@compilationUnits.13/@types.0" fullyQualifiedName="Jabber" identifier="Jabber"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.jabber" startPosition="100" length="20" fullyQualifiedName="im.networking.jabber">
            <name lexicalForm="jabber" startPosition="114" length="6" fullyQualifiedName="jabber" identifier="jabber"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="100" length="13" fullyQualifiedName="im.networking">
              <name lexicalForm="networking" startPosition="103" length="10" fullyQualifiedName="networking" identifier="networking"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="100" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </qualifier>
        </name>
      </superclassType>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.networking.local;&#xA;&#xA;public class Local extends im.networking.Network&#xA;&#x9;&#x9;implements&#xA;&#x9;&#x9;&#x9;im.ExceptionReporter {&#xA;&#x9;public Local() {&#xA;&#x9;&#x9;setName(&quot;Local&quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;public void send(im.model.Message msg) {&#xA;&#x9;&#x9;msg.setRecipient(msg.getSender());&#xA;&#x9;&#x9;setRecvMsg(msg);&#xA;&#x9;}&#xA;&#xA;&#x9;public void report(java.lang.Exception e) {&#xA;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;msg.setSender(&quot;System&quot;);&#xA;&#x9;&#x9;msg.setContent(e.toString());&#xA;&#x9;&#x9;send(msg);&#xA;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="457">
    <package lexicalForm="package im.networking.local;" length="28">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.local" startPosition="8" length="19" fullyQualifiedName="im.networking.local">
        <name lexicalForm="local" startPosition="22" length="5" fullyQualifiedName="local" identifier="local"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="8" length="13" fullyQualifiedName="im.networking">
          <name lexicalForm="networking" startPosition="11" length="10" fullyQualifiedName="networking" identifier="networking"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
        </qualifier>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class Local extends im.networking.Network&#xA;&#x9;&#x9;implements&#xA;&#x9;&#x9;&#x9;im.ExceptionReporter {&#xA;&#x9;public Local() {&#xA;&#x9;&#x9;setName(&quot;Local&quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;public void send(im.model.Message msg) {&#xA;&#x9;&#x9;msg.setRecipient(msg.getSender());&#xA;&#x9;&#x9;setRecvMsg(msg);&#xA;&#x9;}&#xA;&#xA;&#x9;public void report(java.lang.Exception e) {&#xA;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;msg.setSender(&quot;System&quot;);&#xA;&#x9;&#x9;msg.setContent(e.toString());&#xA;&#x9;&#x9;send(msg);&#xA;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;}&#xA;&#xA;}" startPosition="30" length="426" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.15/@types.0/@name">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="30" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public Local() {&#xA;&#x9;&#x9;setName(&quot;Local&quot;);&#xA;&#x9;}" startPosition="119" length="39" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="119" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;setName(&quot;Local&quot;);&#xA;&#x9;}" startPosition="134" length="24">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setName(&quot;Local&quot;);" startPosition="138" length="17">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setName(&quot;Local&quot;)" startPosition="138" length="16">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Local&quot;" startPosition="146" length="7" escapedValue="&quot;Local&quot;" literalValue="Local"/>
              <name lexicalForm="setName" startPosition="138" length="7" fullyQualifiedName="setName" identifier="setName"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="Local" startPosition="126" length="5" fullyQualifiedName="Local" identifier="Local"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void send(im.model.Message msg) {&#xA;&#x9;&#x9;msg.setRecipient(msg.getSender());&#xA;&#x9;&#x9;setRecvMsg(msg);&#xA;&#x9;}" startPosition="161" length="99">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="161" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;msg.setRecipient(msg.getSender());&#xA;&#x9;&#x9;setRecvMsg(msg);&#xA;&#x9;}" startPosition="200" length="60">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.setRecipient(msg.getSender());" startPosition="204" length="34">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.setRecipient(msg.getSender())" startPosition="204" length="33">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.getSender()" startPosition="221" length="15">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="221" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
                <name lexicalForm="getSender" startPosition="225" length="9" fullyQualifiedName="getSender" identifier="getSender"/>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="204" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
              <name lexicalForm="setRecipient" startPosition="208" length="12" fullyQualifiedName="setRecipient" identifier="setRecipient"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setRecvMsg(msg);" startPosition="241" length="16">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setRecvMsg(msg)" startPosition="241" length="15">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="252" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
              <name lexicalForm="setRecvMsg" startPosition="241" length="10" fullyQualifiedName="setRecvMsg" identifier="setRecvMsg"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="send" startPosition="173" length="4" fullyQualifiedName="send" identifier="send" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="168" length="4" code="void"/>
        <parameters lexicalForm="im.model.Message msg" startPosition="178" length="20">
          <name lexicalForm="msg" startPosition="195" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="178" length="16" resolvedType="//@compilationUnits.10/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="178" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
              <name lexicalForm="Message" startPosition="187" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="178" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="181" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="178" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void report(java.lang.Exception e) {&#xA;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;msg.setSender(&quot;System&quot;);&#xA;&#x9;&#x9;msg.setContent(e.toString());&#xA;&#x9;&#x9;send(msg);&#xA;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;}" startPosition="263" length="190">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="263" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;im.model.Message msg = new im.model.Message();&#xA;&#x9;&#x9;msg.setSender(&quot;System&quot;);&#xA;&#x9;&#x9;msg.setContent(e.toString());&#xA;&#x9;&#x9;send(msg);&#xA;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;}" startPosition="305" length="148">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="im.model.Message msg = new im.model.Message();" startPosition="309" length="46">
            <fragments lexicalForm="msg = new im.model.Message()" startPosition="326" length="28">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new im.model.Message()" startPosition="332" length="22" resolvedType="//@compilationUnits.10/@types.0">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="336" length="16" resolvedType="//@compilationUnits.10/@types.0">
                  <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="336" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                    <name lexicalForm="Message" startPosition="345" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="336" length="8" fullyQualifiedName="im.model">
                      <name lexicalForm="model" startPosition="339" length="5" fullyQualifiedName="model" identifier="model"/>
                      <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="336" length="2" fullyQualifiedName="im" identifier="im"/>
                    </qualifier>
                  </name>
                </type>
              </initializer>
              <name lexicalForm="msg" startPosition="326" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Message" startPosition="309" length="16" resolvedType="//@compilationUnits.10/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Message" startPosition="309" length="16" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="im.model.Message">
                <name lexicalForm="Message" startPosition="318" length="7" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="Message" identifier="Message"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="309" length="8" fullyQualifiedName="im.model">
                  <name lexicalForm="model" startPosition="312" length="5" fullyQualifiedName="model" identifier="model"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="309" length="2" fullyQualifiedName="im" identifier="im"/>
                </qualifier>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.setSender(&quot;System&quot;);" startPosition="358" length="24">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.setSender(&quot;System&quot;)" startPosition="358" length="23">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;System&quot;" startPosition="372" length="8" escapedValue="&quot;System&quot;" literalValue="System"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="358" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
              <name lexicalForm="setSender" startPosition="362" length="9" fullyQualifiedName="setSender" identifier="setSender"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="msg.setContent(e.toString());" startPosition="385" length="29">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="msg.setContent(e.toString())" startPosition="385" length="28">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="e.toString()" startPosition="400" length="12">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="400" length="1" fullyQualifiedName="e" identifier="e"/>
                <name lexicalForm="toString" startPosition="402" length="8" fullyQualifiedName="toString" identifier="toString"/>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="385" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
              <name lexicalForm="setContent" startPosition="389" length="10" fullyQualifiedName="setContent" identifier="setContent"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="send(msg);" startPosition="417" length="10">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="send(msg)" startPosition="417" length="9">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="msg" startPosition="422" length="3" resolvedType="//@compilationUnits.10/@types.0" fullyQualifiedName="msg" identifier="msg"/>
              <name lexicalForm="send" startPosition="417" length="4" fullyQualifiedName="send" identifier="send"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="e.printStackTrace();" startPosition="430" length="20">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="e.printStackTrace()" startPosition="430" length="19">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="430" length="1" fullyQualifiedName="e" identifier="e"/>
              <name lexicalForm="printStackTrace" startPosition="432" length="15" fullyQualifiedName="printStackTrace" identifier="printStackTrace"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="report" startPosition="275" length="6" fullyQualifiedName="report" identifier="report" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="270" length="4" code="void"/>
        <parameters lexicalForm="java.lang.Exception e" startPosition="282" length="21">
          <name lexicalForm="e" startPosition="302" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Exception" startPosition="282" length="19">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Exception" startPosition="282" length="19" fullyQualifiedName="java.lang.Exception">
              <name lexicalForm="Exception" startPosition="292" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="282" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="287" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="282" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="Local" startPosition="43" length="5" resolvedType="//@compilationUnits.15/@types.0" fullyQualifiedName="Local" identifier="Local" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="im.networking.Network" startPosition="57" length="21" resolvedType="//@compilationUnits.12/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking.Network" startPosition="57" length="21" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="im.networking.Network">
          <name lexicalForm="Network" startPosition="71" length="7" resolvedType="//@compilationUnits.12/@types.0" fullyQualifiedName="Network" identifier="Network"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.networking" startPosition="57" length="13" fullyQualifiedName="im.networking">
            <name lexicalForm="networking" startPosition="60" length="10" fullyQualifiedName="networking" identifier="networking"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="57" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superclassType>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="im.ExceptionReporter" startPosition="95" length="20" resolvedType="//@compilationUnits.1/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.ExceptionReporter" startPosition="95" length="20" resolvedType="//@compilationUnits.1/@types.0" fullyQualifiedName="im.ExceptionReporter">
          <name lexicalForm="ExceptionReporter" startPosition="98" length="17" resolvedType="//@compilationUnits.1/@types.0" fullyQualifiedName="ExceptionReporter" identifier="ExceptionReporter"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="95" length="2" fullyQualifiedName="im" identifier="im"/>
        </name>
      </superInterfaceTypes>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view;&#xA;&#xA;public abstract class ViewFactory {&#xA;&#x9;public static im.view.ViewFactory getDefault() {&#xA;&#x9;&#x9;String[] options = {&quot;im.view.swt.SWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.swing.SwingViewFactory&quot;, &quot;im.view.awt.AWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.lcdui.LCDUIViewFactory&quot;};&#xA;&#x9;&#x9;ViewFactory factory = null;&#xA;&#x9;&#x9;for (int i = 0; i &lt; options.length &amp;&amp; factory == null; i++) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;factory = (ViewFactory) Class.forName(options[i]).newInstance();&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return factory;&#xA;&#x9;}&#xA;&#xA;&#x9;public abstract im.view.ContactListView createContactListView();&#xA;&#xA;&#x9;public abstract im.view.ConversationView createConversationView();&#xA;&#xA;&#x9;public abstract im.view.NewContactDialog createNewContactDialog();&#xA;&#xA;}&#xA;" length="700">
    <package lexicalForm="package im.view;" length="16">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
        <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public abstract class ViewFactory {&#xA;&#x9;public static im.view.ViewFactory getDefault() {&#xA;&#x9;&#x9;String[] options = {&quot;im.view.swt.SWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.swing.SwingViewFactory&quot;, &quot;im.view.awt.AWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.lcdui.LCDUIViewFactory&quot;};&#xA;&#x9;&#x9;ViewFactory factory = null;&#xA;&#x9;&#x9;for (int i = 0; i &lt; options.length &amp;&amp; factory == null; i++) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;factory = (ViewFactory) Class.forName(options[i]).newInstance();&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return factory;&#xA;&#x9;}&#xA;&#xA;&#x9;public abstract im.view.ContactListView createContactListView();&#xA;&#xA;&#x9;public abstract im.view.ConversationView createConversationView();&#xA;&#xA;&#x9;public abstract im.view.NewContactDialog createNewContactDialog();&#xA;&#xA;}" startPosition="18" length="681" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.16/@types.0/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand/@leftOperand //@compilationUnits.2/@types.0/@bodyDeclarations.9/@body/@statements.1/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.2/@types.0/@bodyDeclarations.17/@body/@statements.0/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.16/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.2/@fragments.0/@initializer/@expression //@compilationUnits.16/@types.0/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.17/@body/@statements.0/@expression/@leftHandSide //@compilationUnits.16/@types.0/@bodyDeclarations.0/@returnType/@name/@name //@compilationUnits.16/@types.0/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@body/@statements.0/@expression/@rightHandSide/@type/@name //@compilationUnits.2/@types.0/@bodyDeclarations.9/@body/@statements.1/@body/@statements.0/@expression/@arguments.0/@name //@compilationUnits.16/@types.0/@bodyDeclarations.0/@body/@statements.3/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.3/@fragments.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.17/@body/@statements.0/@expression/@rightHandSide //@compilationUnits.16/@types.0/@name //@compilationUnits.2/@types.0/@bodyDeclarations.3/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.17/@body/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.16/@types.0/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@body/@statements.0/@expression //@compilationUnits.2/@types.0/@bodyDeclarations.3/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.2/@expression/@arguments.0/@expression //@compilationUnits.16/@types.0/@bodyDeclarations.0/@body/@statements.1/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.2/@expression/@arguments.0/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.17/@parameters.0/@type/@name //@compilationUnits.16/@types.0/@bodyDeclarations.0/@returnType/@name //@compilationUnits.2/@types.0/@bodyDeclarations.17/@parameters.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.2/@expression/@arguments.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.2/@expression/@arguments.0/@expression/@name //@compilationUnits.2/@types.0/@bodyDeclarations.9/@body/@statements.1/@body/@statements.0/@expression/@arguments.0/@expression //@compilationUnits.16/@types.0/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@body/@statements.0/@expression/@leftHandSide //@compilationUnits.16/@types.0/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@body/@statements.0/@expression/@rightHandSide //@compilationUnits.2/@types.0/@bodyDeclarations.16/@returnType/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.16/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.2/@fragments.0/@initializer/@expression/@name //@compilationUnits.16/@types.0/@bodyDeclarations.0/@name //@compilationUnits.26/@types.0/@superclassType/@name //@compilationUnits.26/@types.0/@superclassType/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.17/@parameters.0/@type/@name/@name //@compilationUnits.2/@types.0/@bodyDeclarations.16/@body/@statements.0/@expression" resolvedTypeReferences="//@compilationUnits.2/@types.0/@bodyDeclarations.3/@type //@compilationUnits.2/@types.0/@bodyDeclarations.17/@parameters.0/@type //@compilationUnits.26/@types.0/@superclassType //@compilationUnits.16/@types.0/@bodyDeclarations.0/@body/@statements.1/@type //@compilationUnits.16/@types.0/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@body/@statements.0/@expression/@rightHandSide/@type //@compilationUnits.16/@types.0/@bodyDeclarations.0/@returnType //@compilationUnits.2/@types.0/@bodyDeclarations.16/@returnType">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="18" length="6" public="true"/>
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="25" length="8" abstract="true"/>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public static im.view.ViewFactory getDefault() {&#xA;&#x9;&#x9;String[] options = {&quot;im.view.swt.SWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.swing.SwingViewFactory&quot;, &quot;im.view.awt.AWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.lcdui.LCDUIViewFactory&quot;};&#xA;&#x9;&#x9;ViewFactory factory = null;&#xA;&#x9;&#x9;for (int i = 0; i &lt; options.length &amp;&amp; factory == null; i++) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;factory = (ViewFactory) Class.forName(options[i]).newInstance();&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return factory;&#xA;&#x9;}" startPosition="55" length="436">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="55" length="6" public="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="static" startPosition="62" length="6" static="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;String[] options = {&quot;im.view.swt.SWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.swing.SwingViewFactory&quot;, &quot;im.view.awt.AWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.lcdui.LCDUIViewFactory&quot;};&#xA;&#x9;&#x9;ViewFactory factory = null;&#xA;&#x9;&#x9;for (int i = 0; i &lt; options.length &amp;&amp; factory == null; i++) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;factory = (ViewFactory) Class.forName(options[i]).newInstance();&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return factory;&#xA;&#x9;}" startPosition="102" length="389">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="String[] options = {&quot;im.view.swt.SWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.swing.SwingViewFactory&quot;, &quot;im.view.awt.AWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.lcdui.LCDUIViewFactory&quot;};" startPosition="106" length="156">
            <fragments lexicalForm="options = {&quot;im.view.swt.SWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.swing.SwingViewFactory&quot;, &quot;im.view.awt.AWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.lcdui.LCDUIViewFactory&quot;}" startPosition="115" length="146">
              <initializer xsi:type="JavaAST:ArrayInitializer" lexicalForm="{&quot;im.view.swt.SWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.swing.SwingViewFactory&quot;, &quot;im.view.awt.AWTViewFactory&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;im.view.lcdui.LCDUIViewFactory&quot;}" startPosition="125" length="136">
                <expressions xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;im.view.swt.SWTViewFactory&quot;" startPosition="126" length="28" escapedValue="&quot;im.view.swt.SWTViewFactory&quot;" literalValue="im.view.swt.SWTViewFactory"/>
                <expressions xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;im.view.swing.SwingViewFactory&quot;" startPosition="160" length="32" escapedValue="&quot;im.view.swing.SwingViewFactory&quot;" literalValue="im.view.swing.SwingViewFactory"/>
                <expressions xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;im.view.awt.AWTViewFactory&quot;" startPosition="194" length="28" escapedValue="&quot;im.view.awt.AWTViewFactory&quot;" literalValue="im.view.awt.AWTViewFactory"/>
                <expressions xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;im.view.lcdui.LCDUIViewFactory&quot;" startPosition="228" length="32" escapedValue="&quot;im.view.lcdui.LCDUIViewFactory&quot;" literalValue="im.view.lcdui.LCDUIViewFactory"/>
              </initializer>
              <name lexicalForm="options" startPosition="115" length="7" fullyQualifiedName="options" identifier="options" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:ArrayType" lexicalForm="String[]" startPosition="106" length="8" dimensions="1">
              <componentType xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="106" length="6">
                <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="106" length="6" fullyQualifiedName="String" identifier="String"/>
              </componentType>
            </type>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="ViewFactory factory = null;" startPosition="265" length="27">
            <fragments lexicalForm="factory = null" startPosition="277" length="14">
              <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="287" length="4"/>
              <name lexicalForm="factory" startPosition="277" length="7" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="factory" identifier="factory" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="ViewFactory" startPosition="265" length="11" resolvedType="//@compilationUnits.16/@types.0">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="ViewFactory" startPosition="265" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="ViewFactory" identifier="ViewFactory"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (int i = 0; i &lt; options.length &amp;&amp; factory == null; i++) {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;factory = (ViewFactory) Class.forName(options[i]).newInstance();&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="295" length="175">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;factory = (ViewFactory) Class.forName(options[i]).newInstance();&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="355" length="115">
              <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;factory = (ViewFactory) Class.forName(options[i]).newInstance();&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}" startPosition="360" length="106">
                <catchClauses lexicalForm="catch (Exception e) {&#xA;&#x9;&#x9;&#x9;}" startPosition="440" length="26">
                  <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;}" startPosition="460" length="6"/>
                  <exception lexicalForm="Exception e" startPosition="447" length="11">
                    <name lexicalForm="e" startPosition="457" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="447" length="9">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="447" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                    </type>
                  </exception>
                </catchClauses>
                <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;factory = (ViewFactory) Class.forName(options[i]).newInstance();&#xA;&#x9;&#x9;&#x9;}" startPosition="364" length="75">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="factory = (ViewFactory) Class.forName(options[i]).newInstance();" startPosition="370" length="64">
                    <expression xsi:type="JavaAST:Assignment" lexicalForm="factory = (ViewFactory) Class.forName(options[i]).newInstance()" startPosition="370" length="63" resolvedType="//@compilationUnits.16/@types.0" operator="=">
                      <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="factory" startPosition="370" length="7" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="factory" identifier="factory"/>
                      <rightHandSide xsi:type="JavaAST:CastExpression" lexicalForm="(ViewFactory) Class.forName(options[i]).newInstance()" startPosition="380" length="53" resolvedType="//@compilationUnits.16/@types.0">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="Class.forName(options[i]).newInstance()" startPosition="394" length="39">
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="Class.forName(options[i])" startPosition="394" length="25">
                            <arguments xsi:type="JavaAST:ArrayAccess" lexicalForm="options[i]" startPosition="408" length="10">
                              <array xsi:type="JavaAST:SimpleName" lexicalForm="options" startPosition="408" length="7" fullyQualifiedName="options" identifier="options"/>
                              <index xsi:type="JavaAST:SimpleName" lexicalForm="i" startPosition="416" length="1" fullyQualifiedName="i" identifier="i"/>
                            </arguments>
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="394" length="5" fullyQualifiedName="Class" identifier="Class"/>
                            <name lexicalForm="forName" startPosition="400" length="7" fullyQualifiedName="forName" identifier="forName"/>
                          </expression>
                          <name lexicalForm="newInstance" startPosition="420" length="11" fullyQualifiedName="newInstance" identifier="newInstance"/>
                        </expression>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="ViewFactory" startPosition="381" length="11" resolvedType="//@compilationUnits.16/@types.0">
                          <name xsi:type="JavaAST:SimpleName" lexicalForm="ViewFactory" startPosition="381" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="ViewFactory" identifier="ViewFactory"/>
                        </type>
                      </rightHandSide>
                    </expression>
                  </statements>
                </body>
              </statements>
            </body>
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="i &lt; options.length &amp;&amp; factory == null" startPosition="311" length="37" operator="&amp;&amp;">
              <leftOperand xsi:type="JavaAST:InfixExpression" lexicalForm="i &lt; options.length" startPosition="311" length="18" operator="&lt;">
                <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="i" startPosition="311" length="1" fullyQualifiedName="i" identifier="i"/>
                <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="options.length" startPosition="315" length="14" fullyQualifiedName="options.length">
                  <name lexicalForm="length" startPosition="323" length="6" fullyQualifiedName="length" identifier="length"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="options" startPosition="315" length="7" fullyQualifiedName="options" identifier="options"/>
                </rightOperand>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:InfixExpression" lexicalForm="factory == null" startPosition="333" length="15" operator="==">
                <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="factory" startPosition="333" length="7" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="factory" identifier="factory"/>
                <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="344" length="4"/>
              </rightOperand>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="int i = 0" startPosition="300" length="9">
              <fragments lexicalForm="i = 0" startPosition="304" length="5">
                <initializer xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="308" length="1" token="0"/>
                <name lexicalForm="i" startPosition="304" length="1" fullyQualifiedName="i" identifier="i" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="300" length="3" code="int"/>
            </initializers>
            <updaters xsi:type="JavaAST:PostfixExpression" lexicalForm="i++" startPosition="350" length="3">
              <operand xsi:type="JavaAST:SimpleName" lexicalForm="i" startPosition="350" length="1" fullyQualifiedName="i" identifier="i"/>
            </updaters>
          </statements>
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return factory;" startPosition="473" length="15">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="factory" startPosition="480" length="7" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="factory" identifier="factory"/>
          </statements>
        </body>
        <name lexicalForm="getDefault" startPosition="89" length="10" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="getDefault" identifier="getDefault" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ViewFactory" startPosition="69" length="19" resolvedType="//@compilationUnits.16/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ViewFactory" startPosition="69" length="19" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="im.view.ViewFactory">
            <name lexicalForm="ViewFactory" startPosition="77" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="ViewFactory" identifier="ViewFactory"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="69" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="72" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="69" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public abstract im.view.ContactListView createContactListView();" startPosition="494" length="64">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="494" length="6" public="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="501" length="8" abstract="true"/>
        <name lexicalForm="createContactListView" startPosition="534" length="21" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="createContactListView" identifier="createContactListView" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ContactListView" startPosition="510" length="23" resolvedType="//@compilationUnits.17/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListView" startPosition="510" length="23" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="im.view.ContactListView">
            <name lexicalForm="ContactListView" startPosition="518" length="15" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="ContactListView" identifier="ContactListView"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="510" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="513" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="510" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public abstract im.view.ConversationView createConversationView();" startPosition="561" length="66">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="561" length="6" public="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="568" length="8" abstract="true"/>
        <name lexicalForm="createConversationView" startPosition="602" length="22" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="createConversationView" identifier="createConversationView" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ConversationView" startPosition="577" length="24" resolvedType="//@compilationUnits.18/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationView" startPosition="577" length="24" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="im.view.ConversationView">
            <name lexicalForm="ConversationView" startPosition="585" length="16" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="ConversationView" identifier="ConversationView"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="577" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="580" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="577" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public abstract im.view.NewContactDialog createNewContactDialog();" startPosition="630" length="66">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="630" length="6" public="true"/>
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="637" length="8" abstract="true"/>
        <name lexicalForm="createNewContactDialog" startPosition="671" length="22" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="createNewContactDialog" identifier="createNewContactDialog" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.NewContactDialog" startPosition="646" length="24" resolvedType="//@compilationUnits.21/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialog" startPosition="646" length="24" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="im.view.NewContactDialog">
            <name lexicalForm="NewContactDialog" startPosition="654" length="16" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="NewContactDialog" identifier="NewContactDialog"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="646" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="649" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="646" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <name lexicalForm="ViewFactory" startPosition="40" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="ViewFactory" identifier="ViewFactory" declaration="true"/>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view;&#xA;&#xA;public interface ContactListView {&#xA;&#x9;public void addContact(im.model.Contact c, int index);&#xA;&#xA;&#x9;public void removeContact(int index);&#xA;&#xA;&#x9;public int getSelectedContact();&#xA;&#xA;&#x9;public void setEnabled(boolean enabled);&#xA;&#xA;&#x9;public void addListener(im.view.ContactListViewListener l);&#xA;&#xA;}&#xA;" length="292">
    <package lexicalForm="package im.view;" length="16">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
        <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public interface ContactListView {&#xA;&#x9;public void addContact(im.model.Contact c, int index);&#xA;&#xA;&#x9;public void removeContact(int index);&#xA;&#xA;&#x9;public int getSelectedContact();&#xA;&#xA;&#x9;public void setEnabled(boolean enabled);&#xA;&#xA;&#x9;public void addListener(im.view.ContactListViewListener l);&#xA;&#xA;}" startPosition="18" length="273" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.26/@types.0/@bodyDeclarations.1/@returnType/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.0/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.13/@returnType/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.1/@expression/@expression //@compilationUnits.17/@types.0/@name //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.1/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.13/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.13/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.0/@fragments.0/@initializer/@expression //@compilationUnits.23/@types.0/@superInterfaceTypes.0/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.1/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.13/@body/@statements.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.14/@parameters.0/@type/@name //@compilationUnits.16/@types.0/@bodyDeclarations.1/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.2/@expression/@arguments.0 //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.8/@body/@statements.0/@fragments.0/@initializer/@expression/@name //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.1/@expression/@expression //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@elseStatement/@statements.2/@expression/@expression //@compilationUnits.26/@types.0/@bodyDeclarations.1/@returnType/@name //@compilationUnits.3/@types.0/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.2/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.2/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.14/@parameters.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.1/@type/@name/@name //@compilationUnits.16/@types.0/@bodyDeclarations.1/@returnType/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.5/@body/@statements.1/@elseStatement/@statements.2/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.7/@body/@statements.0/@fragments.0/@initializer/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.14/@body/@statements.0/@expression/@leftHandSide //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.2/@expression/@arguments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.14/@body/@statements.0/@expression/@rightHandSide //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.1/@expression/@expression/@name //@compilationUnits.5/@types.0/@bodyDeclarations.14/@body/@statements.0/@expression //@compilationUnits.16/@types.0/@bodyDeclarations.1/@name //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.3/@expression/@expression //@compilationUnits.26/@types.0/@bodyDeclarations.1/@name //@compilationUnits.5/@types.0/@bodyDeclarations.14/@body/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.5/@types.0/@bodyDeclarations.1/@fragments.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.14/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.4/@body/@statements.3/@expression/@expression/@name //@compilationUnits.23/@types.0/@superInterfaceTypes.0/@name" resolvedTypeReferences="//@compilationUnits.5/@types.0/@bodyDeclarations.1/@type //@compilationUnits.5/@types.0/@bodyDeclarations.14/@parameters.0/@type //@compilationUnits.26/@types.0/@bodyDeclarations.1/@returnType //@compilationUnits.5/@types.0/@bodyDeclarations.13/@returnType //@compilationUnits.16/@types.0/@bodyDeclarations.1/@returnType //@compilationUnits.23/@types.0/@superInterfaceTypes.0" interface="true">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="18" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addContact(im.model.Contact c, int index);" startPosition="54" length="54">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="54" length="6" public="true"/>
        <name lexicalForm="addContact" startPosition="66" length="10" fullyQualifiedName="addContact" identifier="addContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="61" length="4" code="void"/>
        <parameters lexicalForm="im.model.Contact c" startPosition="77" length="18">
          <name lexicalForm="c" startPosition="94" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="77" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="77" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="86" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="77" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="80" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="77" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
        <parameters lexicalForm="int index" startPosition="97" length="9">
          <name lexicalForm="index" startPosition="101" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="97" length="3" code="int"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeContact(int index);" startPosition="111" length="37">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="111" length="6" public="true"/>
        <name lexicalForm="removeContact" startPosition="123" length="13" fullyQualifiedName="removeContact" identifier="removeContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="118" length="4" code="void"/>
        <parameters lexicalForm="int index" startPosition="137" length="9">
          <name lexicalForm="index" startPosition="141" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="137" length="3" code="int"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public int getSelectedContact();" startPosition="151" length="32">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="151" length="6" public="true"/>
        <name lexicalForm="getSelectedContact" startPosition="162" length="18" fullyQualifiedName="getSelectedContact" identifier="getSelectedContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="158" length="3" code="int"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setEnabled(boolean enabled);" startPosition="186" length="40">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="186" length="6" public="true"/>
        <name lexicalForm="setEnabled" startPosition="198" length="10" fullyQualifiedName="setEnabled" identifier="setEnabled" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="193" length="4" code="void"/>
        <parameters lexicalForm="boolean enabled" startPosition="209" length="15">
          <name lexicalForm="enabled" startPosition="217" length="7" fullyQualifiedName="enabled" identifier="enabled" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="209" length="7" code="boolean"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addListener(im.view.ContactListViewListener l);" startPosition="229" length="59">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="229" length="6" public="true"/>
        <name lexicalForm="addListener" startPosition="241" length="11" fullyQualifiedName="addListener" identifier="addListener" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="236" length="4" code="void"/>
        <parameters lexicalForm="im.view.ContactListViewListener l" startPosition="253" length="33">
          <name lexicalForm="l" startPosition="285" length="1" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="l" identifier="l" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ContactListViewListener" startPosition="253" length="31" resolvedType="//@compilationUnits.20/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListViewListener" startPosition="253" length="31" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="im.view.ContactListViewListener">
              <name lexicalForm="ContactListViewListener" startPosition="261" length="23" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="ContactListViewListener" identifier="ContactListViewListener"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="253" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="256" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="253" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="ContactListView" startPosition="35" length="15" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="ContactListView" identifier="ContactListView" declaration="true"/>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view;&#xA;&#xA;public interface ConversationView {&#xA;&#x9;public java.lang.Object getContent();&#xA;&#xA;&#x9;public void addContent(java.lang.Object c);&#xA;&#xA;&#x9;public void setTitle(java.lang.String t);&#xA;&#xA;&#x9;public void toFront();&#xA;&#xA;&#x9;public void addListener(im.view.ConversationViewListener l);&#xA;&#xA;}&#xA;" length="274">
    <package lexicalForm="package im.view;" length="16">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
        <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public interface ConversationView {&#xA;&#x9;public java.lang.Object getContent();&#xA;&#xA;&#x9;public void addContent(java.lang.Object c);&#xA;&#xA;&#x9;public void setTitle(java.lang.String t);&#xA;&#xA;&#x9;public void toFront();&#xA;&#xA;&#x9;public void addListener(im.view.ConversationViewListener l);&#xA;&#xA;}" startPosition="18" length="255" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.24/@types.0/@superInterfaceTypes.0/@name //@compilationUnits.26/@types.0/@bodyDeclarations.2/@returnType/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.11/@body/@statements.0/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.1/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.18/@types.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.11/@returnType/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.1/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.1/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@body/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@leftHandSide/@name //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.2/@expression/@arguments.0 //@compilationUnits.24/@types.0/@superInterfaceTypes.0/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@body/@statements.1/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@body/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.1/@type/@name/@name //@compilationUnits.26/@types.0/@bodyDeclarations.2/@name //@compilationUnits.4/@types.0/@bodyDeclarations.1/@fragments.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.8/@expression/@arguments.0/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.2/@expression/@arguments.0/@name //@compilationUnits.4/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@elseStatement/@statements.0/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.11/@name //@compilationUnits.4/@types.0/@bodyDeclarations.7/@body/@statements.0/@body/@statements.8/@expression/@arguments.0/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.12/@parameters.0/@name //@compilationUnits.16/@types.0/@bodyDeclarations.2/@returnType/@name //@compilationUnits.26/@types.0/@bodyDeclarations.2/@returnType/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@elseStatement/@statements.0/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@leftHandSide //@compilationUnits.16/@types.0/@bodyDeclarations.2/@returnType/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.3/@expression/@expression //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.1/@expression/@expression //@compilationUnits.16/@types.0/@bodyDeclarations.2/@name //@compilationUnits.4/@types.0/@bodyDeclarations.12/@parameters.0/@type/@name/@name //@compilationUnits.4/@types.0/@bodyDeclarations.11/@returnType/@name //@compilationUnits.4/@types.0/@bodyDeclarations.12/@body/@statements.0/@expression/@rightHandSide //@compilationUnits.4/@types.0/@bodyDeclarations.3/@body/@statements.3/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.12/@parameters.0/@type/@name //@compilationUnits.4/@types.0/@bodyDeclarations.4/@body/@statements.0/@thenStatement/@statements.1/@expression/@expression/@name //@compilationUnits.4/@types.0/@bodyDeclarations.5/@body/@statements.1/@expression/@expression" resolvedTypeReferences="//@compilationUnits.4/@types.0/@bodyDeclarations.11/@returnType //@compilationUnits.24/@types.0/@superInterfaceTypes.0 //@compilationUnits.4/@types.0/@bodyDeclarations.1/@type //@compilationUnits.4/@types.0/@bodyDeclarations.12/@parameters.0/@type //@compilationUnits.26/@types.0/@bodyDeclarations.2/@returnType //@compilationUnits.16/@types.0/@bodyDeclarations.2/@returnType" interface="true">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="18" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.Object getContent();" startPosition="55" length="37">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="55" length="6" public="true"/>
        <name lexicalForm="getContent" startPosition="79" length="10" fullyQualifiedName="getContent" identifier="getContent" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="62" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="62" length="16" fullyQualifiedName="java.lang.Object">
            <name lexicalForm="Object" startPosition="72" length="6" fullyQualifiedName="Object" identifier="Object"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="62" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="67" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="62" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addContent(java.lang.Object c);" startPosition="95" length="43">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="95" length="6" public="true"/>
        <name lexicalForm="addContent" startPosition="107" length="10" fullyQualifiedName="addContent" identifier="addContent" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="102" length="4" code="void"/>
        <parameters lexicalForm="java.lang.Object c" startPosition="118" length="18">
          <name lexicalForm="c" startPosition="135" length="1" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="118" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="118" length="16" fullyQualifiedName="java.lang.Object">
              <name lexicalForm="Object" startPosition="128" length="6" fullyQualifiedName="Object" identifier="Object"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="118" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="123" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="118" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setTitle(java.lang.String t);" startPosition="141" length="41">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="141" length="6" public="true"/>
        <name lexicalForm="setTitle" startPosition="153" length="8" fullyQualifiedName="setTitle" identifier="setTitle" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="148" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String t" startPosition="162" length="18">
          <name lexicalForm="t" startPosition="179" length="1" fullyQualifiedName="t" identifier="t" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="162" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="162" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="172" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="162" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="167" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="162" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void toFront();" startPosition="185" length="22">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="185" length="6" public="true"/>
        <name lexicalForm="toFront" startPosition="197" length="7" fullyQualifiedName="toFront" identifier="toFront" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="192" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addListener(im.view.ConversationViewListener l);" startPosition="210" length="60">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="210" length="6" public="true"/>
        <name lexicalForm="addListener" startPosition="222" length="11" fullyQualifiedName="addListener" identifier="addListener" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="217" length="4" code="void"/>
        <parameters lexicalForm="im.view.ConversationViewListener l" startPosition="234" length="34">
          <name lexicalForm="l" startPosition="267" length="1" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="l" identifier="l" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ConversationViewListener" startPosition="234" length="32" resolvedType="//@compilationUnits.22/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationViewListener" startPosition="234" length="32" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="im.view.ConversationViewListener">
              <name lexicalForm="ConversationViewListener" startPosition="242" length="24" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="ConversationViewListener" identifier="ConversationViewListener"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="234" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="237" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="234" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="ConversationView" startPosition="35" length="16" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="ConversationView" identifier="ConversationView" declaration="true"/>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view;&#xA;&#xA;public interface NewContactDialogListener {&#xA;&#x9;public void onNewContactDialogClose(boolean okClicked,&#xA;&#x9;&#x9;&#x9;im.view.NewContactDialog dlg);&#xA;&#xA;}&#xA;" length="155">
    <package lexicalForm="package im.view;" length="16">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
        <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public interface NewContactDialogListener {&#xA;&#x9;public void onNewContactDialogClose(boolean okClicked,&#xA;&#x9;&#x9;&#x9;im.view.NewContactDialog dlg);&#xA;&#xA;}" startPosition="18" length="136" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.25/@types.0/@bodyDeclarations.22/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type/@name //@compilationUnits.25/@types.0/@bodyDeclarations.22/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.25/@types.0/@bodyDeclarations.28/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.25/@types.0/@bodyDeclarations.28/@parameters.0/@name //@compilationUnits.25/@types.0/@bodyDeclarations.28/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@superInterfaceTypes.0/@name/@name //@compilationUnits.21/@types.0/@bodyDeclarations.5/@parameters.0/@name //@compilationUnits.25/@types.0/@bodyDeclarations.27/@parameters.0/@name //@compilationUnits.25/@types.0/@bodyDeclarations.27/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@superInterfaceTypes.0/@name //@compilationUnits.25/@imports.5/@name //@compilationUnits.25/@types.0/@bodyDeclarations.28/@parameters.0/@type/@name //@compilationUnits.25/@imports.5/@name/@name //@compilationUnits.19/@types.0/@name //@compilationUnits.25/@types.0/@bodyDeclarations.27/@parameters.0/@type/@name //@compilationUnits.25/@types.0/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.21/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name/@name //@compilationUnits.21/@types.0/@bodyDeclarations.5/@parameters.0/@type/@name //@compilationUnits.25/@types.0/@bodyDeclarations.27/@body/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.25/@types.0/@bodyDeclarations.22/@body/@statements.0/@body/@statements.0/@expression/@expression" resolvedTypeReferences="//@compilationUnits.5/@types.0/@superInterfaceTypes.0 //@compilationUnits.25/@types.0/@bodyDeclarations.27/@parameters.0/@type //@compilationUnits.25/@types.0/@bodyDeclarations.28/@parameters.0/@type //@compilationUnits.21/@types.0/@bodyDeclarations.5/@parameters.0/@type //@compilationUnits.25/@types.0/@bodyDeclarations.22/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type" interface="true">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="18" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onNewContactDialogClose(boolean okClicked,&#xA;&#x9;&#x9;&#x9;im.view.NewContactDialog dlg);" startPosition="63" length="88">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="63" length="6" public="true"/>
        <name lexicalForm="onNewContactDialogClose" startPosition="75" length="23" fullyQualifiedName="onNewContactDialogClose" identifier="onNewContactDialogClose" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="70" length="4" code="void"/>
        <parameters lexicalForm="boolean okClicked" startPosition="99" length="17">
          <name lexicalForm="okClicked" startPosition="107" length="9" fullyQualifiedName="okClicked" identifier="okClicked" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="99" length="7" code="boolean"/>
        </parameters>
        <parameters lexicalForm="im.view.NewContactDialog dlg" startPosition="121" length="28">
          <name lexicalForm="dlg" startPosition="146" length="3" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="dlg" identifier="dlg" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.NewContactDialog" startPosition="121" length="24" resolvedType="//@compilationUnits.21/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialog" startPosition="121" length="24" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="im.view.NewContactDialog">
              <name lexicalForm="NewContactDialog" startPosition="129" length="16" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="NewContactDialog" identifier="NewContactDialog"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="121" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="124" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="121" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="NewContactDialogListener" startPosition="35" length="24" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="NewContactDialogListener" identifier="NewContactDialogListener" declaration="true"/>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view;&#xA;&#xA;public interface ContactListViewListener {&#xA;&#x9;public void onContactListAdd();&#xA;&#xA;&#x9;public void onContactListRemove();&#xA;&#xA;&#x9;public void onContactListAction();&#xA;&#xA;}&#xA;" length="171">
    <package lexicalForm="package im.view;" length="16">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
        <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public interface ContactListViewListener {&#xA;&#x9;public void onContactListAdd();&#xA;&#xA;&#x9;public void onContactListRemove();&#xA;&#xA;&#x9;public void onContactListAction();&#xA;&#xA;}" startPosition="18" length="152" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.17/@types.0/@bodyDeclarations.4/@parameters.0/@type/@name/@name //@compilationUnits.17/@types.0/@bodyDeclarations.4/@parameters.0/@name //@compilationUnits.23/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.0/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.23/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.5/@types.0/@superInterfaceTypes.1/@name/@name //@compilationUnits.23/@types.0/@bodyDeclarations.27/@parameters.0/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.26/@parameters.0/@name //@compilationUnits.23/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@expression/@expression //@compilationUnits.20/@types.0/@name //@compilationUnits.23/@types.0/@bodyDeclarations.26/@parameters.0/@type/@name/@name //@compilationUnits.5/@types.0/@superInterfaceTypes.1/@name //@compilationUnits.23/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.0/@expression/@expression //@compilationUnits.23/@imports.5/@name //@compilationUnits.23/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type/@name //@compilationUnits.23/@imports.5/@name/@name //@compilationUnits.23/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type/@name //@compilationUnits.17/@types.0/@bodyDeclarations.4/@parameters.0/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.27/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.23/@types.0/@bodyDeclarations.26/@parameters.0/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.27/@parameters.0/@name //@compilationUnits.23/@types.0/@bodyDeclarations.26/@body/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.23/@types.0/@bodyDeclarations.27/@parameters.0/@type/@name/@name" resolvedTypeReferences="//@compilationUnits.23/@types.0/@bodyDeclarations.27/@parameters.0/@type //@compilationUnits.17/@types.0/@bodyDeclarations.4/@parameters.0/@type //@compilationUnits.23/@types.0/@bodyDeclarations.12/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type //@compilationUnits.5/@types.0/@superInterfaceTypes.1 //@compilationUnits.23/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type //@compilationUnits.23/@types.0/@bodyDeclarations.11/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type //@compilationUnits.23/@types.0/@bodyDeclarations.26/@parameters.0/@type" interface="true">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="18" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onContactListAdd();" startPosition="62" length="31">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="62" length="6" public="true"/>
        <name lexicalForm="onContactListAdd" startPosition="74" length="16" fullyQualifiedName="onContactListAdd" identifier="onContactListAdd" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="69" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onContactListRemove();" startPosition="96" length="34">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="96" length="6" public="true"/>
        <name lexicalForm="onContactListRemove" startPosition="108" length="19" fullyQualifiedName="onContactListRemove" identifier="onContactListRemove" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="103" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onContactListAction();" startPosition="133" length="34">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="133" length="6" public="true"/>
        <name lexicalForm="onContactListAction" startPosition="145" length="19" fullyQualifiedName="onContactListAction" identifier="onContactListAction" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="140" length="4" code="void"/>
      </bodyDeclarations>
      <name lexicalForm="ContactListViewListener" startPosition="35" length="23" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="ContactListViewListener" identifier="ContactListViewListener" declaration="true"/>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view;&#xA;&#xA;public interface NewContactDialog {&#xA;&#x9;public java.lang.String getUid();&#xA;&#xA;&#x9;public java.lang.String getName();&#xA;&#xA;&#x9;public int getNetwork();&#xA;&#xA;&#x9;public java.lang.String getPassword();&#xA;&#xA;&#x9;public void addNetwork(java.lang.String n);&#xA;&#xA;&#x9;public void addListener(im.view.NewContactDialogListener l);&#xA;&#xA;}&#xA;" length="306">
    <package lexicalForm="package im.view;" length="16">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
        <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public interface NewContactDialog {&#xA;&#x9;public java.lang.String getUid();&#xA;&#xA;&#x9;public java.lang.String getName();&#xA;&#xA;&#x9;public int getNetwork();&#xA;&#xA;&#x9;public java.lang.String getPassword();&#xA;&#xA;&#x9;public void addNetwork(java.lang.String n);&#xA;&#xA;&#x9;public void addListener(im.view.NewContactDialogListener l);&#xA;&#xA;}" startPosition="18" length="287" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.21/@types.0/@name //@compilationUnits.26/@types.0/@bodyDeclarations.3/@returnType/@name //@compilationUnits.16/@types.0/@bodyDeclarations.3/@returnType/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@parameters.1/@name //@compilationUnits.26/@types.0/@bodyDeclarations.3/@returnType/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.2/@fragments.0/@initializer/@name //@compilationUnits.19/@types.0/@bodyDeclarations.0/@parameters.1/@type/@name/@name //@compilationUnits.25/@types.0/@superInterfaceTypes.0/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@parameters.1/@type/@name/@name //@compilationUnits.16/@types.0/@bodyDeclarations.3/@returnType/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.4/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.2/@expression/@arguments.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer/@arguments.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.2/@expression/@arguments.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.4/@expression/@arguments.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.2/@type/@name/@name //@compilationUnits.16/@types.0/@bodyDeclarations.3/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.2/@type/@name //@compilationUnits.25/@types.0/@superInterfaceTypes.0/@name/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.2/@fragments.0/@name //@compilationUnits.19/@types.0/@bodyDeclarations.0/@parameters.1/@type/@name //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.3/@body/@statements.0/@expression/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.2/@fragments.0/@initializer //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.3/@expression/@arguments.0/@expression //@compilationUnits.5/@types.0/@bodyDeclarations.9/@parameters.1/@type/@name //@compilationUnits.26/@types.0/@bodyDeclarations.3/@name //@compilationUnits.5/@types.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.2/@elseStatement/@statements.3/@expression/@arguments.0/@expression //@compilationUnits.19/@types.0/@bodyDeclarations.0/@parameters.1/@name" resolvedTypeReferences="//@compilationUnits.26/@types.0/@bodyDeclarations.3/@returnType //@compilationUnits.5/@types.0/@bodyDeclarations.6/@body/@statements.2/@type //@compilationUnits.19/@types.0/@bodyDeclarations.0/@parameters.1/@type //@compilationUnits.5/@types.0/@bodyDeclarations.9/@parameters.1/@type //@compilationUnits.25/@types.0/@superInterfaceTypes.0 //@compilationUnits.16/@types.0/@bodyDeclarations.3/@returnType" interface="true">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="18" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getUid();" startPosition="55" length="33">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="55" length="6" public="true"/>
        <name lexicalForm="getUid" startPosition="79" length="6" fullyQualifiedName="getUid" identifier="getUid" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="62" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="62" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="72" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="62" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="67" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="62" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getName();" startPosition="91" length="34">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="91" length="6" public="true"/>
        <name lexicalForm="getName" startPosition="115" length="7" fullyQualifiedName="getName" identifier="getName" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="98" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="98" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="108" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="98" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="103" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="98" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public int getNetwork();" startPosition="128" length="24">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="128" length="6" public="true"/>
        <name lexicalForm="getNetwork" startPosition="139" length="10" fullyQualifiedName="getNetwork" identifier="getNetwork" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="135" length="3" code="int"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getPassword();" startPosition="155" length="38">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="155" length="6" public="true"/>
        <name lexicalForm="getPassword" startPosition="179" length="11" fullyQualifiedName="getPassword" identifier="getPassword" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="162" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="162" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="172" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="162" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="167" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="162" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addNetwork(java.lang.String n);" startPosition="196" length="43">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="196" length="6" public="true"/>
        <name lexicalForm="addNetwork" startPosition="208" length="10" fullyQualifiedName="addNetwork" identifier="addNetwork" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="203" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String n" startPosition="219" length="18">
          <name lexicalForm="n" startPosition="236" length="1" fullyQualifiedName="n" identifier="n" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="219" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="219" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="229" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="219" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="224" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="219" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addListener(im.view.NewContactDialogListener l);" startPosition="242" length="60">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="242" length="6" public="true"/>
        <name lexicalForm="addListener" startPosition="254" length="11" fullyQualifiedName="addListener" identifier="addListener" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="249" length="4" code="void"/>
        <parameters lexicalForm="im.view.NewContactDialogListener l" startPosition="266" length="34">
          <name lexicalForm="l" startPosition="299" length="1" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="l" identifier="l" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.NewContactDialogListener" startPosition="266" length="32" resolvedType="//@compilationUnits.19/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialogListener" startPosition="266" length="32" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="im.view.NewContactDialogListener">
              <name lexicalForm="NewContactDialogListener" startPosition="274" length="24" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="NewContactDialogListener" identifier="NewContactDialogListener"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="266" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="269" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="266" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="NewContactDialog" startPosition="35" length="16" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="NewContactDialog" identifier="NewContactDialog" declaration="true"/>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view;&#xA;&#xA;public interface ConversationViewListener {&#xA;&#x9;public void onConversationSend();&#xA;&#xA;&#x9;public void onConversationClose();&#xA;&#xA;}&#xA;" length="137">
    <package lexicalForm="package im.view;" length="16">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
        <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </package>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public interface ConversationViewListener {&#xA;&#x9;public void onConversationSend();&#xA;&#xA;&#x9;public void onConversationClose();&#xA;&#xA;}" startPosition="18" length="118" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.24/@types.0/@bodyDeclarations.19/@parameters.0/@type/@name/@name //@compilationUnits.18/@types.0/@bodyDeclarations.4/@parameters.0/@type/@name/@name //@compilationUnits.24/@types.0/@bodyDeclarations.19/@parameters.0/@type/@name //@compilationUnits.24/@imports.5/@name/@name //@compilationUnits.22/@types.0/@name //@compilationUnits.24/@types.0/@bodyDeclarations.20/@parameters.0/@name //@compilationUnits.24/@types.0/@bodyDeclarations.14/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.24/@imports.5/@name //@compilationUnits.18/@types.0/@bodyDeclarations.4/@parameters.0/@name //@compilationUnits.24/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@expression/@expression //@compilationUnits.18/@types.0/@bodyDeclarations.4/@parameters.0/@type/@name //@compilationUnits.24/@types.0/@bodyDeclarations.19/@body/@statements.0/@thenStatement/@statements.0/@expression/@arguments.0 //@compilationUnits.24/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.24/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type/@name //@compilationUnits.24/@types.0/@bodyDeclarations.20/@parameters.0/@type/@name/@name //@compilationUnits.24/@types.0/@bodyDeclarations.14/@body/@statements.0/@body/@statements.0/@expression/@expression //@compilationUnits.24/@types.0/@bodyDeclarations.14/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type/@name //@compilationUnits.4/@types.0/@superInterfaceTypes.0/@name/@name //@compilationUnits.4/@types.0/@superInterfaceTypes.0/@name //@compilationUnits.24/@types.0/@bodyDeclarations.20/@body/@statements.0/@expression/@arguments.0 //@compilationUnits.24/@types.0/@bodyDeclarations.19/@body/@statements.0/@expression/@operand/@arguments.0 //@compilationUnits.24/@types.0/@bodyDeclarations.20/@parameters.0/@type/@name //@compilationUnits.24/@types.0/@bodyDeclarations.19/@parameters.0/@name" resolvedTypeReferences="//@compilationUnits.24/@types.0/@bodyDeclarations.20/@parameters.0/@type //@compilationUnits.24/@types.0/@bodyDeclarations.14/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type //@compilationUnits.18/@types.0/@bodyDeclarations.4/@parameters.0/@type //@compilationUnits.24/@types.0/@bodyDeclarations.19/@parameters.0/@type //@compilationUnits.4/@types.0/@superInterfaceTypes.0 //@compilationUnits.24/@types.0/@bodyDeclarations.13/@body/@statements.0/@body/@statements.0/@expression/@expression/@expression/@type" interface="true">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="18" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onConversationSend();" startPosition="63" length="33">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="63" length="6" public="true"/>
        <name lexicalForm="onConversationSend" startPosition="75" length="18" fullyQualifiedName="onConversationSend" identifier="onConversationSend" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="70" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void onConversationClose();" startPosition="99" length="34">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="99" length="6" public="true"/>
        <name lexicalForm="onConversationClose" startPosition="111" length="19" fullyQualifiedName="onConversationClose" identifier="onConversationClose" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="106" length="4" code="void"/>
      </bodyDeclarations>
      <name lexicalForm="ConversationViewListener" startPosition="35" length="24" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="ConversationViewListener" identifier="ConversationViewListener" declaration="true"/>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view.swt;&#xA;&#xA;import org.eclipse.swt.widgets.*;&#xA;import org.eclipse.swt.*;&#xA;import im.InstantMessagingClient;&#xA;import org.eclipse.swt.events.*;&#xA;import org.eclipse.swt.layout.*;&#xA;import im.view.ContactListViewListener;&#xA;import org.eclipse.swt.graphics.*;&#xA;&#xA;public class SWTContactListView implements im.view.ContactListView {&#xA;&#x9;private org.eclipse.swt.widgets.Composite panel = new Composite(&#xA;&#x9;&#x9;&#x9;InstantMessagingClient.getInstance().getShell(), SWT.NONE);&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Table list = new Table(panel, SWT.SINGLE&#xA;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.BORDER);&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Composite btnPanel = new Composite(panel,&#xA;&#x9;&#x9;&#x9;SWT.NONE);&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Button addContactBtn = new Button(btnPanel,&#xA;&#x9;&#x9;&#x9;SWT.PUSH);&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Button removeContactBtn = new Button(&#xA;&#x9;&#x9;&#x9;btnPanel, SWT.PUSH);&#xA;&#xA;&#x9;private java.util.Set listener = new java.util.HashSet();&#xA;&#xA;&#x9;public void addContact(final im.model.Contact c, final int index) {&#xA;&#x9;&#x9;list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;TableItem item;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;item.setText(c.toString());&#xA;&#x9;&#x9;&#x9;&#x9;item.setImage(getStatusIcon(c.getStatus()));&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;public void setEnabled(final boolean enabled) {&#xA;&#x9;&#x9;getPanel().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getPanel().setEnabled(enabled);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;public int getSelectedContact() {&#xA;&#x9;&#x9;return list.getSelectionIndex();&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeContact(final int index) {&#xA;&#x9;&#x9;list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;list.remove(index);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;public SWTContactListView() {&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;addContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyAddClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;removeContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyRemoveClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;list.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetDefaultSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyContactAction();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;final Shell shell = InstantMessagingClient.getInstance().getShell();&#xA;&#x9;&#x9;shell.setText(&quot;Instant Messenger&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;FormData pfd = new FormData();&#xA;&#x9;&#x9;pfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;pfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;pfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;pfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;panel.setLayoutData(pfd);&#xA;&#x9;&#x9;panel.setLayout(new FormLayout());&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;FormData lfd = new FormData();&#xA;&#x9;&#x9;lfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;lfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;lfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;lfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;list.setLayoutData(lfd);&#xA;&#x9;&#x9;addContactBtn.setText(&quot;Add&quot;);&#xA;&#x9;&#x9;removeContactBtn.setText(&quot;Remove&quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifyContactAction() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAction();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifyRemoveClicked() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListRemove();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifyAddClicked() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAdd();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private org.eclipse.swt.graphics.Image getStatusIcon(java.lang.String status) {&#xA;&#x9;&#x9;final java.net.URL iconURL;&#xA;&#x9;&#x9;if (status != null) {&#xA;&#x9;&#x9;&#x9;if (status.equals(&quot;away&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;dnd&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;xa&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;offline&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;final im.InstantMessagingClient imc = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return new Image(imc.getShell().getDisplay(), iconURL.openStream());&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;imc.report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Composite getPanel() {&#xA;&#x9;&#x9;return panel;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setPanel(org.eclipse.swt.widgets.Composite panel) {&#xA;&#x9;&#x9;this.panel = panel;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Table getList() {&#xA;&#x9;&#x9;return list;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setList(org.eclipse.swt.widgets.Table list) {&#xA;&#x9;&#x9;this.list = list;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Composite getBtnPanel() {&#xA;&#x9;&#x9;return btnPanel;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setBtnPanel(org.eclipse.swt.widgets.Composite btnPanel) {&#xA;&#x9;&#x9;this.btnPanel = btnPanel;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Button getAddContactBtn() {&#xA;&#x9;&#x9;return addContactBtn;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setAddContactBtn(org.eclipse.swt.widgets.Button addContactBtn) {&#xA;&#x9;&#x9;this.addContactBtn = addContactBtn;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Button getRemoveContactBtn() {&#xA;&#x9;&#x9;return removeContactBtn;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setRemoveContactBtn(&#xA;&#x9;&#x9;&#x9;org.eclipse.swt.widgets.Button removeContactBtn) {&#xA;&#x9;&#x9;this.removeContactBtn = removeContactBtn;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getListeners() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addListener(im.view.ContactListViewListener listener) {&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeListener(im.view.ContactListViewListener listener) {&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="6014">
    <package lexicalForm="package im.view.swt;" length="20">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.swt" startPosition="8" length="11" fullyQualifiedName="im.view.swt">
        <name lexicalForm="swt" startPosition="16" length="3" fullyQualifiedName="swt" identifier="swt"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
          <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
        </qualifier>
      </name>
    </package>
    <imports lexicalForm="import org.eclipse.swt.widgets.*;" startPosition="22" length="33" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="29" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
        <name lexicalForm="widgets" startPosition="45" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="29" length="15" fullyQualifiedName="org.eclipse.swt">
          <name lexicalForm="swt" startPosition="41" length="3" fullyQualifiedName="swt" identifier="swt"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="29" length="11" fullyQualifiedName="org.eclipse">
            <name lexicalForm="eclipse" startPosition="33" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="29" length="3" fullyQualifiedName="org" identifier="org"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.*;" startPosition="56" length="25" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="63" length="15" fullyQualifiedName="org.eclipse.swt">
        <name lexicalForm="swt" startPosition="75" length="3" fullyQualifiedName="swt" identifier="swt"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="63" length="11" fullyQualifiedName="org.eclipse">
          <name lexicalForm="eclipse" startPosition="67" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="63" length="3" fullyQualifiedName="org" identifier="org"/>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import im.InstantMessagingClient;" startPosition="82" length="33">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="89" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
        <name lexicalForm="InstantMessagingClient" startPosition="92" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="89" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.events.*;" startPosition="116" length="32" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.events" startPosition="123" length="22" fullyQualifiedName="org.eclipse.swt.events">
        <name lexicalForm="events" startPosition="139" length="6" fullyQualifiedName="events" identifier="events"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="123" length="15" fullyQualifiedName="org.eclipse.swt">
          <name lexicalForm="swt" startPosition="135" length="3" fullyQualifiedName="swt" identifier="swt"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="123" length="11" fullyQualifiedName="org.eclipse">
            <name lexicalForm="eclipse" startPosition="127" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="123" length="3" fullyQualifiedName="org" identifier="org"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.layout.*;" startPosition="149" length="32" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.layout" startPosition="156" length="22" fullyQualifiedName="org.eclipse.swt.layout">
        <name lexicalForm="layout" startPosition="172" length="6" fullyQualifiedName="layout" identifier="layout"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="156" length="15" fullyQualifiedName="org.eclipse.swt">
          <name lexicalForm="swt" startPosition="168" length="3" fullyQualifiedName="swt" identifier="swt"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="156" length="11" fullyQualifiedName="org.eclipse">
            <name lexicalForm="eclipse" startPosition="160" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="156" length="3" fullyQualifiedName="org" identifier="org"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import im.view.ContactListViewListener;" startPosition="182" length="39">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListViewListener" startPosition="189" length="31" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="im.view.ContactListViewListener">
        <name lexicalForm="ContactListViewListener" startPosition="197" length="23" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="ContactListViewListener" identifier="ContactListViewListener"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="189" length="7" fullyQualifiedName="im.view">
          <name lexicalForm="view" startPosition="192" length="4" fullyQualifiedName="view" identifier="view"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="189" length="2" fullyQualifiedName="im" identifier="im"/>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.graphics.*;" startPosition="222" length="34" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.graphics" startPosition="229" length="24" fullyQualifiedName="org.eclipse.swt.graphics">
        <name lexicalForm="graphics" startPosition="245" length="8" fullyQualifiedName="graphics" identifier="graphics"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="229" length="15" fullyQualifiedName="org.eclipse.swt">
          <name lexicalForm="swt" startPosition="241" length="3" fullyQualifiedName="swt" identifier="swt"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="229" length="11" fullyQualifiedName="org.eclipse">
            <name lexicalForm="eclipse" startPosition="233" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="229" length="3" fullyQualifiedName="org" identifier="org"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class SWTContactListView implements im.view.ContactListView {&#xA;&#x9;private org.eclipse.swt.widgets.Composite panel = new Composite(&#xA;&#x9;&#x9;&#x9;InstantMessagingClient.getInstance().getShell(), SWT.NONE);&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Table list = new Table(panel, SWT.SINGLE&#xA;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.BORDER);&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Composite btnPanel = new Composite(panel,&#xA;&#x9;&#x9;&#x9;SWT.NONE);&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Button addContactBtn = new Button(btnPanel,&#xA;&#x9;&#x9;&#x9;SWT.PUSH);&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Button removeContactBtn = new Button(&#xA;&#x9;&#x9;&#x9;btnPanel, SWT.PUSH);&#xA;&#xA;&#x9;private java.util.Set listener = new java.util.HashSet();&#xA;&#xA;&#x9;public void addContact(final im.model.Contact c, final int index) {&#xA;&#x9;&#x9;list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;TableItem item;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;item.setText(c.toString());&#xA;&#x9;&#x9;&#x9;&#x9;item.setImage(getStatusIcon(c.getStatus()));&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;public void setEnabled(final boolean enabled) {&#xA;&#x9;&#x9;getPanel().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getPanel().setEnabled(enabled);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;public int getSelectedContact() {&#xA;&#x9;&#x9;return list.getSelectionIndex();&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeContact(final int index) {&#xA;&#x9;&#x9;list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;list.remove(index);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;public SWTContactListView() {&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;addContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyAddClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;removeContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyRemoveClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;list.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetDefaultSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyContactAction();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;final Shell shell = InstantMessagingClient.getInstance().getShell();&#xA;&#x9;&#x9;shell.setText(&quot;Instant Messenger&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;FormData pfd = new FormData();&#xA;&#x9;&#x9;pfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;pfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;pfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;pfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;panel.setLayoutData(pfd);&#xA;&#x9;&#x9;panel.setLayout(new FormLayout());&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;FormData lfd = new FormData();&#xA;&#x9;&#x9;lfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;lfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;lfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;lfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;list.setLayoutData(lfd);&#xA;&#x9;&#x9;addContactBtn.setText(&quot;Add&quot;);&#xA;&#x9;&#x9;removeContactBtn.setText(&quot;Remove&quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifyContactAction() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAction();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifyRemoveClicked() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListRemove();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifyAddClicked() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAdd();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private org.eclipse.swt.graphics.Image getStatusIcon(java.lang.String status) {&#xA;&#x9;&#x9;final java.net.URL iconURL;&#xA;&#x9;&#x9;if (status != null) {&#xA;&#x9;&#x9;&#x9;if (status.equals(&quot;away&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;dnd&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;xa&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;offline&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;final im.InstantMessagingClient imc = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return new Image(imc.getShell().getDisplay(), iconURL.openStream());&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;imc.report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Composite getPanel() {&#xA;&#x9;&#x9;return panel;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setPanel(org.eclipse.swt.widgets.Composite panel) {&#xA;&#x9;&#x9;this.panel = panel;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Table getList() {&#xA;&#x9;&#x9;return list;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setList(org.eclipse.swt.widgets.Table list) {&#xA;&#x9;&#x9;this.list = list;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Composite getBtnPanel() {&#xA;&#x9;&#x9;return btnPanel;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setBtnPanel(org.eclipse.swt.widgets.Composite btnPanel) {&#xA;&#x9;&#x9;this.btnPanel = btnPanel;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Button getAddContactBtn() {&#xA;&#x9;&#x9;return addContactBtn;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setAddContactBtn(org.eclipse.swt.widgets.Button addContactBtn) {&#xA;&#x9;&#x9;this.addContactBtn = addContactBtn;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Button getRemoveContactBtn() {&#xA;&#x9;&#x9;return removeContactBtn;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setRemoveContactBtn(&#xA;&#x9;&#x9;&#x9;org.eclipse.swt.widgets.Button removeContactBtn) {&#xA;&#x9;&#x9;this.removeContactBtn = removeContactBtn;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getListeners() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addListener(im.view.ContactListViewListener listener) {&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeListener(im.view.ContactListViewListener listener) {&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}&#xA;&#xA;}" startPosition="258" length="5755" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.23/@types.0/@bodyDeclarations.26/@body/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.20/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.23/@types.0/@name //@compilationUnits.26/@types.0/@bodyDeclarations.1/@body/@statements.0/@expression //@compilationUnits.26/@types.0/@bodyDeclarations.1/@body/@statements.0/@expression/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.16/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@rightHandSide/@expression/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.0/@expression/@rightHandSide/@expression/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.27/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@expression/@rightHandSide/@expression/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@expression/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.24/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.18/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.22/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@elseStatement/@statements.0/@expression/@rightHandSide/@expression/@type/@name //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@elseStatement/@thenStatement/@statements.0/@expression/@rightHandSide/@expression/@type/@name" resolvedTypeReferences="//@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@thenStatement/@statements.0/@expression/@rightHandSide/@expression/@type //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@expression/@type //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@elseStatement/@thenStatement/@statements.0/@expression/@rightHandSide/@expression/@type //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@expression/@rightHandSide/@expression/@type //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@rightHandSide/@expression/@type //@compilationUnits.26/@types.0/@bodyDeclarations.1/@body/@statements.0/@expression/@type //@compilationUnits.23/@types.0/@bodyDeclarations.14/@body/@statements.1/@elseStatement/@statements.0/@expression/@rightHandSide/@expression/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="258" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Composite panel = new Composite(&#xA;&#x9;&#x9;&#x9;InstantMessagingClient.getInstance().getShell(), SWT.NONE);" startPosition="328" length="127">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="328" length="7" private="true"/>
        <fragments lexicalForm="panel = new Composite(&#xA;&#x9;&#x9;&#x9;InstantMessagingClient.getInstance().getShell(), SWT.NONE)" startPosition="370" length="84">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Composite(&#xA;&#x9;&#x9;&#x9;InstantMessagingClient.getInstance().getShell(), SWT.NONE)" startPosition="378" length="76">
            <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell()" startPosition="396" length="47">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance()" startPosition="396" length="36" resolvedType="//@compilationUnits.2/@types.0">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="396" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                <name lexicalForm="getInstance" startPosition="419" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
              </expression>
              <name lexicalForm="getShell" startPosition="433" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
            </arguments>
            <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.NONE" startPosition="445" length="8" fullyQualifiedName="SWT.NONE">
              <name lexicalForm="NONE" startPosition="449" length="4" fullyQualifiedName="NONE" identifier="NONE"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="445" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
            </arguments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="Composite" startPosition="382" length="9">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="Composite" startPosition="382" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
            </type>
          </initializer>
          <name lexicalForm="panel" startPosition="370" length="5" fullyQualifiedName="panel" identifier="panel" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="336" length="33">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="336" length="33" fullyQualifiedName="org.eclipse.swt.widgets.Composite">
            <name lexicalForm="Composite" startPosition="360" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="336" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="352" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="336" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="348" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="336" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="340" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="336" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Table list = new Table(panel, SWT.SINGLE&#xA;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.BORDER);" startPosition="458" length="105">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="458" length="7" private="true"/>
        <fragments lexicalForm="list = new Table(panel, SWT.SINGLE&#xA;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.BORDER)" startPosition="496" length="66">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Table(panel, SWT.SINGLE&#xA;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.BORDER)" startPosition="503" length="59">
            <arguments xsi:type="JavaAST:SimpleName" lexicalForm="panel" startPosition="513" length="5" fullyQualifiedName="panel" identifier="panel"/>
            <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.SINGLE&#xA;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.BORDER" startPosition="520" length="41" operator="|">
              <extendedOperands xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.BORDER" startPosition="551" length="10" fullyQualifiedName="SWT.BORDER">
                <name lexicalForm="BORDER" startPosition="555" length="6" fullyQualifiedName="BORDER" identifier="BORDER"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="551" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
              </extendedOperands>
              <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.SINGLE" startPosition="520" length="10" fullyQualifiedName="SWT.SINGLE">
                <name lexicalForm="SINGLE" startPosition="524" length="6" fullyQualifiedName="SINGLE" identifier="SINGLE"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="520" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
              </leftOperand>
              <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.V_SCROLL" startPosition="536" length="12" fullyQualifiedName="SWT.V_SCROLL">
                <name lexicalForm="V_SCROLL" startPosition="540" length="8" fullyQualifiedName="V_SCROLL" identifier="V_SCROLL"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="536" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
              </rightOperand>
            </arguments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="Table" startPosition="507" length="5">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="Table" startPosition="507" length="5" fullyQualifiedName="Table" identifier="Table"/>
            </type>
          </initializer>
          <name lexicalForm="list" startPosition="496" length="4" fullyQualifiedName="list" identifier="list" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Table" startPosition="466" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Table" startPosition="466" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Table">
            <name lexicalForm="Table" startPosition="490" length="5" fullyQualifiedName="Table" identifier="Table"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="466" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="482" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="466" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="478" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="466" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="470" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="466" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Composite btnPanel = new Composite(panel,&#xA;&#x9;&#x9;&#x9;SWT.NONE);" startPosition="566" length="87">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="566" length="7" private="true"/>
        <fragments lexicalForm="btnPanel = new Composite(panel,&#xA;&#x9;&#x9;&#x9;SWT.NONE)" startPosition="608" length="44">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Composite(panel,&#xA;&#x9;&#x9;&#x9;SWT.NONE)" startPosition="619" length="33">
            <arguments xsi:type="JavaAST:SimpleName" lexicalForm="panel" startPosition="633" length="5" fullyQualifiedName="panel" identifier="panel"/>
            <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.NONE" startPosition="643" length="8" fullyQualifiedName="SWT.NONE">
              <name lexicalForm="NONE" startPosition="647" length="4" fullyQualifiedName="NONE" identifier="NONE"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="643" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
            </arguments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="Composite" startPosition="623" length="9">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="Composite" startPosition="623" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
            </type>
          </initializer>
          <name lexicalForm="btnPanel" startPosition="608" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="574" length="33">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="574" length="33" fullyQualifiedName="org.eclipse.swt.widgets.Composite">
            <name lexicalForm="Composite" startPosition="598" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="574" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="590" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="574" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="586" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="574" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="578" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="574" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Button addContactBtn = new Button(btnPanel,&#xA;&#x9;&#x9;&#x9;SWT.PUSH);" startPosition="656" length="89">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="656" length="7" private="true"/>
        <fragments lexicalForm="addContactBtn = new Button(btnPanel,&#xA;&#x9;&#x9;&#x9;SWT.PUSH)" startPosition="695" length="49">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Button(btnPanel,&#xA;&#x9;&#x9;&#x9;SWT.PUSH)" startPosition="711" length="33">
            <arguments xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="722" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
            <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.PUSH" startPosition="735" length="8" fullyQualifiedName="SWT.PUSH">
              <name lexicalForm="PUSH" startPosition="739" length="4" fullyQualifiedName="PUSH" identifier="PUSH"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="735" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
            </arguments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="Button" startPosition="715" length="6">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="Button" startPosition="715" length="6" fullyQualifiedName="Button" identifier="Button"/>
            </type>
          </initializer>
          <name lexicalForm="addContactBtn" startPosition="695" length="13" fullyQualifiedName="addContactBtn" identifier="addContactBtn" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="664" length="30">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="664" length="30" fullyQualifiedName="org.eclipse.swt.widgets.Button">
            <name lexicalForm="Button" startPosition="688" length="6" fullyQualifiedName="Button" identifier="Button"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="664" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="680" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="664" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="676" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="664" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="668" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="664" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Button removeContactBtn = new Button(&#xA;&#x9;&#x9;&#x9;btnPanel, SWT.PUSH);" startPosition="748" length="93">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="748" length="7" private="true"/>
        <fragments lexicalForm="removeContactBtn = new Button(&#xA;&#x9;&#x9;&#x9;btnPanel, SWT.PUSH)" startPosition="787" length="53">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Button(&#xA;&#x9;&#x9;&#x9;btnPanel, SWT.PUSH)" startPosition="806" length="34">
            <arguments xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="821" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
            <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.PUSH" startPosition="831" length="8" fullyQualifiedName="SWT.PUSH">
              <name lexicalForm="PUSH" startPosition="835" length="4" fullyQualifiedName="PUSH" identifier="PUSH"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="831" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
            </arguments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="Button" startPosition="810" length="6">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="Button" startPosition="810" length="6" fullyQualifiedName="Button" identifier="Button"/>
            </type>
          </initializer>
          <name lexicalForm="removeContactBtn" startPosition="787" length="16" fullyQualifiedName="removeContactBtn" identifier="removeContactBtn" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="756" length="30">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="756" length="30" fullyQualifiedName="org.eclipse.swt.widgets.Button">
            <name lexicalForm="Button" startPosition="780" length="6" fullyQualifiedName="Button" identifier="Button"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="756" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="772" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="756" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="768" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="756" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="760" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="756" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.util.Set listener = new java.util.HashSet();" startPosition="844" length="57">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="844" length="7" private="true"/>
        <fragments lexicalForm="listener = new java.util.HashSet()" startPosition="866" length="34">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.HashSet()" startPosition="877" length="23">
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.HashSet" startPosition="881" length="17">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.HashSet" startPosition="881" length="17" fullyQualifiedName="java.util.HashSet">
                <name lexicalForm="HashSet" startPosition="891" length="7" fullyQualifiedName="HashSet" identifier="HashSet"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="881" length="9" fullyQualifiedName="java.util">
                  <name lexicalForm="util" startPosition="886" length="4" fullyQualifiedName="util" identifier="util"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="881" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </initializer>
          <name lexicalForm="listener" startPosition="866" length="8" fullyQualifiedName="listener" identifier="listener" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Set" startPosition="852" length="13">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Set" startPosition="852" length="13" fullyQualifiedName="java.util.Set">
            <name lexicalForm="Set" startPosition="862" length="3" fullyQualifiedName="Set" identifier="Set"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="852" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="857" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="852" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addContact(final im.model.Contact c, final int index) {&#xA;&#x9;&#x9;list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;TableItem item;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;item.setText(c.toString());&#xA;&#x9;&#x9;&#x9;&#x9;item.setImage(getStatusIcon(c.getStatus()));&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}" startPosition="904" length="403">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="904" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;TableItem item;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;item.setText(c.toString());&#xA;&#x9;&#x9;&#x9;&#x9;item.setImage(getStatusIcon(c.getStatus()));&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}" startPosition="970" length="337">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;TableItem item;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;item.setText(c.toString());&#xA;&#x9;&#x9;&#x9;&#x9;item.setImage(getStatusIcon(c.getStatus()));&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="974" length="330">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;TableItem item;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;item.setText(c.toString());&#xA;&#x9;&#x9;&#x9;&#x9;item.setImage(getStatusIcon(c.getStatus()));&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="974" length="329">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;TableItem item;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;item.setText(c.toString());&#xA;&#x9;&#x9;&#x9;&#x9;item.setImage(getStatusIcon(c.getStatus()));&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1001" length="301">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;TableItem item;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;item.setText(c.toString());&#xA;&#x9;&#x9;&#x9;&#x9;item.setImage(getStatusIcon(c.getStatus()));&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1016" length="286">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;TableItem item;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;item.setText(c.toString());&#xA;&#x9;&#x9;&#x9;&#x9;item.setImage(getStatusIcon(c.getStatus()));&#xA;&#x9;&#x9;&#x9;}" startPosition="1021" length="277">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1021" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;TableItem item;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;item.setText(c.toString());&#xA;&#x9;&#x9;&#x9;&#x9;item.setImage(getStatusIcon(c.getStatus()));&#xA;&#x9;&#x9;&#x9;}" startPosition="1039" length="259">
                      <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="TableItem item;" startPosition="1045" length="15">
                        <fragments lexicalForm="item" startPosition="1055" length="4">
                          <name lexicalForm="item" startPosition="1055" length="4" fullyQualifiedName="item" identifier="item" declaration="true"/>
                        </fragments>
                        <type xsi:type="JavaAST:SimpleType" lexicalForm="TableItem" startPosition="1045" length="9">
                          <name xsi:type="JavaAST:SimpleName" lexicalForm="TableItem" startPosition="1045" length="9" fullyQualifiedName="TableItem" identifier="TableItem"/>
                        </type>
                      </statements>
                      <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;} catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1065" length="147">
                        <catchClauses lexicalForm="catch (IllegalArgumentException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1127" length="85">
                          <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1162" length="50">
                            <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="item = new TableItem(list, SWT.NONE);" startPosition="1169" length="37">
                              <expression xsi:type="JavaAST:Assignment" lexicalForm="item = new TableItem(list, SWT.NONE)" startPosition="1169" length="36" operator="=">
                                <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="item" startPosition="1169" length="4" fullyQualifiedName="item" identifier="item"/>
                                <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new TableItem(list, SWT.NONE)" startPosition="1176" length="29">
                                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="1190" length="4" fullyQualifiedName="list" identifier="list"/>
                                  <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.NONE" startPosition="1196" length="8" fullyQualifiedName="SWT.NONE">
                                    <name lexicalForm="NONE" startPosition="1200" length="4" fullyQualifiedName="NONE" identifier="NONE"/>
                                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="1196" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                                  </arguments>
                                  <type xsi:type="JavaAST:SimpleType" lexicalForm="TableItem" startPosition="1180" length="9">
                                    <name xsi:type="JavaAST:SimpleName" lexicalForm="TableItem" startPosition="1180" length="9" fullyQualifiedName="TableItem" identifier="TableItem"/>
                                  </type>
                                </rightHandSide>
                              </expression>
                            </statements>
                          </body>
                          <exception lexicalForm="IllegalArgumentException e" startPosition="1134" length="26">
                            <name lexicalForm="e" startPosition="1159" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                            <type xsi:type="JavaAST:SimpleType" lexicalForm="IllegalArgumentException" startPosition="1134" length="24">
                              <name xsi:type="JavaAST:SimpleName" lexicalForm="IllegalArgumentException" startPosition="1134" length="24" fullyQualifiedName="IllegalArgumentException" identifier="IllegalArgumentException"/>
                            </type>
                          </exception>
                        </catchClauses>
                        <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item = new TableItem(list, SWT.NONE, index);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1069" length="57">
                          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="item = new TableItem(list, SWT.NONE, index);" startPosition="1076" length="44">
                            <expression xsi:type="JavaAST:Assignment" lexicalForm="item = new TableItem(list, SWT.NONE, index)" startPosition="1076" length="43" operator="=">
                              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="item" startPosition="1076" length="4" fullyQualifiedName="item" identifier="item"/>
                              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new TableItem(list, SWT.NONE, index)" startPosition="1083" length="36">
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="1097" length="4" fullyQualifiedName="list" identifier="list"/>
                                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.NONE" startPosition="1103" length="8" fullyQualifiedName="SWT.NONE">
                                  <name lexicalForm="NONE" startPosition="1107" length="4" fullyQualifiedName="NONE" identifier="NONE"/>
                                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="1103" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                                </arguments>
                                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1113" length="5" fullyQualifiedName="index" identifier="index"/>
                                <type xsi:type="JavaAST:SimpleType" lexicalForm="TableItem" startPosition="1087" length="9">
                                  <name xsi:type="JavaAST:SimpleName" lexicalForm="TableItem" startPosition="1087" length="9" fullyQualifiedName="TableItem" identifier="TableItem"/>
                                </type>
                              </rightHandSide>
                            </expression>
                          </statements>
                        </body>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="item.setText(c.toString());" startPosition="1217" length="27">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="item.setText(c.toString())" startPosition="1217" length="26">
                          <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.toString()" startPosition="1230" length="12">
                            <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1230" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                            <name lexicalForm="toString" startPosition="1232" length="8" fullyQualifiedName="toString" identifier="toString"/>
                          </arguments>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="item" startPosition="1217" length="4" fullyQualifiedName="item" identifier="item"/>
                          <name lexicalForm="setText" startPosition="1222" length="7" fullyQualifiedName="setText" identifier="setText"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="item.setImage(getStatusIcon(c.getStatus()));" startPosition="1249" length="44">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="item.setImage(getStatusIcon(c.getStatus()))" startPosition="1249" length="43">
                          <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getStatusIcon(c.getStatus())" startPosition="1263" length="28">
                            <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="c.getStatus()" startPosition="1277" length="13">
                              <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="1277" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c"/>
                              <name lexicalForm="getStatus" startPosition="1279" length="9" fullyQualifiedName="getStatus" identifier="getStatus"/>
                            </arguments>
                            <name lexicalForm="getStatusIcon" startPosition="1263" length="13" fullyQualifiedName="getStatusIcon" identifier="getStatusIcon"/>
                          </arguments>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="item" startPosition="1249" length="4" fullyQualifiedName="item" identifier="item"/>
                          <name lexicalForm="setImage" startPosition="1254" length="8" fullyQualifiedName="setImage" identifier="setImage"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="run" startPosition="1033" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1028" length="4" code="void"/>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Runnable" startPosition="1005" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Runnable" startPosition="1005" length="8" fullyQualifiedName="Runnable" identifier="Runnable"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="list.getDisplay()" startPosition="974" length="17">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="974" length="4" fullyQualifiedName="list" identifier="list"/>
                <name lexicalForm="getDisplay" startPosition="979" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
              </expression>
              <name lexicalForm="syncExec" startPosition="992" length="8" fullyQualifiedName="syncExec" identifier="syncExec"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="addContact" startPosition="916" length="10" fullyQualifiedName="addContact" identifier="addContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="911" length="4" code="void"/>
        <parameters lexicalForm="final im.model.Contact c" startPosition="927" length="24">
          <name lexicalForm="c" startPosition="950" length="1" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.model.Contact" startPosition="933" length="16" resolvedType="//@compilationUnits.7/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.model.Contact" startPosition="933" length="16" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="im.model.Contact">
              <name lexicalForm="Contact" startPosition="942" length="7" resolvedType="//@compilationUnits.7/@types.0" fullyQualifiedName="Contact" identifier="Contact"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.model" startPosition="933" length="8" fullyQualifiedName="im.model">
                <name lexicalForm="model" startPosition="936" length="5" fullyQualifiedName="model" identifier="model"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="933" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="927" length="5" final="true"/>
        </parameters>
        <parameters lexicalForm="final int index" startPosition="953" length="15">
          <name lexicalForm="index" startPosition="963" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="959" length="3" code="int"/>
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="953" length="5" final="true"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setEnabled(final boolean enabled) {&#xA;&#x9;&#x9;getPanel().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getPanel().setEnabled(enabled);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1310" length="172">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1310" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;getPanel().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getPanel().setEnabled(enabled);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1356" length="126">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getPanel().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getPanel().setEnabled(enabled);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="1360" length="119">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getPanel().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getPanel().setEnabled(enabled);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="1360" length="118">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getPanel().setEnabled(enabled);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1393" length="84">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getPanel().setEnabled(enabled);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1408" length="69">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getPanel().setEnabled(enabled);&#xA;&#x9;&#x9;&#x9;}" startPosition="1413" length="60">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1413" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;getPanel().setEnabled(enabled);&#xA;&#x9;&#x9;&#x9;}" startPosition="1431" length="42">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getPanel().setEnabled(enabled);" startPosition="1437" length="31">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getPanel().setEnabled(enabled)" startPosition="1437" length="30">
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="enabled" startPosition="1459" length="7" fullyQualifiedName="enabled" identifier="enabled"/>
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getPanel()" startPosition="1437" length="10">
                            <name lexicalForm="getPanel" startPosition="1437" length="8" fullyQualifiedName="getPanel" identifier="getPanel"/>
                          </expression>
                          <name lexicalForm="setEnabled" startPosition="1448" length="10" fullyQualifiedName="setEnabled" identifier="setEnabled"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="run" startPosition="1425" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1420" length="4" code="void"/>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Runnable" startPosition="1397" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Runnable" startPosition="1397" length="8" fullyQualifiedName="Runnable" identifier="Runnable"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getPanel().getDisplay()" startPosition="1360" length="23">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getPanel()" startPosition="1360" length="10">
                  <name lexicalForm="getPanel" startPosition="1360" length="8" fullyQualifiedName="getPanel" identifier="getPanel"/>
                </expression>
                <name lexicalForm="getDisplay" startPosition="1371" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
              </expression>
              <name lexicalForm="syncExec" startPosition="1384" length="8" fullyQualifiedName="syncExec" identifier="syncExec"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setEnabled" startPosition="1322" length="10" fullyQualifiedName="setEnabled" identifier="setEnabled" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1317" length="4" code="void"/>
        <parameters lexicalForm="final boolean enabled" startPosition="1333" length="21">
          <name lexicalForm="enabled" startPosition="1347" length="7" fullyQualifiedName="enabled" identifier="enabled" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="1339" length="7" code="boolean"/>
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="1333" length="5" final="true"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public int getSelectedContact() {&#xA;&#x9;&#x9;return list.getSelectionIndex();&#xA;&#x9;}" startPosition="1485" length="71">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1485" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return list.getSelectionIndex();&#xA;&#x9;}" startPosition="1517" length="39">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return list.getSelectionIndex();" startPosition="1521" length="32">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="list.getSelectionIndex()" startPosition="1528" length="24">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="1528" length="4" fullyQualifiedName="list" identifier="list"/>
              <name lexicalForm="getSelectionIndex" startPosition="1533" length="17" fullyQualifiedName="getSelectionIndex" identifier="getSelectionIndex"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getSelectedContact" startPosition="1496" length="18" fullyQualifiedName="getSelectedContact" identifier="getSelectedContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="1492" length="3" code="int"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeContact(final int index) {&#xA;&#x9;&#x9;list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;list.remove(index);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1559" length="151">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1559" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;list.remove(index);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1602" length="108">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;list.remove(index);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="1606" length="101">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="list.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;list.remove(index);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="1606" length="100">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;list.remove(index);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1633" length="72">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;list.remove(index);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1648" length="57">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;list.remove(index);&#xA;&#x9;&#x9;&#x9;}" startPosition="1653" length="48">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1653" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;list.remove(index);&#xA;&#x9;&#x9;&#x9;}" startPosition="1671" length="30">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="list.remove(index);" startPosition="1677" length="19">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="list.remove(index)" startPosition="1677" length="18">
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="index" startPosition="1689" length="5" fullyQualifiedName="index" identifier="index"/>
                          <expression xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="1677" length="4" fullyQualifiedName="list" identifier="list"/>
                          <name lexicalForm="remove" startPosition="1682" length="6" fullyQualifiedName="remove" identifier="remove"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="run" startPosition="1665" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1660" length="4" code="void"/>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Runnable" startPosition="1637" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Runnable" startPosition="1637" length="8" fullyQualifiedName="Runnable" identifier="Runnable"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="list.getDisplay()" startPosition="1606" length="17">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="1606" length="4" fullyQualifiedName="list" identifier="list"/>
                <name lexicalForm="getDisplay" startPosition="1611" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
              </expression>
              <name lexicalForm="syncExec" startPosition="1624" length="8" fullyQualifiedName="syncExec" identifier="syncExec"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="removeContact" startPosition="1571" length="13" fullyQualifiedName="removeContact" identifier="removeContact" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1566" length="4" code="void"/>
        <parameters lexicalForm="final int index" startPosition="1585" length="15">
          <name lexicalForm="index" startPosition="1595" length="5" fullyQualifiedName="index" identifier="index" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="1591" length="3" code="int"/>
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="1585" length="5" final="true"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public SWTContactListView() {&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;addContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyAddClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;removeContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyRemoveClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;list.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetDefaultSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyContactAction();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;final Shell shell = InstantMessagingClient.getInstance().getShell();&#xA;&#x9;&#x9;shell.setText(&quot;Instant Messenger&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;FormData pfd = new FormData();&#xA;&#x9;&#x9;pfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;pfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;pfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;pfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;panel.setLayoutData(pfd);&#xA;&#x9;&#x9;panel.setLayout(new FormLayout());&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;FormData lfd = new FormData();&#xA;&#x9;&#x9;lfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;lfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;lfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;lfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;list.setLayoutData(lfd);&#xA;&#x9;&#x9;addContactBtn.setText(&quot;Add&quot;);&#xA;&#x9;&#x9;removeContactBtn.setText(&quot;Remove&quot;);&#xA;&#x9;}" startPosition="1713" length="1433" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1713" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;addContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyAddClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;removeContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyRemoveClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;list.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetDefaultSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyContactAction();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;final Shell shell = InstantMessagingClient.getInstance().getShell();&#xA;&#x9;&#x9;shell.setText(&quot;Instant Messenger&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;FormData pfd = new FormData();&#xA;&#x9;&#x9;pfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;pfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;pfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;pfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;panel.setLayoutData(pfd);&#xA;&#x9;&#x9;panel.setLayout(new FormLayout());&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;FormData lfd = new FormData();&#xA;&#x9;&#x9;lfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;lfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;lfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;lfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;list.setLayoutData(lfd);&#xA;&#x9;&#x9;addContactBtn.setText(&quot;Add&quot;);&#xA;&#x9;&#x9;removeContactBtn.setText(&quot;Remove&quot;);&#xA;&#x9;}" startPosition="1741" length="1405">
          <statements xsi:type="JavaAST:SuperConstructorInvocation" lexicalForm="super();" startPosition="1745" length="8"/>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="addContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyAddClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="1756" length="144">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="addContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyAddClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="1756" length="143">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyAddClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1791" length="107">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyAddClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1814" length="84">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyAddClicked();&#xA;&#x9;&#x9;&#x9;}" startPosition="1819" length="75">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1819" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;notifyAddClicked();&#xA;&#x9;&#x9;&#x9;}" startPosition="1864" length="30">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyAddClicked();" startPosition="1870" length="19">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyAddClicked()" startPosition="1870" length="18">
                          <name lexicalForm="notifyAddClicked" startPosition="1870" length="16" fullyQualifiedName="notifyAddClicked" identifier="notifyAddClicked"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="widgetSelected" startPosition="1831" length="14" fullyQualifiedName="widgetSelected" identifier="widgetSelected" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1826" length="4" code="void"/>
                    <parameters lexicalForm="SelectionEvent e" startPosition="1846" length="16">
                      <name lexicalForm="e" startPosition="1861" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionEvent" startPosition="1846" length="14">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionEvent" startPosition="1846" length="14" fullyQualifiedName="SelectionEvent" identifier="SelectionEvent"/>
                      </type>
                    </parameters>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionAdapter" startPosition="1795" length="16">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionAdapter" startPosition="1795" length="16" fullyQualifiedName="SelectionAdapter" identifier="SelectionAdapter"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="addContactBtn" startPosition="1756" length="13" fullyQualifiedName="addContactBtn" identifier="addContactBtn"/>
              <name lexicalForm="addSelectionListener" startPosition="1770" length="20" fullyQualifiedName="addSelectionListener" identifier="addSelectionListener"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="removeContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyRemoveClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="1903" length="150">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="removeContactBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyRemoveClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="1903" length="149">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyRemoveClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1941" length="110">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyRemoveClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1964" length="87">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyRemoveClicked();&#xA;&#x9;&#x9;&#x9;}" startPosition="1969" length="78">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1969" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;notifyRemoveClicked();&#xA;&#x9;&#x9;&#x9;}" startPosition="2014" length="33">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyRemoveClicked();" startPosition="2020" length="22">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyRemoveClicked()" startPosition="2020" length="21">
                          <name lexicalForm="notifyRemoveClicked" startPosition="2020" length="19" fullyQualifiedName="notifyRemoveClicked" identifier="notifyRemoveClicked"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="widgetSelected" startPosition="1981" length="14" fullyQualifiedName="widgetSelected" identifier="widgetSelected" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1976" length="4" code="void"/>
                    <parameters lexicalForm="SelectionEvent e" startPosition="1996" length="16">
                      <name lexicalForm="e" startPosition="2011" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionEvent" startPosition="1996" length="14">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionEvent" startPosition="1996" length="14" fullyQualifiedName="SelectionEvent" identifier="SelectionEvent"/>
                      </type>
                    </parameters>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionAdapter" startPosition="1945" length="16">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionAdapter" startPosition="1945" length="16" fullyQualifiedName="SelectionAdapter" identifier="SelectionAdapter"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="removeContactBtn" startPosition="1903" length="16" fullyQualifiedName="removeContactBtn" identifier="removeContactBtn"/>
              <name lexicalForm="addSelectionListener" startPosition="1920" length="20" fullyQualifiedName="addSelectionListener" identifier="addSelectionListener"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="list.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetDefaultSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyContactAction();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="2056" length="145">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="list.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetDefaultSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyContactAction();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="2056" length="144">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetDefaultSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyContactAction();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2082" length="117">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void widgetDefaultSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyContactAction();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2105" length="94">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void widgetDefaultSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyContactAction();&#xA;&#x9;&#x9;&#x9;}" startPosition="2110" length="85">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2110" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;notifyContactAction();&#xA;&#x9;&#x9;&#x9;}" startPosition="2162" length="33">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyContactAction();" startPosition="2168" length="22">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyContactAction()" startPosition="2168" length="21">
                          <name lexicalForm="notifyContactAction" startPosition="2168" length="19" fullyQualifiedName="notifyContactAction" identifier="notifyContactAction"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="widgetDefaultSelected" startPosition="2122" length="21" fullyQualifiedName="widgetDefaultSelected" identifier="widgetDefaultSelected" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2117" length="4" code="void"/>
                    <parameters lexicalForm="SelectionEvent e" startPosition="2144" length="16">
                      <name lexicalForm="e" startPosition="2159" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionEvent" startPosition="2144" length="14">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionEvent" startPosition="2144" length="14" fullyQualifiedName="SelectionEvent" identifier="SelectionEvent"/>
                      </type>
                    </parameters>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionAdapter" startPosition="2086" length="16">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionAdapter" startPosition="2086" length="16" fullyQualifiedName="SelectionAdapter" identifier="SelectionAdapter"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="2056" length="4" fullyQualifiedName="list" identifier="list"/>
              <name lexicalForm="addSelectionListener" startPosition="2061" length="20" fullyQualifiedName="addSelectionListener" identifier="addSelectionListener"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="final Shell shell = InstantMessagingClient.getInstance().getShell();" startPosition="2204" length="68">
            <fragments lexicalForm="shell = InstantMessagingClient.getInstance().getShell()" startPosition="2216" length="55">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell()" startPosition="2224" length="47">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance()" startPosition="2224" length="36" resolvedType="//@compilationUnits.2/@types.0">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="2224" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                  <name lexicalForm="getInstance" startPosition="2247" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                </expression>
                <name lexicalForm="getShell" startPosition="2261" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
              </initializer>
              <name lexicalForm="shell" startPosition="2216" length="5" fullyQualifiedName="shell" identifier="shell" declaration="true"/>
            </fragments>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="2204" length="5" final="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="Shell" startPosition="2210" length="5">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="Shell" startPosition="2210" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.setText(&quot;Instant Messenger&quot;);" startPosition="2275" length="35">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.setText(&quot;Instant Messenger&quot;)" startPosition="2275" length="34">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Instant Messenger&quot;" startPosition="2289" length="19" escapedValue="&quot;Instant Messenger&quot;" literalValue="Instant Messenger"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="2275" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="setText" startPosition="2281" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.setLayout(new FormLayout());" startPosition="2313" length="34">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.setLayout(new FormLayout())" startPosition="2313" length="33">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormLayout()" startPosition="2329" length="16">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormLayout" startPosition="2333" length="10">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormLayout" startPosition="2333" length="10" fullyQualifiedName="FormLayout" identifier="FormLayout"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="2313" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="setLayout" startPosition="2319" length="9" fullyQualifiedName="setLayout" identifier="setLayout"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="FormData pfd = new FormData();" startPosition="2350" length="30">
            <fragments lexicalForm="pfd = new FormData()" startPosition="2359" length="20">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormData()" startPosition="2365" length="14">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="2369" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="2369" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
                </type>
              </initializer>
              <name lexicalForm="pfd" startPosition="2359" length="3" fullyQualifiedName="pfd" identifier="pfd" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="2350" length="8">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="2350" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="pfd.top = new FormAttachment(0, 5);" startPosition="2383" length="35">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="pfd.top = new FormAttachment(0, 5)" startPosition="2383" length="34" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="pfd.top" startPosition="2383" length="7" fullyQualifiedName="pfd.top">
                <name lexicalForm="top" startPosition="2387" length="3" fullyQualifiedName="top" identifier="top"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="pfd" startPosition="2383" length="3" fullyQualifiedName="pfd" identifier="pfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="2393" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="2412" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="2415" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="2397" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="2397" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="pfd.left = new FormAttachment(0, 5);" startPosition="2421" length="36">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="pfd.left = new FormAttachment(0, 5)" startPosition="2421" length="35" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="pfd.left" startPosition="2421" length="8" fullyQualifiedName="pfd.left">
                <name lexicalForm="left" startPosition="2425" length="4" fullyQualifiedName="left" identifier="left"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="pfd" startPosition="2421" length="3" fullyQualifiedName="pfd" identifier="pfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="2432" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="2451" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="2454" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="2436" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="2436" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="pfd.right = new FormAttachment(100, -5);" startPosition="2460" length="40">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="pfd.right = new FormAttachment(100, -5)" startPosition="2460" length="39" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="pfd.right" startPosition="2460" length="9" fullyQualifiedName="pfd.right">
                <name lexicalForm="right" startPosition="2464" length="5" fullyQualifiedName="right" identifier="right"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="pfd" startPosition="2460" length="3" fullyQualifiedName="pfd" identifier="pfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="2472" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="2491" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="2496" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="2497" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="2476" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="2476" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="pfd.bottom = new FormAttachment(100, -5);" startPosition="2503" length="41">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="pfd.bottom = new FormAttachment(100, -5)" startPosition="2503" length="40" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="pfd.bottom" startPosition="2503" length="10" fullyQualifiedName="pfd.bottom">
                <name lexicalForm="bottom" startPosition="2507" length="6" fullyQualifiedName="bottom" identifier="bottom"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="pfd" startPosition="2503" length="3" fullyQualifiedName="pfd" identifier="pfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="2516" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="2535" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="2540" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="2541" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="2520" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="2520" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="panel.setLayoutData(pfd);" startPosition="2547" length="25">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="panel.setLayoutData(pfd)" startPosition="2547" length="24">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="pfd" startPosition="2567" length="3" fullyQualifiedName="pfd" identifier="pfd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="panel" startPosition="2547" length="5" fullyQualifiedName="panel" identifier="panel"/>
              <name lexicalForm="setLayoutData" startPosition="2553" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="panel.setLayout(new FormLayout());" startPosition="2575" length="34">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="panel.setLayout(new FormLayout())" startPosition="2575" length="33">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormLayout()" startPosition="2591" length="16">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormLayout" startPosition="2595" length="10">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormLayout" startPosition="2595" length="10" fullyQualifiedName="FormLayout" identifier="FormLayout"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="panel" startPosition="2575" length="5" fullyQualifiedName="panel" identifier="panel"/>
              <name lexicalForm="setLayout" startPosition="2581" length="9" fullyQualifiedName="setLayout" identifier="setLayout"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="FormData bpfd = new FormData();" startPosition="2612" length="31">
            <fragments lexicalForm="bpfd = new FormData()" startPosition="2621" length="21">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormData()" startPosition="2628" length="14">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="2632" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="2632" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
                </type>
              </initializer>
              <name lexicalForm="bpfd" startPosition="2621" length="4" fullyQualifiedName="bpfd" identifier="bpfd" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="2612" length="8">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="2612" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="bpfd.left = new FormAttachment(0, 5);" startPosition="2646" length="37">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="bpfd.left = new FormAttachment(0, 5)" startPosition="2646" length="36" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="bpfd.left" startPosition="2646" length="9" fullyQualifiedName="bpfd.left">
                <name lexicalForm="left" startPosition="2651" length="4" fullyQualifiedName="left" identifier="left"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="2646" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="2658" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="2677" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="2680" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="2662" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="2662" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="bpfd.right = new FormAttachment(100, -5);" startPosition="2686" length="41">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="bpfd.right = new FormAttachment(100, -5)" startPosition="2686" length="40" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="bpfd.right" startPosition="2686" length="10" fullyQualifiedName="bpfd.right">
                <name lexicalForm="right" startPosition="2691" length="5" fullyQualifiedName="right" identifier="right"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="2686" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="2699" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="2718" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="2723" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="2724" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="2703" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="2703" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="bpfd.bottom = new FormAttachment(100, -5);" startPosition="2730" length="42">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="bpfd.bottom = new FormAttachment(100, -5)" startPosition="2730" length="41" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="bpfd.bottom" startPosition="2730" length="11" fullyQualifiedName="bpfd.bottom">
                <name lexicalForm="bottom" startPosition="2735" length="6" fullyQualifiedName="bottom" identifier="bottom"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="2730" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="2744" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="2763" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="2768" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="2769" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="2748" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="2748" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="btnPanel.setLayoutData(bpfd);" startPosition="2775" length="29">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="btnPanel.setLayoutData(bpfd)" startPosition="2775" length="28">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="2798" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="2775" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
              <name lexicalForm="setLayoutData" startPosition="2784" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="btnPanel.setLayout(new FillLayout());" startPosition="2807" length="37">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="btnPanel.setLayout(new FillLayout())" startPosition="2807" length="36">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FillLayout()" startPosition="2826" length="16">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FillLayout" startPosition="2830" length="10">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FillLayout" startPosition="2830" length="10" fullyQualifiedName="FillLayout" identifier="FillLayout"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="2807" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
              <name lexicalForm="setLayout" startPosition="2816" length="9" fullyQualifiedName="setLayout" identifier="setLayout"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="FormData lfd = new FormData();" startPosition="2847" length="30">
            <fragments lexicalForm="lfd = new FormData()" startPosition="2856" length="20">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormData()" startPosition="2862" length="14">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="2866" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="2866" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
                </type>
              </initializer>
              <name lexicalForm="lfd" startPosition="2856" length="3" fullyQualifiedName="lfd" identifier="lfd" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="2847" length="8">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="2847" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="lfd.top = new FormAttachment(0, 5);" startPosition="2880" length="35">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="lfd.top = new FormAttachment(0, 5)" startPosition="2880" length="34" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="lfd.top" startPosition="2880" length="7" fullyQualifiedName="lfd.top">
                <name lexicalForm="top" startPosition="2884" length="3" fullyQualifiedName="top" identifier="top"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="lfd" startPosition="2880" length="3" fullyQualifiedName="lfd" identifier="lfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="2890" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="2909" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="2912" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="2894" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="2894" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="lfd.left = new FormAttachment(0, 5);" startPosition="2918" length="36">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="lfd.left = new FormAttachment(0, 5)" startPosition="2918" length="35" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="lfd.left" startPosition="2918" length="8" fullyQualifiedName="lfd.left">
                <name lexicalForm="left" startPosition="2922" length="4" fullyQualifiedName="left" identifier="left"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="lfd" startPosition="2918" length="3" fullyQualifiedName="lfd" identifier="lfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="2929" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="2948" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="2951" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="2933" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="2933" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="lfd.right = new FormAttachment(100, -5);" startPosition="2957" length="40">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="lfd.right = new FormAttachment(100, -5)" startPosition="2957" length="39" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="lfd.right" startPosition="2957" length="9" fullyQualifiedName="lfd.right">
                <name lexicalForm="right" startPosition="2961" length="5" fullyQualifiedName="right" identifier="right"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="lfd" startPosition="2957" length="3" fullyQualifiedName="lfd" identifier="lfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="2969" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="2988" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="2993" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="2994" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="2973" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="2973" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="lfd.bottom = new FormAttachment(btnPanel, -5);" startPosition="3000" length="46">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="lfd.bottom = new FormAttachment(btnPanel, -5)" startPosition="3000" length="45" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="lfd.bottom" startPosition="3000" length="10" fullyQualifiedName="lfd.bottom">
                <name lexicalForm="bottom" startPosition="3004" length="6" fullyQualifiedName="bottom" identifier="bottom"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="lfd" startPosition="3000" length="3" fullyQualifiedName="lfd" identifier="lfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(btnPanel, -5)" startPosition="3013" length="32">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="3032" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="3042" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3043" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3017" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3017" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="list.setLayoutData(lfd);" startPosition="3049" length="24">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="list.setLayoutData(lfd)" startPosition="3049" length="23">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="lfd" startPosition="3068" length="3" fullyQualifiedName="lfd" identifier="lfd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="3049" length="4" fullyQualifiedName="list" identifier="list"/>
              <name lexicalForm="setLayoutData" startPosition="3054" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="addContactBtn.setText(&quot;Add&quot;);" startPosition="3076" length="29">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="addContactBtn.setText(&quot;Add&quot;)" startPosition="3076" length="28">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Add&quot;" startPosition="3098" length="5" escapedValue="&quot;Add&quot;" literalValue="Add"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="addContactBtn" startPosition="3076" length="13" fullyQualifiedName="addContactBtn" identifier="addContactBtn"/>
              <name lexicalForm="setText" startPosition="3090" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="removeContactBtn.setText(&quot;Remove&quot;);" startPosition="3108" length="35">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="removeContactBtn.setText(&quot;Remove&quot;)" startPosition="3108" length="34">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Remove&quot;" startPosition="3133" length="8" escapedValue="&quot;Remove&quot;" literalValue="Remove"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="removeContactBtn" startPosition="3108" length="16" fullyQualifiedName="removeContactBtn" identifier="removeContactBtn"/>
              <name lexicalForm="setText" startPosition="3125" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="SWTContactListView" startPosition="1720" length="18" fullyQualifiedName="SWTContactListView" identifier="SWTContactListView"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void notifyContactAction() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAction();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="3149" length="189">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="3149" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAction();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="3184" length="154">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAction();&#xA;&#x9;&#x9;}" startPosition="3188" length="147">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAction();&#xA;&#x9;&#x9;}" startPosition="3259" length="76">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="((ContactListViewListener) ls.nextElement()).onContactListAction();" startPosition="3264" length="67">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="((ContactListViewListener) ls.nextElement()).onContactListAction()" startPosition="3264" length="66">
                  <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((ContactListViewListener) ls.nextElement())" startPosition="3264" length="44" resolvedType="//@compilationUnits.20/@types.0">
                    <expression xsi:type="JavaAST:CastExpression" lexicalForm="(ContactListViewListener) ls.nextElement()" startPosition="3265" length="42" resolvedType="//@compilationUnits.20/@types.0">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.nextElement()" startPosition="3291" length="16">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="3291" length="2" fullyQualifiedName="ls" identifier="ls"/>
                        <name lexicalForm="nextElement" startPosition="3294" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                      </expression>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="ContactListViewListener" startPosition="3266" length="23" resolvedType="//@compilationUnits.20/@types.0">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="ContactListViewListener" startPosition="3266" length="23" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="ContactListViewListener" identifier="ContactListViewListener"/>
                      </type>
                    </expression>
                  </expression>
                  <name lexicalForm="onContactListAction" startPosition="3309" length="19" fullyQualifiedName="onContactListAction" identifier="onContactListAction"/>
                </expression>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.hasMoreElements()" startPosition="3236" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="3236" length="2" fullyQualifiedName="ls" identifier="ls"/>
              <name lexicalForm="hasMoreElements" startPosition="3239" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ls = getListeners()" startPosition="3193" length="41">
              <fragments lexicalForm="ls = getListeners()" startPosition="3215" length="19">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getListeners()" startPosition="3220" length="14">
                  <name lexicalForm="getListeners" startPosition="3220" length="12" fullyQualifiedName="getListeners" identifier="getListeners"/>
                </initializer>
                <name lexicalForm="ls" startPosition="3215" length="2" fullyQualifiedName="ls" identifier="ls" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="3193" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="3193" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="3203" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="3193" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="3198" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3193" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
        </body>
        <name lexicalForm="notifyContactAction" startPosition="3162" length="19" fullyQualifiedName="notifyContactAction" identifier="notifyContactAction" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3157" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void notifyRemoveClicked() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListRemove();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="3341" length="189">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="3341" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListRemove();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="3376" length="154">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListRemove();&#xA;&#x9;&#x9;}" startPosition="3380" length="147">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListRemove();&#xA;&#x9;&#x9;}" startPosition="3451" length="76">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="((ContactListViewListener) ls.nextElement()).onContactListRemove();" startPosition="3456" length="67">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="((ContactListViewListener) ls.nextElement()).onContactListRemove()" startPosition="3456" length="66">
                  <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((ContactListViewListener) ls.nextElement())" startPosition="3456" length="44" resolvedType="//@compilationUnits.20/@types.0">
                    <expression xsi:type="JavaAST:CastExpression" lexicalForm="(ContactListViewListener) ls.nextElement()" startPosition="3457" length="42" resolvedType="//@compilationUnits.20/@types.0">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.nextElement()" startPosition="3483" length="16">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="3483" length="2" fullyQualifiedName="ls" identifier="ls"/>
                        <name lexicalForm="nextElement" startPosition="3486" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                      </expression>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="ContactListViewListener" startPosition="3458" length="23" resolvedType="//@compilationUnits.20/@types.0">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="ContactListViewListener" startPosition="3458" length="23" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="ContactListViewListener" identifier="ContactListViewListener"/>
                      </type>
                    </expression>
                  </expression>
                  <name lexicalForm="onContactListRemove" startPosition="3501" length="19" fullyQualifiedName="onContactListRemove" identifier="onContactListRemove"/>
                </expression>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.hasMoreElements()" startPosition="3428" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="3428" length="2" fullyQualifiedName="ls" identifier="ls"/>
              <name lexicalForm="hasMoreElements" startPosition="3431" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ls = getListeners()" startPosition="3385" length="41">
              <fragments lexicalForm="ls = getListeners()" startPosition="3407" length="19">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getListeners()" startPosition="3412" length="14">
                  <name lexicalForm="getListeners" startPosition="3412" length="12" fullyQualifiedName="getListeners" identifier="getListeners"/>
                </initializer>
                <name lexicalForm="ls" startPosition="3407" length="2" fullyQualifiedName="ls" identifier="ls" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="3385" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="3385" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="3395" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="3385" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="3390" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3385" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
        </body>
        <name lexicalForm="notifyRemoveClicked" startPosition="3354" length="19" fullyQualifiedName="notifyRemoveClicked" identifier="notifyRemoveClicked" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3349" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void notifyAddClicked() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAdd();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="3533" length="183">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="3533" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAdd();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="3565" length="151">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAdd();&#xA;&#x9;&#x9;}" startPosition="3569" length="144">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;((ContactListViewListener) ls.nextElement()).onContactListAdd();&#xA;&#x9;&#x9;}" startPosition="3640" length="73">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="((ContactListViewListener) ls.nextElement()).onContactListAdd();" startPosition="3645" length="64">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="((ContactListViewListener) ls.nextElement()).onContactListAdd()" startPosition="3645" length="63">
                  <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((ContactListViewListener) ls.nextElement())" startPosition="3645" length="44" resolvedType="//@compilationUnits.20/@types.0">
                    <expression xsi:type="JavaAST:CastExpression" lexicalForm="(ContactListViewListener) ls.nextElement()" startPosition="3646" length="42" resolvedType="//@compilationUnits.20/@types.0">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.nextElement()" startPosition="3672" length="16">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="3672" length="2" fullyQualifiedName="ls" identifier="ls"/>
                        <name lexicalForm="nextElement" startPosition="3675" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                      </expression>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="ContactListViewListener" startPosition="3647" length="23" resolvedType="//@compilationUnits.20/@types.0">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="ContactListViewListener" startPosition="3647" length="23" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="ContactListViewListener" identifier="ContactListViewListener"/>
                      </type>
                    </expression>
                  </expression>
                  <name lexicalForm="onContactListAdd" startPosition="3690" length="16" fullyQualifiedName="onContactListAdd" identifier="onContactListAdd"/>
                </expression>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.hasMoreElements()" startPosition="3617" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="3617" length="2" fullyQualifiedName="ls" identifier="ls"/>
              <name lexicalForm="hasMoreElements" startPosition="3620" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ls = getListeners()" startPosition="3574" length="41">
              <fragments lexicalForm="ls = getListeners()" startPosition="3596" length="19">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getListeners()" startPosition="3601" length="14">
                  <name lexicalForm="getListeners" startPosition="3601" length="12" fullyQualifiedName="getListeners" identifier="getListeners"/>
                </initializer>
                <name lexicalForm="ls" startPosition="3596" length="2" fullyQualifiedName="ls" identifier="ls" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="3574" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="3574" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="3584" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="3574" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="3579" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3574" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
        </body>
        <name lexicalForm="notifyAddClicked" startPosition="3546" length="16" fullyQualifiedName="notifyAddClicked" identifier="notifyAddClicked" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3541" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private org.eclipse.swt.graphics.Image getStatusIcon(java.lang.String status) {&#xA;&#x9;&#x9;final java.net.URL iconURL;&#xA;&#x9;&#x9;if (status != null) {&#xA;&#x9;&#x9;&#x9;if (status.equals(&quot;away&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;dnd&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;xa&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;offline&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;final im.InstantMessagingClient imc = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return new Image(imc.getShell().getDisplay(), iconURL.openStream());&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;imc.report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}" startPosition="3719" length="956">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="3719" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;final java.net.URL iconURL;&#xA;&#x9;&#x9;if (status != null) {&#xA;&#x9;&#x9;&#x9;if (status.equals(&quot;away&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;dnd&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;xa&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;offline&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;final im.InstantMessagingClient imc = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;return new Image(imc.getShell().getDisplay(), iconURL.openStream());&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;imc.report(e);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return null;&#xA;&#x9;}" startPosition="3797" length="878">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="final java.net.URL iconURL;" startPosition="3801" length="27">
            <fragments lexicalForm="iconURL" startPosition="3820" length="7">
              <name lexicalForm="iconURL" startPosition="3820" length="7" fullyQualifiedName="iconURL" identifier="iconURL" declaration="true"/>
            </fragments>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="3801" length="5" final="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.net.URL" startPosition="3807" length="12">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.net.URL" startPosition="3807" length="12" fullyQualifiedName="java.net.URL">
                <name lexicalForm="URL" startPosition="3816" length="3" fullyQualifiedName="URL" identifier="URL"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.net" startPosition="3807" length="8" fullyQualifiedName="java.net">
                  <name lexicalForm="net" startPosition="3812" length="3" fullyQualifiedName="net" identifier="net"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3807" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (status != null) {&#xA;&#x9;&#x9;&#x9;if (status.equals(&quot;away&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;dnd&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;xa&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;offline&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;}" startPosition="3831" length="612">
            <elseStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;}" startPosition="4372" length="71">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);" startPosition="4377" length="62">
                <expression xsi:type="JavaAST:Assignment" lexicalForm="iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;)" startPosition="4377" length="61" operator="=">
                  <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="iconURL" startPosition="4377" length="7" fullyQualifiedName="iconURL" identifier="iconURL"/>
                  <rightHandSide xsi:type="JavaAST:MethodInvocation" lexicalForm="SWTContactListView.class.getResource(&quot;offline.png&quot;)" startPosition="4387" length="51">
                    <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;offline.png&quot;" startPosition="4424" length="13" escapedValue="&quot;offline.png&quot;" literalValue="offline.png"/>
                    <expression xsi:type="JavaAST:TypeLiteral" lexicalForm="SWTContactListView.class" startPosition="4387" length="24">
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="SWTContactListView" startPosition="4387" length="18" resolvedType="//@compilationUnits.23/@types.0">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="SWTContactListView" startPosition="4387" length="18" resolvedType="//@compilationUnits.23/@types.0" fullyQualifiedName="SWTContactListView" identifier="SWTContactListView"/>
                      </type>
                    </expression>
                    <name lexicalForm="getResource" startPosition="4412" length="11" fullyQualifiedName="getResource" identifier="getResource"/>
                  </rightHandSide>
                </expression>
              </statements>
            </elseStatement>
            <expression xsi:type="JavaAST:InfixExpression" lexicalForm="status != null" startPosition="3835" length="14" operator="!=">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="3835" length="6" fullyQualifiedName="status" identifier="status"/>
              <rightOperand xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="3845" length="4"/>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;if (status.equals(&quot;away&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;dnd&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;xa&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;offline&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="3851" length="515">
              <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (status.equals(&quot;away&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;dnd&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;xa&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;offline&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="3856" length="506">
                <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (status.equals(&quot;dnd&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;xa&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;offline&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="3959" length="403">
                  <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (status.equals(&quot;xa&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);&#xA;&#x9;&#x9;&#x9;} else if (status.equals(&quot;offline&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="4061" length="301">
                    <elseStatement xsi:type="JavaAST:IfStatement" lexicalForm="if (status.equals(&quot;offline&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="4178" length="184">
                      <elseStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="4287" length="75">
                        <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;);" startPosition="4293" length="64">
                          <expression xsi:type="JavaAST:Assignment" lexicalForm="iconURL = SWTContactListView.class.getResource(&quot;available.png&quot;)" startPosition="4293" length="63" operator="=">
                            <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="iconURL" startPosition="4293" length="7" fullyQualifiedName="iconURL" identifier="iconURL"/>
                            <rightHandSide xsi:type="JavaAST:MethodInvocation" lexicalForm="SWTContactListView.class.getResource(&quot;available.png&quot;)" startPosition="4303" length="53">
                              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;available.png&quot;" startPosition="4340" length="15" escapedValue="&quot;available.png&quot;" literalValue="available.png"/>
                              <expression xsi:type="JavaAST:TypeLiteral" lexicalForm="SWTContactListView.class" startPosition="4303" length="24">
                                <type xsi:type="JavaAST:SimpleType" lexicalForm="SWTContactListView" startPosition="4303" length="18" resolvedType="//@compilationUnits.23/@types.0">
                                  <name xsi:type="JavaAST:SimpleName" lexicalForm="SWTContactListView" startPosition="4303" length="18" resolvedType="//@compilationUnits.23/@types.0" fullyQualifiedName="SWTContactListView" identifier="SWTContactListView"/>
                                </type>
                              </expression>
                              <name lexicalForm="getResource" startPosition="4328" length="11" fullyQualifiedName="getResource" identifier="getResource"/>
                            </rightHandSide>
                          </expression>
                        </statements>
                      </elseStatement>
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="status.equals(&quot;offline&quot;)" startPosition="4182" length="24">
                        <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;offline&quot;" startPosition="4196" length="9" escapedValue="&quot;offline&quot;" literalValue="offline"/>
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="4182" length="6" fullyQualifiedName="status" identifier="status"/>
                        <name lexicalForm="equals" startPosition="4189" length="6" fullyQualifiedName="equals" identifier="equals"/>
                      </expression>
                      <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="4208" length="73">
                        <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;);" startPosition="4214" length="62">
                          <expression xsi:type="JavaAST:Assignment" lexicalForm="iconURL = SWTContactListView.class.getResource(&quot;offline.png&quot;)" startPosition="4214" length="61" operator="=">
                            <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="iconURL" startPosition="4214" length="7" fullyQualifiedName="iconURL" identifier="iconURL"/>
                            <rightHandSide xsi:type="JavaAST:MethodInvocation" lexicalForm="SWTContactListView.class.getResource(&quot;offline.png&quot;)" startPosition="4224" length="51">
                              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;offline.png&quot;" startPosition="4261" length="13" escapedValue="&quot;offline.png&quot;" literalValue="offline.png"/>
                              <expression xsi:type="JavaAST:TypeLiteral" lexicalForm="SWTContactListView.class" startPosition="4224" length="24">
                                <type xsi:type="JavaAST:SimpleType" lexicalForm="SWTContactListView" startPosition="4224" length="18" resolvedType="//@compilationUnits.23/@types.0">
                                  <name xsi:type="JavaAST:SimpleName" lexicalForm="SWTContactListView" startPosition="4224" length="18" resolvedType="//@compilationUnits.23/@types.0" fullyQualifiedName="SWTContactListView" identifier="SWTContactListView"/>
                                </type>
                              </expression>
                              <name lexicalForm="getResource" startPosition="4249" length="11" fullyQualifiedName="getResource" identifier="getResource"/>
                            </rightHandSide>
                          </expression>
                        </statements>
                      </thenStatement>
                    </elseStatement>
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="status.equals(&quot;xa&quot;)" startPosition="4065" length="19">
                      <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;xa&quot;" startPosition="4079" length="4" escapedValue="&quot;xa&quot;" literalValue="xa"/>
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="4065" length="6" fullyQualifiedName="status" identifier="status"/>
                      <name lexicalForm="equals" startPosition="4072" length="6" fullyQualifiedName="equals" identifier="equals"/>
                    </expression>
                    <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="4086" length="86">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;);" startPosition="4092" length="75">
                        <expression xsi:type="JavaAST:Assignment" lexicalForm="iconURL = SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;)" startPosition="4092" length="74" operator="=">
                          <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="iconURL" startPosition="4092" length="7" fullyQualifiedName="iconURL" identifier="iconURL"/>
                          <rightHandSide xsi:type="JavaAST:MethodInvocation" lexicalForm="SWTContactListView.class&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getResource(&quot;extended-away.png&quot;)" startPosition="4102" length="64">
                            <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;extended-away.png&quot;" startPosition="4146" length="19" escapedValue="&quot;extended-away.png&quot;" literalValue="extended-away.png"/>
                            <expression xsi:type="JavaAST:TypeLiteral" lexicalForm="SWTContactListView.class" startPosition="4102" length="24">
                              <type xsi:type="JavaAST:SimpleType" lexicalForm="SWTContactListView" startPosition="4102" length="18" resolvedType="//@compilationUnits.23/@types.0">
                                <name xsi:type="JavaAST:SimpleName" lexicalForm="SWTContactListView" startPosition="4102" length="18" resolvedType="//@compilationUnits.23/@types.0" fullyQualifiedName="SWTContactListView" identifier="SWTContactListView"/>
                              </type>
                            </expression>
                            <name lexicalForm="getResource" startPosition="4134" length="11" fullyQualifiedName="getResource" identifier="getResource"/>
                          </rightHandSide>
                        </expression>
                      </statements>
                    </thenStatement>
                  </elseStatement>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="status.equals(&quot;dnd&quot;)" startPosition="3963" length="20">
                    <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;dnd&quot;" startPosition="3977" length="5" escapedValue="&quot;dnd&quot;" literalValue="dnd"/>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="3963" length="6" fullyQualifiedName="status" identifier="status"/>
                    <name lexicalForm="equals" startPosition="3970" length="6" fullyQualifiedName="equals" identifier="equals"/>
                  </expression>
                  <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="3985" length="70">
                    <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;);" startPosition="3991" length="59">
                      <expression xsi:type="JavaAST:Assignment" lexicalForm="iconURL = SWTContactListView.class.getResource(&quot;busy.png&quot;)" startPosition="3991" length="58" operator="=">
                        <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="iconURL" startPosition="3991" length="7" fullyQualifiedName="iconURL" identifier="iconURL"/>
                        <rightHandSide xsi:type="JavaAST:MethodInvocation" lexicalForm="SWTContactListView.class.getResource(&quot;busy.png&quot;)" startPosition="4001" length="48">
                          <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;busy.png&quot;" startPosition="4038" length="10" escapedValue="&quot;busy.png&quot;" literalValue="busy.png"/>
                          <expression xsi:type="JavaAST:TypeLiteral" lexicalForm="SWTContactListView.class" startPosition="4001" length="24">
                            <type xsi:type="JavaAST:SimpleType" lexicalForm="SWTContactListView" startPosition="4001" length="18" resolvedType="//@compilationUnits.23/@types.0">
                              <name xsi:type="JavaAST:SimpleName" lexicalForm="SWTContactListView" startPosition="4001" length="18" resolvedType="//@compilationUnits.23/@types.0" fullyQualifiedName="SWTContactListView" identifier="SWTContactListView"/>
                            </type>
                          </expression>
                          <name lexicalForm="getResource" startPosition="4026" length="11" fullyQualifiedName="getResource" identifier="getResource"/>
                        </rightHandSide>
                      </expression>
                    </statements>
                  </thenStatement>
                </elseStatement>
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="status.equals(&quot;away&quot;)" startPosition="3860" length="21">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;away&quot;" startPosition="3874" length="6" escapedValue="&quot;away&quot;" literalValue="away"/>
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="status" startPosition="3860" length="6" fullyQualifiedName="status" identifier="status"/>
                  <name lexicalForm="equals" startPosition="3867" length="6" fullyQualifiedName="equals" identifier="equals"/>
                </expression>
                <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;iconURL = SWTContactListView.class.getResource(&quot;away.png&quot;);&#xA;&#x9;&#x9;&#x9;}" startPosition="3883" length="70">
                  <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="iconURL = SWTContactListView.class.getResource(&quot;away.png&quot;);" startPosition="3889" length="59">
                    <expression xsi:type="JavaAST:Assignment" lexicalForm="iconURL = SWTContactListView.class.getResource(&quot;away.png&quot;)" startPosition="3889" length="58" operator="=">
                      <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="iconURL" startPosition="3889" length="7" fullyQualifiedName="iconURL" identifier="iconURL"/>
                      <rightHandSide xsi:type="JavaAST:MethodInvocation" lexicalForm="SWTContactListView.class.getResource(&quot;away.png&quot;)" startPosition="3899" length="48">
                        <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;away.png&quot;" startPosition="3936" length="10" escapedValue="&quot;away.png&quot;" literalValue="away.png"/>
                        <expression xsi:type="JavaAST:TypeLiteral" lexicalForm="SWTContactListView.class" startPosition="3899" length="24">
                          <type xsi:type="JavaAST:SimpleType" lexicalForm="SWTContactListView" startPosition="3899" length="18" resolvedType="//@compilationUnits.23/@types.0">
                            <name xsi:type="JavaAST:SimpleName" lexicalForm="SWTContactListView" startPosition="3899" length="18" resolvedType="//@compilationUnits.23/@types.0" fullyQualifiedName="SWTContactListView" identifier="SWTContactListView"/>
                          </type>
                        </expression>
                        <name lexicalForm="getResource" startPosition="3924" length="11" fullyQualifiedName="getResource" identifier="getResource"/>
                      </rightHandSide>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="final im.InstantMessagingClient imc = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance();" startPosition="4446" length="83">
            <fragments lexicalForm="imc = im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance()" startPosition="4478" length="50">
              <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="im.InstantMessagingClient&#xA;&#x9;&#x9;&#x9;&#x9;.getInstance()" startPosition="4484" length="44" resolvedType="//@compilationUnits.2/@types.0">
                <expression xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="4484" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                  <name lexicalForm="InstantMessagingClient" startPosition="4487" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4484" length="2" fullyQualifiedName="im" identifier="im"/>
                </expression>
                <name lexicalForm="getInstance" startPosition="4515" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
              </initializer>
              <name lexicalForm="imc" startPosition="4478" length="3" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="imc" identifier="imc" declaration="true"/>
            </fragments>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="4446" length="5" final="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="im.InstantMessagingClient" startPosition="4452" length="25" resolvedType="//@compilationUnits.2/@types.0">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="4452" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
                <name lexicalForm="InstantMessagingClient" startPosition="4455" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4452" length="2" fullyQualifiedName="im" identifier="im"/>
              </name>
            </type>
          </statements>
          <statements xsi:type="JavaAST:TryStatement" lexicalForm="try {&#xA;&#x9;&#x9;&#x9;return new Image(imc.getShell().getDisplay(), iconURL.openStream());&#xA;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;imc.report(e);&#xA;&#x9;&#x9;}" startPosition="4532" length="125">
            <catchClauses lexicalForm="catch (Exception e) {&#xA;&#x9;&#x9;&#x9;imc.report(e);&#xA;&#x9;&#x9;}" startPosition="4614" length="43">
              <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;imc.report(e);&#xA;&#x9;&#x9;}" startPosition="4634" length="23">
                <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="imc.report(e);" startPosition="4639" length="14">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="imc.report(e)" startPosition="4639" length="13">
                    <arguments xsi:type="JavaAST:SimpleName" lexicalForm="e" startPosition="4650" length="1" fullyQualifiedName="e" identifier="e"/>
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="imc" startPosition="4639" length="3" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="imc" identifier="imc"/>
                    <name lexicalForm="report" startPosition="4643" length="6" fullyQualifiedName="report" identifier="report"/>
                  </expression>
                </statements>
              </body>
              <exception lexicalForm="Exception e" startPosition="4621" length="11">
                <name lexicalForm="e" startPosition="4631" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Exception" startPosition="4621" length="9">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Exception" startPosition="4621" length="9" fullyQualifiedName="Exception" identifier="Exception"/>
                </type>
              </exception>
            </catchClauses>
            <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;return new Image(imc.getShell().getDisplay(), iconURL.openStream());&#xA;&#x9;&#x9;}" startPosition="4536" length="77">
              <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new Image(imc.getShell().getDisplay(), iconURL.openStream());" startPosition="4541" length="68">
                <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Image(imc.getShell().getDisplay(), iconURL.openStream())" startPosition="4548" length="60">
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="imc.getShell().getDisplay()" startPosition="4558" length="27">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="imc.getShell()" startPosition="4558" length="14">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="imc" startPosition="4558" length="3" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="imc" identifier="imc"/>
                      <name lexicalForm="getShell" startPosition="4562" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                    </expression>
                    <name lexicalForm="getDisplay" startPosition="4573" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
                  </arguments>
                  <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="iconURL.openStream()" startPosition="4587" length="20">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="iconURL" startPosition="4587" length="7" fullyQualifiedName="iconURL" identifier="iconURL"/>
                    <name lexicalForm="openStream" startPosition="4595" length="10" fullyQualifiedName="openStream" identifier="openStream"/>
                  </arguments>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="Image" startPosition="4552" length="5">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Image" startPosition="4552" length="5" fullyQualifiedName="Image" identifier="Image"/>
                  </type>
                </expression>
              </statements>
            </body>
          </statements>
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return null;" startPosition="4660" length="12">
            <expression xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="4667" length="4"/>
          </statements>
        </body>
        <name lexicalForm="getStatusIcon" startPosition="3758" length="13" fullyQualifiedName="getStatusIcon" identifier="getStatusIcon" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.graphics.Image" startPosition="3727" length="30">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.graphics.Image" startPosition="3727" length="30" fullyQualifiedName="org.eclipse.swt.graphics.Image">
            <name lexicalForm="Image" startPosition="3752" length="5" fullyQualifiedName="Image" identifier="Image"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.graphics" startPosition="3727" length="24" fullyQualifiedName="org.eclipse.swt.graphics">
              <name lexicalForm="graphics" startPosition="3743" length="8" fullyQualifiedName="graphics" identifier="graphics"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="3727" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="3739" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="3727" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="3731" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="3727" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </returnType>
        <parameters lexicalForm="java.lang.String status" startPosition="3772" length="23">
          <name lexicalForm="status" startPosition="3789" length="6" fullyQualifiedName="status" identifier="status" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="3772" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="3772" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="3782" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="3772" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="3777" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="3772" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public org.eclipse.swt.widgets.Composite getPanel() {&#xA;&#x9;&#x9;return panel;&#xA;&#x9;}" startPosition="4678" length="72">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4678" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return panel;&#xA;&#x9;}" startPosition="4730" length="20">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return panel;" startPosition="4734" length="13">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="panel" startPosition="4741" length="5" fullyQualifiedName="panel" identifier="panel"/>
          </statements>
        </body>
        <name lexicalForm="getPanel" startPosition="4719" length="8" fullyQualifiedName="getPanel" identifier="getPanel" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="4685" length="33">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="4685" length="33" fullyQualifiedName="org.eclipse.swt.widgets.Composite">
            <name lexicalForm="Composite" startPosition="4709" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="4685" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="4701" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="4685" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="4697" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="4685" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="4689" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="4685" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setPanel(org.eclipse.swt.widgets.Composite panel) {&#xA;&#x9;&#x9;this.panel = panel;&#xA;&#x9;}" startPosition="4753" length="88">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4753" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.panel = panel;&#xA;&#x9;}" startPosition="4815" length="26">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.panel = panel;" startPosition="4819" length="19">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.panel = panel" startPosition="4819" length="18" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.panel" startPosition="4819" length="10">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4819" length="4" resolvedType="//@compilationUnits.23/@types.0"/>
                <name lexicalForm="panel" startPosition="4824" length="5" fullyQualifiedName="panel" identifier="panel"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="panel" startPosition="4832" length="5" fullyQualifiedName="panel" identifier="panel"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setPanel" startPosition="4765" length="8" fullyQualifiedName="setPanel" identifier="setPanel" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4760" length="4" code="void"/>
        <parameters lexicalForm="org.eclipse.swt.widgets.Composite panel" startPosition="4774" length="39">
          <name lexicalForm="panel" startPosition="4808" length="5" fullyQualifiedName="panel" identifier="panel" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="4774" length="33">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="4774" length="33" fullyQualifiedName="org.eclipse.swt.widgets.Composite">
              <name lexicalForm="Composite" startPosition="4798" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="4774" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
                <name lexicalForm="widgets" startPosition="4790" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="4774" length="15" fullyQualifiedName="org.eclipse.swt">
                  <name lexicalForm="swt" startPosition="4786" length="3" fullyQualifiedName="swt" identifier="swt"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="4774" length="11" fullyQualifiedName="org.eclipse">
                    <name lexicalForm="eclipse" startPosition="4778" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="4774" length="3" fullyQualifiedName="org" identifier="org"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public org.eclipse.swt.widgets.Table getList() {&#xA;&#x9;&#x9;return list;&#xA;&#x9;}" startPosition="4844" length="66">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4844" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return list;&#xA;&#x9;}" startPosition="4891" length="19">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return list;" startPosition="4895" length="12">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="4902" length="4" fullyQualifiedName="list" identifier="list"/>
          </statements>
        </body>
        <name lexicalForm="getList" startPosition="4881" length="7" fullyQualifiedName="getList" identifier="getList" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Table" startPosition="4851" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Table" startPosition="4851" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Table">
            <name lexicalForm="Table" startPosition="4875" length="5" fullyQualifiedName="Table" identifier="Table"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="4851" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="4867" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="4851" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="4863" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="4851" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="4855" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="4851" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setList(org.eclipse.swt.widgets.Table list) {&#xA;&#x9;&#x9;this.list = list;&#xA;&#x9;}" startPosition="4913" length="80">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4913" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.list = list;&#xA;&#x9;}" startPosition="4969" length="24">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.list = list;" startPosition="4973" length="17">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.list = list" startPosition="4973" length="16" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.list" startPosition="4973" length="9">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4973" length="4" resolvedType="//@compilationUnits.23/@types.0"/>
                <name lexicalForm="list" startPosition="4978" length="4" fullyQualifiedName="list" identifier="list"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="list" startPosition="4985" length="4" fullyQualifiedName="list" identifier="list"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setList" startPosition="4925" length="7" fullyQualifiedName="setList" identifier="setList" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4920" length="4" code="void"/>
        <parameters lexicalForm="org.eclipse.swt.widgets.Table list" startPosition="4933" length="34">
          <name lexicalForm="list" startPosition="4963" length="4" fullyQualifiedName="list" identifier="list" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Table" startPosition="4933" length="29">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Table" startPosition="4933" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Table">
              <name lexicalForm="Table" startPosition="4957" length="5" fullyQualifiedName="Table" identifier="Table"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="4933" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
                <name lexicalForm="widgets" startPosition="4949" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="4933" length="15" fullyQualifiedName="org.eclipse.swt">
                  <name lexicalForm="swt" startPosition="4945" length="3" fullyQualifiedName="swt" identifier="swt"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="4933" length="11" fullyQualifiedName="org.eclipse">
                    <name lexicalForm="eclipse" startPosition="4937" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="4933" length="3" fullyQualifiedName="org" identifier="org"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public org.eclipse.swt.widgets.Composite getBtnPanel() {&#xA;&#x9;&#x9;return btnPanel;&#xA;&#x9;}" startPosition="4996" length="78">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4996" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return btnPanel;&#xA;&#x9;}" startPosition="5051" length="23">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return btnPanel;" startPosition="5055" length="16">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="5062" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
          </statements>
        </body>
        <name lexicalForm="getBtnPanel" startPosition="5037" length="11" fullyQualifiedName="getBtnPanel" identifier="getBtnPanel" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="5003" length="33">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="5003" length="33" fullyQualifiedName="org.eclipse.swt.widgets.Composite">
            <name lexicalForm="Composite" startPosition="5027" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="5003" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="5019" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="5003" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="5015" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="5003" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="5007" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="5003" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setBtnPanel(org.eclipse.swt.widgets.Composite btnPanel) {&#xA;&#x9;&#x9;this.btnPanel = btnPanel;&#xA;&#x9;}" startPosition="5077" length="100">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5077" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.btnPanel = btnPanel;&#xA;&#x9;}" startPosition="5145" length="32">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.btnPanel = btnPanel;" startPosition="5149" length="25">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.btnPanel = btnPanel" startPosition="5149" length="24" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.btnPanel" startPosition="5149" length="13">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5149" length="4" resolvedType="//@compilationUnits.23/@types.0"/>
                <name lexicalForm="btnPanel" startPosition="5154" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="5165" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setBtnPanel" startPosition="5089" length="11" fullyQualifiedName="setBtnPanel" identifier="setBtnPanel" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5084" length="4" code="void"/>
        <parameters lexicalForm="org.eclipse.swt.widgets.Composite btnPanel" startPosition="5101" length="42">
          <name lexicalForm="btnPanel" startPosition="5135" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="5101" length="33">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="5101" length="33" fullyQualifiedName="org.eclipse.swt.widgets.Composite">
              <name lexicalForm="Composite" startPosition="5125" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="5101" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
                <name lexicalForm="widgets" startPosition="5117" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="5101" length="15" fullyQualifiedName="org.eclipse.swt">
                  <name lexicalForm="swt" startPosition="5113" length="3" fullyQualifiedName="swt" identifier="swt"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="5101" length="11" fullyQualifiedName="org.eclipse">
                    <name lexicalForm="eclipse" startPosition="5105" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="5101" length="3" fullyQualifiedName="org" identifier="org"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public org.eclipse.swt.widgets.Button getAddContactBtn() {&#xA;&#x9;&#x9;return addContactBtn;&#xA;&#x9;}" startPosition="5180" length="85">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5180" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return addContactBtn;&#xA;&#x9;}" startPosition="5237" length="28">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return addContactBtn;" startPosition="5241" length="21">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="addContactBtn" startPosition="5248" length="13" fullyQualifiedName="addContactBtn" identifier="addContactBtn"/>
          </statements>
        </body>
        <name lexicalForm="getAddContactBtn" startPosition="5218" length="16" fullyQualifiedName="getAddContactBtn" identifier="getAddContactBtn" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="5187" length="30">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="5187" length="30" fullyQualifiedName="org.eclipse.swt.widgets.Button">
            <name lexicalForm="Button" startPosition="5211" length="6" fullyQualifiedName="Button" identifier="Button"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="5187" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="5203" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="5187" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="5199" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="5187" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="5191" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="5187" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setAddContactBtn(org.eclipse.swt.widgets.Button addContactBtn) {&#xA;&#x9;&#x9;this.addContactBtn = addContactBtn;&#xA;&#x9;}" startPosition="5268" length="117">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5268" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.addContactBtn = addContactBtn;&#xA;&#x9;}" startPosition="5343" length="42">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.addContactBtn = addContactBtn;" startPosition="5347" length="35">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.addContactBtn = addContactBtn" startPosition="5347" length="34" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.addContactBtn" startPosition="5347" length="18">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5347" length="4" resolvedType="//@compilationUnits.23/@types.0"/>
                <name lexicalForm="addContactBtn" startPosition="5352" length="13" fullyQualifiedName="addContactBtn" identifier="addContactBtn"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="addContactBtn" startPosition="5368" length="13" fullyQualifiedName="addContactBtn" identifier="addContactBtn"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setAddContactBtn" startPosition="5280" length="16" fullyQualifiedName="setAddContactBtn" identifier="setAddContactBtn" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5275" length="4" code="void"/>
        <parameters lexicalForm="org.eclipse.swt.widgets.Button addContactBtn" startPosition="5297" length="44">
          <name lexicalForm="addContactBtn" startPosition="5328" length="13" fullyQualifiedName="addContactBtn" identifier="addContactBtn" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="5297" length="30">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="5297" length="30" fullyQualifiedName="org.eclipse.swt.widgets.Button">
              <name lexicalForm="Button" startPosition="5321" length="6" fullyQualifiedName="Button" identifier="Button"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="5297" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
                <name lexicalForm="widgets" startPosition="5313" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="5297" length="15" fullyQualifiedName="org.eclipse.swt">
                  <name lexicalForm="swt" startPosition="5309" length="3" fullyQualifiedName="swt" identifier="swt"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="5297" length="11" fullyQualifiedName="org.eclipse">
                    <name lexicalForm="eclipse" startPosition="5301" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="5297" length="3" fullyQualifiedName="org" identifier="org"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public org.eclipse.swt.widgets.Button getRemoveContactBtn() {&#xA;&#x9;&#x9;return removeContactBtn;&#xA;&#x9;}" startPosition="5388" length="91">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5388" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return removeContactBtn;&#xA;&#x9;}" startPosition="5448" length="31">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return removeContactBtn;" startPosition="5452" length="24">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="removeContactBtn" startPosition="5459" length="16" fullyQualifiedName="removeContactBtn" identifier="removeContactBtn"/>
          </statements>
        </body>
        <name lexicalForm="getRemoveContactBtn" startPosition="5426" length="19" fullyQualifiedName="getRemoveContactBtn" identifier="getRemoveContactBtn" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="5395" length="30">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="5395" length="30" fullyQualifiedName="org.eclipse.swt.widgets.Button">
            <name lexicalForm="Button" startPosition="5419" length="6" fullyQualifiedName="Button" identifier="Button"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="5395" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="5411" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="5395" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="5407" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="5395" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="5399" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="5395" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setRemoveContactBtn(&#xA;&#x9;&#x9;&#x9;org.eclipse.swt.widgets.Button removeContactBtn) {&#xA;&#x9;&#x9;this.removeContactBtn = removeContactBtn;&#xA;&#x9;}" startPosition="5482" length="133">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5482" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.removeContactBtn = removeContactBtn;&#xA;&#x9;}" startPosition="5567" length="48">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.removeContactBtn = removeContactBtn;" startPosition="5571" length="41">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.removeContactBtn = removeContactBtn" startPosition="5571" length="40" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.removeContactBtn" startPosition="5571" length="21">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5571" length="4" resolvedType="//@compilationUnits.23/@types.0"/>
                <name lexicalForm="removeContactBtn" startPosition="5576" length="16" fullyQualifiedName="removeContactBtn" identifier="removeContactBtn"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="removeContactBtn" startPosition="5595" length="16" fullyQualifiedName="removeContactBtn" identifier="removeContactBtn"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setRemoveContactBtn" startPosition="5494" length="19" fullyQualifiedName="setRemoveContactBtn" identifier="setRemoveContactBtn" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5489" length="4" code="void"/>
        <parameters lexicalForm="org.eclipse.swt.widgets.Button removeContactBtn" startPosition="5518" length="47">
          <name lexicalForm="removeContactBtn" startPosition="5549" length="16" fullyQualifiedName="removeContactBtn" identifier="removeContactBtn" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="5518" length="30">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="5518" length="30" fullyQualifiedName="org.eclipse.swt.widgets.Button">
              <name lexicalForm="Button" startPosition="5542" length="6" fullyQualifiedName="Button" identifier="Button"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="5518" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
                <name lexicalForm="widgets" startPosition="5534" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="5518" length="15" fullyQualifiedName="org.eclipse.swt">
                  <name lexicalForm="swt" startPosition="5530" length="3" fullyQualifiedName="swt" identifier="swt"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="5518" length="11" fullyQualifiedName="org.eclipse">
                    <name lexicalForm="eclipse" startPosition="5522" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="5518" length="3" fullyQualifiedName="org" identifier="org"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.util.Enumeration getListeners() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}" startPosition="5618" length="130">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5618" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}" startPosition="5662" length="86">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());" startPosition="5666" length="79">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator())" startPosition="5673" length="71" resolvedType="//@compilationUnits.0/@types.0">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator()" startPosition="5719" length="24">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="5719" length="8" fullyQualifiedName="listener" identifier="listener"/>
                <name lexicalForm="iterator" startPosition="5733" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
              </arguments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="5677" length="41" resolvedType="//@compilationUnits.0/@types.0">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="5677" length="41" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="be.ac.vub.util.IteratorEnumerationAdapter">
                  <name lexicalForm="IteratorEnumerationAdapter" startPosition="5692" length="26" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="IteratorEnumerationAdapter" identifier="IteratorEnumerationAdapter"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util" startPosition="5677" length="14" fullyQualifiedName="be.ac.vub.util">
                    <name lexicalForm="util" startPosition="5687" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub" startPosition="5677" length="9" fullyQualifiedName="be.ac.vub">
                      <name lexicalForm="vub" startPosition="5683" length="3" fullyQualifiedName="vub" identifier="vub"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac" startPosition="5677" length="5" fullyQualifiedName="be.ac">
                        <name lexicalForm="ac" startPosition="5680" length="2" fullyQualifiedName="ac" identifier="ac"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="be" startPosition="5677" length="2" fullyQualifiedName="be" identifier="be"/>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </name>
              </type>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getListeners" startPosition="5647" length="12" fullyQualifiedName="getListeners" identifier="getListeners" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="5625" length="21">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="5625" length="21" fullyQualifiedName="java.util.Enumeration">
            <name lexicalForm="Enumeration" startPosition="5635" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="5625" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="5630" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="5625" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addListener(im.view.ContactListViewListener listener) {&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="5751" length="149">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5751" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="5817" length="83">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}" startPosition="5821" length="76">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.listener.contains(listener)" startPosition="5825" length="33" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.listener.contains(listener)" startPosition="5826" length="32">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="5849" length="8" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="listener" identifier="listener"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.listener" startPosition="5826" length="13">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5826" length="4" resolvedType="//@compilationUnits.23/@types.0"/>
                  <name lexicalForm="listener" startPosition="5831" length="8" fullyQualifiedName="listener" identifier="listener"/>
                </expression>
                <name lexicalForm="contains" startPosition="5840" length="8" fullyQualifiedName="contains" identifier="contains"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}" startPosition="5860" length="37">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.listener.add(listener);" startPosition="5865" length="28">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.listener.add(listener)" startPosition="5865" length="27">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="5883" length="8" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="listener" identifier="listener"/>
                  <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.listener" startPosition="5865" length="13">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5865" length="4" resolvedType="//@compilationUnits.23/@types.0"/>
                    <name lexicalForm="listener" startPosition="5870" length="8" fullyQualifiedName="listener" identifier="listener"/>
                  </expression>
                  <name lexicalForm="add" startPosition="5879" length="3" fullyQualifiedName="add" identifier="add"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="addListener" startPosition="5763" length="11" fullyQualifiedName="addListener" identifier="addListener" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5758" length="4" code="void"/>
        <parameters lexicalForm="im.view.ContactListViewListener listener" startPosition="5775" length="40">
          <name lexicalForm="listener" startPosition="5807" length="8" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="listener" identifier="listener" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ContactListViewListener" startPosition="5775" length="31" resolvedType="//@compilationUnits.20/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListViewListener" startPosition="5775" length="31" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="im.view.ContactListViewListener">
              <name lexicalForm="ContactListViewListener" startPosition="5783" length="23" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="ContactListViewListener" identifier="ContactListViewListener"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="5775" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="5778" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5775" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeListener(im.view.ContactListViewListener listener) {&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}" startPosition="5903" length="107">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="5903" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}" startPosition="5972" length="38">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.listener.remove(listener);" startPosition="5976" length="31">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.listener.remove(listener)" startPosition="5976" length="30">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="5997" length="8" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="listener" identifier="listener"/>
              <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.listener" startPosition="5976" length="13">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="5976" length="4" resolvedType="//@compilationUnits.23/@types.0"/>
                <name lexicalForm="listener" startPosition="5981" length="8" fullyQualifiedName="listener" identifier="listener"/>
              </expression>
              <name lexicalForm="remove" startPosition="5990" length="6" fullyQualifiedName="remove" identifier="remove"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="removeListener" startPosition="5915" length="14" fullyQualifiedName="removeListener" identifier="removeListener" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="5910" length="4" code="void"/>
        <parameters lexicalForm="im.view.ContactListViewListener listener" startPosition="5930" length="40">
          <name lexicalForm="listener" startPosition="5962" length="8" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="listener" identifier="listener" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ContactListViewListener" startPosition="5930" length="31" resolvedType="//@compilationUnits.20/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListViewListener" startPosition="5930" length="31" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="im.view.ContactListViewListener">
              <name lexicalForm="ContactListViewListener" startPosition="5938" length="23" resolvedType="//@compilationUnits.20/@types.0" fullyQualifiedName="ContactListViewListener" identifier="ContactListViewListener"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="5930" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="5933" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="5930" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="SWTContactListView" startPosition="271" length="18" resolvedType="//@compilationUnits.23/@types.0" fullyQualifiedName="SWTContactListView" identifier="SWTContactListView" declaration="true"/>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ContactListView" startPosition="301" length="23" resolvedType="//@compilationUnits.17/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListView" startPosition="301" length="23" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="im.view.ContactListView">
          <name lexicalForm="ContactListView" startPosition="309" length="15" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="ContactListView" identifier="ContactListView"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="301" length="7" fullyQualifiedName="im.view">
            <name lexicalForm="view" startPosition="304" length="4" fullyQualifiedName="view" identifier="view"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="301" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view.swt;&#xA;&#xA;import org.eclipse.swt.*;&#xA;import org.eclipse.swt.widgets.*;&#xA;import im.InstantMessagingClient;&#xA;import org.eclipse.swt.events.*;&#xA;import org.eclipse.swt.layout.*;&#xA;import im.view.ConversationViewListener;&#xA;&#xA;public class SWTConversationView implements im.view.ConversationView {&#xA;&#x9;private org.eclipse.swt.widgets.Shell shell;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Composite convPanel;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Composite btnPanel;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Text textConvField;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Text messageField;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Button sendBtn;&#xA;&#xA;&#x9;private java.util.Set listener = new java.util.HashSet();&#xA;&#xA;&#x9;public java.lang.Object getContent() {&#xA;&#x9;&#x9;return messageField.getText();&#xA;&#x9;}&#xA;&#xA;&#x9;public void addContent(final java.lang.Object c) {&#xA;&#x9;&#x9;if (c instanceof String) {&#xA;&#x9;&#x9;&#x9;textConvField.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void setTitle(final java.lang.String t) {&#xA;&#x9;&#x9;getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setText(t);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;public void toFront() {&#xA;&#x9;&#x9;getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setActive();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;public SWTConversationView() {&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;private void pop() {&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().beep();&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifyClose() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationClose();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifySendClicked() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationSend();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;messageField.setText(&quot;&quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;private void initialize() {&#xA;&#x9;&#x9;shell = new Shell(InstantMessagingClient.getInstance().getShell()&#xA;&#x9;&#x9;&#x9;&#x9;.getDisplay());&#xA;&#x9;&#x9;convPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;btnPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;textConvField = new Text(convPanel, SWT.MULTI | SWT.BORDER&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.SCROLL_LINE | SWT.READ_ONLY);&#xA;&#x9;&#x9;messageField = new Text(btnPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;sendBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyClose();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;sendBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifySendClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;setTitle(&quot;Message&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;shell.setDefaultButton(sendBtn);&#xA;&#x9;&#x9;shell.setTabList(new Control[]{btnPanel});&#xA;&#x9;&#x9;FormData cpfd = new FormData();&#xA;&#x9;&#x9;cpfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;cpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;cpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;cpfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;convPanel.setLayoutData(cpfd);&#xA;&#x9;&#x9;convPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FormLayout());&#xA;&#x9;&#x9;btnPanel.setTabList(new Control[]{messageField});&#xA;&#x9;&#x9;FormData mffd = new FormData();&#xA;&#x9;&#x9;mffd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;mffd.left = new FormAttachment(0, 0);&#xA;&#x9;&#x9;mffd.right = new FormAttachment(sendBtn, -5);&#xA;&#x9;&#x9;messageField.setLayoutData(mffd);&#xA;&#x9;&#x9;FormData sbfd = new FormData();&#xA;&#x9;&#x9;sbfd.top = new FormAttachment(0, 0);&#xA;&#x9;&#x9;sbfd.right = new FormAttachment(100, 0);&#xA;&#x9;&#x9;sendBtn.setLayoutData(sbfd);&#xA;&#x9;&#x9;sendBtn.setText(&quot;Send&quot;);&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.setSize(300, 300);&#xA;&#x9;&#x9;toFront();&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Shell getShell() {&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setShell(org.eclipse.swt.widgets.Shell shell) {&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getListeners() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addListener(im.view.ConversationViewListener listener) {&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeListener(im.view.ConversationViewListener listener) {&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="4518">
    <package lexicalForm="package im.view.swt;" length="20">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.swt" startPosition="8" length="11" fullyQualifiedName="im.view.swt">
        <name lexicalForm="swt" startPosition="16" length="3" fullyQualifiedName="swt" identifier="swt"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
          <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
        </qualifier>
      </name>
    </package>
    <imports lexicalForm="import org.eclipse.swt.*;" startPosition="22" length="25" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="29" length="15" fullyQualifiedName="org.eclipse.swt">
        <name lexicalForm="swt" startPosition="41" length="3" fullyQualifiedName="swt" identifier="swt"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="29" length="11" fullyQualifiedName="org.eclipse">
          <name lexicalForm="eclipse" startPosition="33" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="29" length="3" fullyQualifiedName="org" identifier="org"/>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.widgets.*;" startPosition="48" length="33" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="55" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
        <name lexicalForm="widgets" startPosition="71" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="55" length="15" fullyQualifiedName="org.eclipse.swt">
          <name lexicalForm="swt" startPosition="67" length="3" fullyQualifiedName="swt" identifier="swt"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="55" length="11" fullyQualifiedName="org.eclipse">
            <name lexicalForm="eclipse" startPosition="59" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="55" length="3" fullyQualifiedName="org" identifier="org"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import im.InstantMessagingClient;" startPosition="82" length="33">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="89" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
        <name lexicalForm="InstantMessagingClient" startPosition="92" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="89" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.events.*;" startPosition="116" length="32" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.events" startPosition="123" length="22" fullyQualifiedName="org.eclipse.swt.events">
        <name lexicalForm="events" startPosition="139" length="6" fullyQualifiedName="events" identifier="events"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="123" length="15" fullyQualifiedName="org.eclipse.swt">
          <name lexicalForm="swt" startPosition="135" length="3" fullyQualifiedName="swt" identifier="swt"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="123" length="11" fullyQualifiedName="org.eclipse">
            <name lexicalForm="eclipse" startPosition="127" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="123" length="3" fullyQualifiedName="org" identifier="org"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.layout.*;" startPosition="149" length="32" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.layout" startPosition="156" length="22" fullyQualifiedName="org.eclipse.swt.layout">
        <name lexicalForm="layout" startPosition="172" length="6" fullyQualifiedName="layout" identifier="layout"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="156" length="15" fullyQualifiedName="org.eclipse.swt">
          <name lexicalForm="swt" startPosition="168" length="3" fullyQualifiedName="swt" identifier="swt"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="156" length="11" fullyQualifiedName="org.eclipse">
            <name lexicalForm="eclipse" startPosition="160" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="156" length="3" fullyQualifiedName="org" identifier="org"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import im.view.ConversationViewListener;" startPosition="182" length="40">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationViewListener" startPosition="189" length="32" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="im.view.ConversationViewListener">
        <name lexicalForm="ConversationViewListener" startPosition="197" length="24" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="ConversationViewListener" identifier="ConversationViewListener"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="189" length="7" fullyQualifiedName="im.view">
          <name lexicalForm="view" startPosition="192" length="4" fullyQualifiedName="view" identifier="view"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="189" length="2" fullyQualifiedName="im" identifier="im"/>
        </qualifier>
      </name>
    </imports>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class SWTConversationView implements im.view.ConversationView {&#xA;&#x9;private org.eclipse.swt.widgets.Shell shell;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Composite convPanel;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Composite btnPanel;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Text textConvField;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Text messageField;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Button sendBtn;&#xA;&#xA;&#x9;private java.util.Set listener = new java.util.HashSet();&#xA;&#xA;&#x9;public java.lang.Object getContent() {&#xA;&#x9;&#x9;return messageField.getText();&#xA;&#x9;}&#xA;&#xA;&#x9;public void addContent(final java.lang.Object c) {&#xA;&#x9;&#x9;if (c instanceof String) {&#xA;&#x9;&#x9;&#x9;textConvField.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void setTitle(final java.lang.String t) {&#xA;&#x9;&#x9;getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setText(t);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;public void toFront() {&#xA;&#x9;&#x9;getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setActive();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;public SWTConversationView() {&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;private void pop() {&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().beep();&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifyClose() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationClose();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifySendClicked() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationSend();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;messageField.setText(&quot;&quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;private void initialize() {&#xA;&#x9;&#x9;shell = new Shell(InstantMessagingClient.getInstance().getShell()&#xA;&#x9;&#x9;&#x9;&#x9;.getDisplay());&#xA;&#x9;&#x9;convPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;btnPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;textConvField = new Text(convPanel, SWT.MULTI | SWT.BORDER&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.SCROLL_LINE | SWT.READ_ONLY);&#xA;&#x9;&#x9;messageField = new Text(btnPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;sendBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyClose();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;sendBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifySendClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;setTitle(&quot;Message&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;shell.setDefaultButton(sendBtn);&#xA;&#x9;&#x9;shell.setTabList(new Control[]{btnPanel});&#xA;&#x9;&#x9;FormData cpfd = new FormData();&#xA;&#x9;&#x9;cpfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;cpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;cpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;cpfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;convPanel.setLayoutData(cpfd);&#xA;&#x9;&#x9;convPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FormLayout());&#xA;&#x9;&#x9;btnPanel.setTabList(new Control[]{messageField});&#xA;&#x9;&#x9;FormData mffd = new FormData();&#xA;&#x9;&#x9;mffd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;mffd.left = new FormAttachment(0, 0);&#xA;&#x9;&#x9;mffd.right = new FormAttachment(sendBtn, -5);&#xA;&#x9;&#x9;messageField.setLayoutData(mffd);&#xA;&#x9;&#x9;FormData sbfd = new FormData();&#xA;&#x9;&#x9;sbfd.top = new FormAttachment(0, 0);&#xA;&#x9;&#x9;sbfd.right = new FormAttachment(100, 0);&#xA;&#x9;&#x9;sendBtn.setLayoutData(sbfd);&#xA;&#x9;&#x9;sendBtn.setText(&quot;Send&quot;);&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.setSize(300, 300);&#xA;&#x9;&#x9;toFront();&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Shell getShell() {&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setShell(org.eclipse.swt.widgets.Shell shell) {&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getListeners() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addListener(im.view.ConversationViewListener listener) {&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeListener(im.view.ConversationViewListener listener) {&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}&#xA;&#xA;}" startPosition="224" length="4293" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.24/@types.0/@bodyDeclarations.19/@body/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.24/@types.0/@bodyDeclarations.19/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression/@expression //@compilationUnits.26/@types.0/@bodyDeclarations.2/@body/@statements.0/@expression/@type/@name //@compilationUnits.26/@types.0/@bodyDeclarations.2/@body/@statements.0/@expression //@compilationUnits.24/@types.0/@bodyDeclarations.17/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.24/@types.0/@bodyDeclarations.20/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.24/@types.0/@name" resolvedTypeReferences="//@compilationUnits.26/@types.0/@bodyDeclarations.2/@body/@statements.0/@expression/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="224" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Shell shell;" startPosition="296" length="44">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="296" length="7" private="true"/>
        <fragments lexicalForm="shell" startPosition="334" length="5">
          <name lexicalForm="shell" startPosition="334" length="5" fullyQualifiedName="shell" identifier="shell" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="304" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="304" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
            <name lexicalForm="Shell" startPosition="328" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="304" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="320" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="304" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="316" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="304" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="308" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="304" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Composite convPanel;" startPosition="343" length="52">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="343" length="7" private="true"/>
        <fragments lexicalForm="convPanel" startPosition="385" length="9">
          <name lexicalForm="convPanel" startPosition="385" length="9" fullyQualifiedName="convPanel" identifier="convPanel" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="351" length="33">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="351" length="33" fullyQualifiedName="org.eclipse.swt.widgets.Composite">
            <name lexicalForm="Composite" startPosition="375" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="351" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="367" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="351" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="363" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="351" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="355" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="351" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Composite btnPanel;" startPosition="398" length="51">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="398" length="7" private="true"/>
        <fragments lexicalForm="btnPanel" startPosition="440" length="8">
          <name lexicalForm="btnPanel" startPosition="440" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="406" length="33">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="406" length="33" fullyQualifiedName="org.eclipse.swt.widgets.Composite">
            <name lexicalForm="Composite" startPosition="430" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="406" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="422" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="406" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="418" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="406" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="410" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="406" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Text textConvField;" startPosition="452" length="51">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="452" length="7" private="true"/>
        <fragments lexicalForm="textConvField" startPosition="489" length="13">
          <name lexicalForm="textConvField" startPosition="489" length="13" fullyQualifiedName="textConvField" identifier="textConvField" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Text" startPosition="460" length="28">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Text" startPosition="460" length="28" fullyQualifiedName="org.eclipse.swt.widgets.Text">
            <name lexicalForm="Text" startPosition="484" length="4" fullyQualifiedName="Text" identifier="Text"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="460" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="476" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="460" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="472" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="460" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="464" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="460" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Text messageField;" startPosition="506" length="50">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="506" length="7" private="true"/>
        <fragments lexicalForm="messageField" startPosition="543" length="12">
          <name lexicalForm="messageField" startPosition="543" length="12" fullyQualifiedName="messageField" identifier="messageField" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Text" startPosition="514" length="28">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Text" startPosition="514" length="28" fullyQualifiedName="org.eclipse.swt.widgets.Text">
            <name lexicalForm="Text" startPosition="538" length="4" fullyQualifiedName="Text" identifier="Text"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="514" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="530" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="514" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="526" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="514" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="518" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="514" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Button sendBtn;" startPosition="559" length="47">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="559" length="7" private="true"/>
        <fragments lexicalForm="sendBtn" startPosition="598" length="7">
          <name lexicalForm="sendBtn" startPosition="598" length="7" fullyQualifiedName="sendBtn" identifier="sendBtn" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="567" length="30">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="567" length="30" fullyQualifiedName="org.eclipse.swt.widgets.Button">
            <name lexicalForm="Button" startPosition="591" length="6" fullyQualifiedName="Button" identifier="Button"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="567" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="583" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="567" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="579" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="567" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="571" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="567" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.util.Set listener = new java.util.HashSet();" startPosition="609" length="57">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="609" length="7" private="true"/>
        <fragments lexicalForm="listener = new java.util.HashSet()" startPosition="631" length="34">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.HashSet()" startPosition="642" length="23">
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.HashSet" startPosition="646" length="17">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.HashSet" startPosition="646" length="17" fullyQualifiedName="java.util.HashSet">
                <name lexicalForm="HashSet" startPosition="656" length="7" fullyQualifiedName="HashSet" identifier="HashSet"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="646" length="9" fullyQualifiedName="java.util">
                  <name lexicalForm="util" startPosition="651" length="4" fullyQualifiedName="util" identifier="util"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="646" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </initializer>
          <name lexicalForm="listener" startPosition="631" length="8" fullyQualifiedName="listener" identifier="listener" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Set" startPosition="617" length="13">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Set" startPosition="617" length="13" fullyQualifiedName="java.util.Set">
            <name lexicalForm="Set" startPosition="627" length="3" fullyQualifiedName="Set" identifier="Set"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="617" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="622" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="617" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.Object getContent() {&#xA;&#x9;&#x9;return messageField.getText();&#xA;&#x9;}" startPosition="669" length="74">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="669" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return messageField.getText();&#xA;&#x9;}" startPosition="706" length="37">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return messageField.getText();" startPosition="710" length="30">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="messageField.getText()" startPosition="717" length="22">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="messageField" startPosition="717" length="12" fullyQualifiedName="messageField" identifier="messageField"/>
              <name lexicalForm="getText" startPosition="730" length="7" fullyQualifiedName="getText" identifier="getText"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getContent" startPosition="693" length="10" fullyQualifiedName="getContent" identifier="getContent" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="676" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="676" length="16" fullyQualifiedName="java.lang.Object">
            <name lexicalForm="Object" startPosition="686" length="6" fullyQualifiedName="Object" identifier="Object"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="676" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="681" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="676" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addContent(final java.lang.Object c) {&#xA;&#x9;&#x9;if (c instanceof String) {&#xA;&#x9;&#x9;&#x9;textConvField.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="746" length="227">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="746" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (c instanceof String) {&#xA;&#x9;&#x9;&#x9;textConvField.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="795" length="178">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (c instanceof String) {&#xA;&#x9;&#x9;&#x9;textConvField.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;}" startPosition="799" length="171">
            <expression xsi:type="JavaAST:InstanceofExpression" lexicalForm="c instanceof String" startPosition="803" length="19">
              <leftOperand xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="803" length="1" fullyQualifiedName="c" identifier="c"/>
              <rightOperand xsi:type="JavaAST:SimpleType" lexicalForm="String" startPosition="816" length="6">
                <name xsi:type="JavaAST:SimpleName" lexicalForm="String" startPosition="816" length="6" fullyQualifiedName="String" identifier="String"/>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;textConvField.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;}" startPosition="824" length="146">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="textConvField.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});" startPosition="829" length="137">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="textConvField.getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;})" startPosition="829" length="136">
                  <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="865" length="99">
                    <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" startPosition="880" length="84">
                      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="886" length="73">
                        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="886" length="6" public="true"/>
                        <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;textConvField.append(c.toString() + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="904" length="55">
                          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="textConvField.append(c.toString() + &quot;\n&quot;);" startPosition="911" length="42">
                            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="textConvField.append(c.toString() + &quot;\n&quot;)" startPosition="911" length="41">
                              <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="c.toString() + &quot;\n&quot;" startPosition="932" length="19" operator="+">
                                <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="c.toString()" startPosition="932" length="12">
                                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="c" startPosition="932" length="1" fullyQualifiedName="c" identifier="c"/>
                                  <name lexicalForm="toString" startPosition="934" length="8" fullyQualifiedName="toString" identifier="toString"/>
                                </leftOperand>
                                <rightOperand xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;\n&quot;" startPosition="947" length="4" escapedValue="&quot;\n&quot;" literalValue="&#xA;"/>
                              </arguments>
                              <expression xsi:type="JavaAST:SimpleName" lexicalForm="textConvField" startPosition="911" length="13" fullyQualifiedName="textConvField" identifier="textConvField"/>
                              <name lexicalForm="append" startPosition="925" length="6" fullyQualifiedName="append" identifier="append"/>
                            </expression>
                          </statements>
                        </body>
                        <name lexicalForm="run" startPosition="898" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="893" length="4" code="void"/>
                      </bodyDeclarations>
                    </anonymousClassDeclaration>
                    <type xsi:type="JavaAST:SimpleType" lexicalForm="Runnable" startPosition="869" length="8">
                      <name xsi:type="JavaAST:SimpleName" lexicalForm="Runnable" startPosition="869" length="8" fullyQualifiedName="Runnable" identifier="Runnable"/>
                    </type>
                  </arguments>
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="textConvField.getDisplay()" startPosition="829" length="26">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="textConvField" startPosition="829" length="13" fullyQualifiedName="textConvField" identifier="textConvField"/>
                    <name lexicalForm="getDisplay" startPosition="843" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
                  </expression>
                  <name lexicalForm="syncExec" startPosition="856" length="8" fullyQualifiedName="syncExec" identifier="syncExec"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="addContent" startPosition="758" length="10" fullyQualifiedName="addContent" identifier="addContent" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="753" length="4" code="void"/>
        <parameters lexicalForm="final java.lang.Object c" startPosition="769" length="24">
          <name lexicalForm="c" startPosition="792" length="1" fullyQualifiedName="c" identifier="c" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.Object" startPosition="775" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.Object" startPosition="775" length="16" fullyQualifiedName="java.lang.Object">
              <name lexicalForm="Object" startPosition="785" length="6" fullyQualifiedName="Object" identifier="Object"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="775" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="780" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="775" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="769" length="5" final="true"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setTitle(final java.lang.String t) {&#xA;&#x9;&#x9;getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setText(t);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}" startPosition="976" length="164">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="976" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setText(t);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1023" length="117">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setText(t);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="1027" length="110">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setText(t);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="1027" length="109">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setText(t);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1060" length="75">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setText(t);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1075" length="60">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setText(t);&#xA;&#x9;&#x9;&#x9;}" startPosition="1080" length="51">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1080" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setText(t);&#xA;&#x9;&#x9;&#x9;}" startPosition="1098" length="33">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getShell().setText(t);" startPosition="1104" length="22">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().setText(t)" startPosition="1104" length="21">
                          <arguments xsi:type="JavaAST:SimpleName" lexicalForm="t" startPosition="1123" length="1" fullyQualifiedName="t" identifier="t"/>
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="1104" length="10">
                            <name lexicalForm="getShell" startPosition="1104" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                          </expression>
                          <name lexicalForm="setText" startPosition="1115" length="7" fullyQualifiedName="setText" identifier="setText"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="run" startPosition="1092" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1087" length="4" code="void"/>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Runnable" startPosition="1064" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Runnable" startPosition="1064" length="8" fullyQualifiedName="Runnable" identifier="Runnable"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().getDisplay()" startPosition="1027" length="23">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="1027" length="10">
                  <name lexicalForm="getShell" startPosition="1027" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                </expression>
                <name lexicalForm="getDisplay" startPosition="1038" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
              </expression>
              <name lexicalForm="syncExec" startPosition="1051" length="8" fullyQualifiedName="syncExec" identifier="syncExec"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setTitle" startPosition="988" length="8" fullyQualifiedName="setTitle" identifier="setTitle" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="983" length="4" code="void"/>
        <parameters lexicalForm="final java.lang.String t" startPosition="997" length="24">
          <name lexicalForm="t" startPosition="1020" length="1" fullyQualifiedName="t" identifier="t" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="1003" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="1003" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="1013" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1003" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="1008" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1003" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
          <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="997" length="5" final="true"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void toFront() {&#xA;&#x9;&#x9;getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setActive();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1143" length="275">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1143" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setActive();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1165" length="253">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setActive();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="1169" length="246">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().getDisplay().syncExec(new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setActive();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="1169" length="245">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Runnable() {&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setActive();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1202" length="211">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setActive();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="1217" length="196">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setActive();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;&#x9;&#x9;}" startPosition="1222" length="187">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1222" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;getShell().setActive();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;&#x9;&#x9;}" startPosition="1240" length="169">
                      <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!getShell().isVisible()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1246" length="82">
                        <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!getShell().isVisible()" startPosition="1250" length="23" operator="!">
                          <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().isVisible()" startPosition="1251" length="22">
                            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="1251" length="10">
                              <name lexicalForm="getShell" startPosition="1251" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                            </expression>
                            <name lexicalForm="isVisible" startPosition="1262" length="9" fullyQualifiedName="isVisible" identifier="isVisible"/>
                          </operand>
                        </expression>
                        <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;getShell().setVisible(true);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pop();&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1275" length="53">
                          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getShell().setVisible(true);" startPosition="1282" length="28">
                            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().setVisible(true)" startPosition="1282" length="27">
                              <arguments xsi:type="JavaAST:BooleanLiteral" lexicalForm="true" startPosition="1304" length="4" booleanValue="true"/>
                              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="1282" length="10">
                                <name lexicalForm="getShell" startPosition="1282" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                              </expression>
                              <name lexicalForm="setVisible" startPosition="1293" length="10" fullyQualifiedName="setVisible" identifier="setVisible"/>
                            </expression>
                          </statements>
                          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="pop();" startPosition="1316" length="6">
                            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="pop()" startPosition="1316" length="5">
                              <name lexicalForm="pop" startPosition="1316" length="3" fullyQualifiedName="pop" identifier="pop"/>
                            </expression>
                          </statements>
                        </thenStatement>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getShell().setActive();" startPosition="1333" length="23">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().setActive()" startPosition="1333" length="22">
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="1333" length="10">
                            <name lexicalForm="getShell" startPosition="1333" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                          </expression>
                          <name lexicalForm="setActive" startPosition="1344" length="9" fullyQualifiedName="setActive" identifier="setActive"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getShell().traverse(SWT.TRAVERSE_TAB_NEXT);" startPosition="1361" length="43">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().traverse(SWT.TRAVERSE_TAB_NEXT)" startPosition="1361" length="42">
                          <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.TRAVERSE_TAB_NEXT" startPosition="1381" length="21" fullyQualifiedName="SWT.TRAVERSE_TAB_NEXT">
                            <name lexicalForm="TRAVERSE_TAB_NEXT" startPosition="1385" length="17" fullyQualifiedName="TRAVERSE_TAB_NEXT" identifier="TRAVERSE_TAB_NEXT"/>
                            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="1381" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                          </arguments>
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="1361" length="10">
                            <name lexicalForm="getShell" startPosition="1361" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                          </expression>
                          <name lexicalForm="traverse" startPosition="1372" length="8" fullyQualifiedName="traverse" identifier="traverse"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="run" startPosition="1234" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1229" length="4" code="void"/>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Runnable" startPosition="1206" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Runnable" startPosition="1206" length="8" fullyQualifiedName="Runnable" identifier="Runnable"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().getDisplay()" startPosition="1169" length="23">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="1169" length="10">
                  <name lexicalForm="getShell" startPosition="1169" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                </expression>
                <name lexicalForm="getDisplay" startPosition="1180" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
              </expression>
              <name lexicalForm="syncExec" startPosition="1193" length="8" fullyQualifiedName="syncExec" identifier="syncExec"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="toFront" startPosition="1155" length="7" fullyQualifiedName="toFront" identifier="toFront" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1150" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public SWTConversationView() {&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1421" length="198" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1421" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1450" length="169">
          <statements xsi:type="JavaAST:SuperConstructorInvocation" lexicalForm="super();" startPosition="1454" length="8"/>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;});" startPosition="1465" length="151">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;})" startPosition="1465" length="150">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1540" length="74">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1555" length="59">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="1562" length="46">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1562" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="1580" length="28">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="initialize();" startPosition="1588" length="13">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="initialize()" startPosition="1588" length="12">
                          <name lexicalForm="initialize" startPosition="1588" length="10" fullyQualifiedName="initialize" identifier="initialize"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="run" startPosition="1574" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1569" length="4" code="void"/>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Runnable" startPosition="1544" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Runnable" startPosition="1544" length="8" fullyQualifiedName="Runnable" identifier="Runnable"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell().getDisplay()" startPosition="1465" length="60">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell()" startPosition="1465" length="47">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance()" startPosition="1465" length="36" resolvedType="//@compilationUnits.2/@types.0">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="1465" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                    <name lexicalForm="getInstance" startPosition="1488" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                  </expression>
                  <name lexicalForm="getShell" startPosition="1502" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                </expression>
                <name lexicalForm="getDisplay" startPosition="1513" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
              </expression>
              <name lexicalForm="syncExec" startPosition="1526" length="8" fullyQualifiedName="syncExec" identifier="syncExec"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="SWTConversationView" startPosition="1428" length="19" fullyQualifiedName="SWTConversationView" identifier="SWTConversationView"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void pop() {&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().beep();&#xA;&#x9;}" startPosition="1622" length="94">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="1622" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().beep();&#xA;&#x9;}" startPosition="1641" length="75">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="InstantMessagingClient.getInstance().getShell().getDisplay().beep();" startPosition="1645" length="68">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell().getDisplay().beep()" startPosition="1645" length="67">
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell().getDisplay()" startPosition="1645" length="60">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell()" startPosition="1645" length="47">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance()" startPosition="1645" length="36" resolvedType="//@compilationUnits.2/@types.0">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="1645" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                    <name lexicalForm="getInstance" startPosition="1668" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                  </expression>
                  <name lexicalForm="getShell" startPosition="1682" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                </expression>
                <name lexicalForm="getDisplay" startPosition="1693" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
              </expression>
              <name lexicalForm="beep" startPosition="1706" length="4" fullyQualifiedName="beep" identifier="beep"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="pop" startPosition="1635" length="3" fullyQualifiedName="pop" identifier="pop" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1630" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void notifyClose() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationClose();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1719" length="182">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="1719" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationClose();&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1746" length="155">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationClose();&#xA;&#x9;&#x9;}" startPosition="1750" length="148">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationClose();&#xA;&#x9;&#x9;}" startPosition="1821" length="77">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="((ConversationViewListener) ls.nextElement()).onConversationClose();" startPosition="1826" length="68">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="((ConversationViewListener) ls.nextElement()).onConversationClose()" startPosition="1826" length="67">
                  <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((ConversationViewListener) ls.nextElement())" startPosition="1826" length="45" resolvedType="//@compilationUnits.22/@types.0">
                    <expression xsi:type="JavaAST:CastExpression" lexicalForm="(ConversationViewListener) ls.nextElement()" startPosition="1827" length="43" resolvedType="//@compilationUnits.22/@types.0">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.nextElement()" startPosition="1854" length="16">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="1854" length="2" fullyQualifiedName="ls" identifier="ls"/>
                        <name lexicalForm="nextElement" startPosition="1857" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                      </expression>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="ConversationViewListener" startPosition="1828" length="24" resolvedType="//@compilationUnits.22/@types.0">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="ConversationViewListener" startPosition="1828" length="24" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="ConversationViewListener" identifier="ConversationViewListener"/>
                      </type>
                    </expression>
                  </expression>
                  <name lexicalForm="onConversationClose" startPosition="1872" length="19" fullyQualifiedName="onConversationClose" identifier="onConversationClose"/>
                </expression>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.hasMoreElements()" startPosition="1798" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="1798" length="2" fullyQualifiedName="ls" identifier="ls"/>
              <name lexicalForm="hasMoreElements" startPosition="1801" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ls = getListeners()" startPosition="1755" length="41">
              <fragments lexicalForm="ls = getListeners()" startPosition="1777" length="19">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getListeners()" startPosition="1782" length="14">
                  <name lexicalForm="getListeners" startPosition="1782" length="12" fullyQualifiedName="getListeners" identifier="getListeners"/>
                </initializer>
                <name lexicalForm="ls" startPosition="1777" length="2" fullyQualifiedName="ls" identifier="ls" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="1755" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="1755" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="1765" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1755" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="1760" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1755" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
        </body>
        <name lexicalForm="notifyClose" startPosition="1732" length="11" fullyQualifiedName="notifyClose" identifier="notifyClose" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1727" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void notifySendClicked() {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationSend();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;messageField.setText(&quot;&quot;);&#xA;&#x9;}" startPosition="1904" length="215">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="1904" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationSend();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;messageField.setText(&quot;&quot;);&#xA;&#x9;}" startPosition="1937" length="182">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationSend();&#xA;&#x9;&#x9;}" startPosition="1941" length="147">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;((ConversationViewListener) ls.nextElement()).onConversationSend();&#xA;&#x9;&#x9;}" startPosition="2012" length="76">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="((ConversationViewListener) ls.nextElement()).onConversationSend();" startPosition="2017" length="67">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="((ConversationViewListener) ls.nextElement()).onConversationSend()" startPosition="2017" length="66">
                  <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((ConversationViewListener) ls.nextElement())" startPosition="2017" length="45" resolvedType="//@compilationUnits.22/@types.0">
                    <expression xsi:type="JavaAST:CastExpression" lexicalForm="(ConversationViewListener) ls.nextElement()" startPosition="2018" length="43" resolvedType="//@compilationUnits.22/@types.0">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.nextElement()" startPosition="2045" length="16">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="2045" length="2" fullyQualifiedName="ls" identifier="ls"/>
                        <name lexicalForm="nextElement" startPosition="2048" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                      </expression>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="ConversationViewListener" startPosition="2019" length="24" resolvedType="//@compilationUnits.22/@types.0">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="ConversationViewListener" startPosition="2019" length="24" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="ConversationViewListener" identifier="ConversationViewListener"/>
                      </type>
                    </expression>
                  </expression>
                  <name lexicalForm="onConversationSend" startPosition="2063" length="18" fullyQualifiedName="onConversationSend" identifier="onConversationSend"/>
                </expression>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.hasMoreElements()" startPosition="1989" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="1989" length="2" fullyQualifiedName="ls" identifier="ls"/>
              <name lexicalForm="hasMoreElements" startPosition="1992" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ls = getListeners()" startPosition="1946" length="41">
              <fragments lexicalForm="ls = getListeners()" startPosition="1968" length="19">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getListeners()" startPosition="1973" length="14">
                  <name lexicalForm="getListeners" startPosition="1973" length="12" fullyQualifiedName="getListeners" identifier="getListeners"/>
                </initializer>
                <name lexicalForm="ls" startPosition="1968" length="2" fullyQualifiedName="ls" identifier="ls" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="1946" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="1946" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="1956" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1946" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="1951" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1946" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="messageField.setText(&quot;&quot;);" startPosition="2091" length="25">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="messageField.setText(&quot;&quot;)" startPosition="2091" length="24">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;&quot;" startPosition="2112" length="2" escapedValue="&quot;&quot;" literalValue=""/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="messageField" startPosition="2091" length="12" fullyQualifiedName="messageField" identifier="messageField"/>
              <name lexicalForm="setText" startPosition="2104" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="notifySendClicked" startPosition="1917" length="17" fullyQualifiedName="notifySendClicked" identifier="notifySendClicked" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1912" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void initialize() {&#xA;&#x9;&#x9;shell = new Shell(InstantMessagingClient.getInstance().getShell()&#xA;&#x9;&#x9;&#x9;&#x9;.getDisplay());&#xA;&#x9;&#x9;convPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;btnPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;textConvField = new Text(convPanel, SWT.MULTI | SWT.BORDER&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.SCROLL_LINE | SWT.READ_ONLY);&#xA;&#x9;&#x9;messageField = new Text(btnPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;sendBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyClose();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;sendBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifySendClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;setTitle(&quot;Message&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;shell.setDefaultButton(sendBtn);&#xA;&#x9;&#x9;shell.setTabList(new Control[]{btnPanel});&#xA;&#x9;&#x9;FormData cpfd = new FormData();&#xA;&#x9;&#x9;cpfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;cpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;cpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;cpfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;convPanel.setLayoutData(cpfd);&#xA;&#x9;&#x9;convPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FormLayout());&#xA;&#x9;&#x9;btnPanel.setTabList(new Control[]{messageField});&#xA;&#x9;&#x9;FormData mffd = new FormData();&#xA;&#x9;&#x9;mffd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;mffd.left = new FormAttachment(0, 0);&#xA;&#x9;&#x9;mffd.right = new FormAttachment(sendBtn, -5);&#xA;&#x9;&#x9;messageField.setLayoutData(mffd);&#xA;&#x9;&#x9;FormData sbfd = new FormData();&#xA;&#x9;&#x9;sbfd.top = new FormAttachment(0, 0);&#xA;&#x9;&#x9;sbfd.right = new FormAttachment(100, 0);&#xA;&#x9;&#x9;sendBtn.setLayoutData(sbfd);&#xA;&#x9;&#x9;sendBtn.setText(&quot;Send&quot;);&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.setSize(300, 300);&#xA;&#x9;&#x9;toFront();&#xA;&#x9;}" startPosition="2122" length="1837">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="2122" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;shell = new Shell(InstantMessagingClient.getInstance().getShell()&#xA;&#x9;&#x9;&#x9;&#x9;.getDisplay());&#xA;&#x9;&#x9;convPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;btnPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;textConvField = new Text(convPanel, SWT.MULTI | SWT.BORDER&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.SCROLL_LINE | SWT.READ_ONLY);&#xA;&#x9;&#x9;messageField = new Text(btnPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;sendBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyClose();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;sendBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifySendClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;setTitle(&quot;Message&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;shell.setDefaultButton(sendBtn);&#xA;&#x9;&#x9;shell.setTabList(new Control[]{btnPanel});&#xA;&#x9;&#x9;FormData cpfd = new FormData();&#xA;&#x9;&#x9;cpfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;cpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;cpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;cpfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;convPanel.setLayoutData(cpfd);&#xA;&#x9;&#x9;convPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FormLayout());&#xA;&#x9;&#x9;btnPanel.setTabList(new Control[]{messageField});&#xA;&#x9;&#x9;FormData mffd = new FormData();&#xA;&#x9;&#x9;mffd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;mffd.left = new FormAttachment(0, 0);&#xA;&#x9;&#x9;mffd.right = new FormAttachment(sendBtn, -5);&#xA;&#x9;&#x9;messageField.setLayoutData(mffd);&#xA;&#x9;&#x9;FormData sbfd = new FormData();&#xA;&#x9;&#x9;sbfd.top = new FormAttachment(0, 0);&#xA;&#x9;&#x9;sbfd.right = new FormAttachment(100, 0);&#xA;&#x9;&#x9;sendBtn.setLayoutData(sbfd);&#xA;&#x9;&#x9;sendBtn.setText(&quot;Send&quot;);&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.setSize(300, 300);&#xA;&#x9;&#x9;toFront();&#xA;&#x9;}" startPosition="2148" length="1811">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell = new Shell(InstantMessagingClient.getInstance().getShell()&#xA;&#x9;&#x9;&#x9;&#x9;.getDisplay());" startPosition="2152" length="85">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="shell = new Shell(InstantMessagingClient.getInstance().getShell()&#xA;&#x9;&#x9;&#x9;&#x9;.getDisplay())" startPosition="2152" length="84" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="2152" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Shell(InstantMessagingClient.getInstance().getShell()&#xA;&#x9;&#x9;&#x9;&#x9;.getDisplay())" startPosition="2160" length="76">
                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell()&#xA;&#x9;&#x9;&#x9;&#x9;.getDisplay()" startPosition="2170" length="65">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell()" startPosition="2170" length="47">
                    <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance()" startPosition="2170" length="36" resolvedType="//@compilationUnits.2/@types.0">
                      <expression xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="2170" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                      <name lexicalForm="getInstance" startPosition="2193" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                    </expression>
                    <name lexicalForm="getShell" startPosition="2207" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                  </expression>
                  <name lexicalForm="getDisplay" startPosition="2223" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Shell" startPosition="2164" length="5">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Shell" startPosition="2164" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="convPanel = new Composite(getShell(), SWT.NONE);" startPosition="2240" length="48">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="convPanel = new Composite(getShell(), SWT.NONE)" startPosition="2240" length="47" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="convPanel" startPosition="2240" length="9" fullyQualifiedName="convPanel" identifier="convPanel"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Composite(getShell(), SWT.NONE)" startPosition="2252" length="35">
                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="2266" length="10">
                  <name lexicalForm="getShell" startPosition="2266" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                </arguments>
                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.NONE" startPosition="2278" length="8" fullyQualifiedName="SWT.NONE">
                  <name lexicalForm="NONE" startPosition="2282" length="4" fullyQualifiedName="NONE" identifier="NONE"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2278" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Composite" startPosition="2256" length="9">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Composite" startPosition="2256" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="btnPanel = new Composite(getShell(), SWT.NONE);" startPosition="2291" length="47">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="btnPanel = new Composite(getShell(), SWT.NONE)" startPosition="2291" length="46" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="2291" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Composite(getShell(), SWT.NONE)" startPosition="2302" length="35">
                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="2316" length="10">
                  <name lexicalForm="getShell" startPosition="2316" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                </arguments>
                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.NONE" startPosition="2328" length="8" fullyQualifiedName="SWT.NONE">
                  <name lexicalForm="NONE" startPosition="2332" length="4" fullyQualifiedName="NONE" identifier="NONE"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2328" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Composite" startPosition="2306" length="9">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Composite" startPosition="2306" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="textConvField = new Text(convPanel, SWT.MULTI | SWT.BORDER&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.SCROLL_LINE | SWT.READ_ONLY);" startPosition="2341" length="113">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="textConvField = new Text(convPanel, SWT.MULTI | SWT.BORDER&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.SCROLL_LINE | SWT.READ_ONLY)" startPosition="2341" length="112" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="textConvField" startPosition="2341" length="13" fullyQualifiedName="textConvField" identifier="textConvField"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Text(convPanel, SWT.MULTI | SWT.BORDER&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.SCROLL_LINE | SWT.READ_ONLY)" startPosition="2357" length="96">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="convPanel" startPosition="2366" length="9" fullyQualifiedName="convPanel" identifier="convPanel"/>
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.MULTI | SWT.BORDER&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.V_SCROLL | SWT.SCROLL_LINE | SWT.READ_ONLY" startPosition="2377" length="75" operator="|">
                  <extendedOperands xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.V_SCROLL" startPosition="2406" length="12" fullyQualifiedName="SWT.V_SCROLL">
                    <name lexicalForm="V_SCROLL" startPosition="2410" length="8" fullyQualifiedName="V_SCROLL" identifier="V_SCROLL"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2406" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </extendedOperands>
                  <extendedOperands xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.SCROLL_LINE" startPosition="2421" length="15" fullyQualifiedName="SWT.SCROLL_LINE">
                    <name lexicalForm="SCROLL_LINE" startPosition="2425" length="11" fullyQualifiedName="SCROLL_LINE" identifier="SCROLL_LINE"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2421" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </extendedOperands>
                  <extendedOperands xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.READ_ONLY" startPosition="2439" length="13" fullyQualifiedName="SWT.READ_ONLY">
                    <name lexicalForm="READ_ONLY" startPosition="2443" length="9" fullyQualifiedName="READ_ONLY" identifier="READ_ONLY"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2439" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </extendedOperands>
                  <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.MULTI" startPosition="2377" length="9" fullyQualifiedName="SWT.MULTI">
                    <name lexicalForm="MULTI" startPosition="2381" length="5" fullyQualifiedName="MULTI" identifier="MULTI"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2377" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.BORDER" startPosition="2389" length="10" fullyQualifiedName="SWT.BORDER">
                    <name lexicalForm="BORDER" startPosition="2393" length="6" fullyQualifiedName="BORDER" identifier="BORDER"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2389" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </rightOperand>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Text" startPosition="2361" length="4">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Text" startPosition="2361" length="4" fullyQualifiedName="Text" identifier="Text"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="messageField = new Text(btnPanel, SWT.SINGLE | SWT.BORDER);" startPosition="2457" length="59">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="messageField = new Text(btnPanel, SWT.SINGLE | SWT.BORDER)" startPosition="2457" length="58" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="messageField" startPosition="2457" length="12" fullyQualifiedName="messageField" identifier="messageField"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Text(btnPanel, SWT.SINGLE | SWT.BORDER)" startPosition="2472" length="43">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="2481" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.SINGLE | SWT.BORDER" startPosition="2491" length="23" operator="|">
                  <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.SINGLE" startPosition="2491" length="10" fullyQualifiedName="SWT.SINGLE">
                    <name lexicalForm="SINGLE" startPosition="2495" length="6" fullyQualifiedName="SINGLE" identifier="SINGLE"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2491" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.BORDER" startPosition="2504" length="10" fullyQualifiedName="SWT.BORDER">
                    <name lexicalForm="BORDER" startPosition="2508" length="6" fullyQualifiedName="BORDER" identifier="BORDER"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2504" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </rightOperand>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Text" startPosition="2476" length="4">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Text" startPosition="2476" length="4" fullyQualifiedName="Text" identifier="Text"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="sendBtn = new Button(btnPanel, SWT.PUSH);" startPosition="2519" length="41">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="sendBtn = new Button(btnPanel, SWT.PUSH)" startPosition="2519" length="40" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="sendBtn" startPosition="2519" length="7" fullyQualifiedName="sendBtn" identifier="sendBtn"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Button(btnPanel, SWT.PUSH)" startPosition="2529" length="30">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="2540" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.PUSH" startPosition="2550" length="8" fullyQualifiedName="SWT.PUSH">
                  <name lexicalForm="PUSH" startPosition="2554" length="4" fullyQualifiedName="PUSH" identifier="PUSH"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2550" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Button" startPosition="2533" length="6">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Button" startPosition="2533" length="6" fullyQualifiedName="Button" identifier="Button"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyClose();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="2563" length="116">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyClose();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="2563" length="115">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyClose();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2586" length="91">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyClose();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2605" length="72">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifyClose();&#xA;&#x9;&#x9;&#x9;}" startPosition="2610" length="63">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2610" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;notifyClose();&#xA;&#x9;&#x9;&#x9;}" startPosition="2648" length="25">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyClose();" startPosition="2654" length="14">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyClose()" startPosition="2654" length="13">
                          <name lexicalForm="notifyClose" startPosition="2654" length="11" fullyQualifiedName="notifyClose" identifier="notifyClose"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="shellClosed" startPosition="2622" length="11" fullyQualifiedName="shellClosed" identifier="shellClosed" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2617" length="4" code="void"/>
                    <parameters lexicalForm="ShellEvent e" startPosition="2634" length="12">
                      <name lexicalForm="e" startPosition="2645" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="ShellEvent" startPosition="2634" length="10">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="ShellEvent" startPosition="2634" length="10" fullyQualifiedName="ShellEvent" identifier="ShellEvent"/>
                      </type>
                    </parameters>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="ShellAdapter" startPosition="2590" length="12">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="ShellAdapter" startPosition="2590" length="12" fullyQualifiedName="ShellAdapter" identifier="ShellAdapter"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="2563" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="addShellListener" startPosition="2569" length="16" fullyQualifiedName="addShellListener" identifier="addShellListener"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="sendBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifySendClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="2682" length="139">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="sendBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifySendClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="2682" length="138">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifySendClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2711" length="108">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifySendClicked();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2734" length="85">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;notifySendClicked();&#xA;&#x9;&#x9;&#x9;}" startPosition="2739" length="76">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2739" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;notifySendClicked();&#xA;&#x9;&#x9;&#x9;}" startPosition="2784" length="31">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifySendClicked();" startPosition="2790" length="20">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifySendClicked()" startPosition="2790" length="19">
                          <name lexicalForm="notifySendClicked" startPosition="2790" length="17" fullyQualifiedName="notifySendClicked" identifier="notifySendClicked"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="widgetSelected" startPosition="2751" length="14" fullyQualifiedName="widgetSelected" identifier="widgetSelected" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2746" length="4" code="void"/>
                    <parameters lexicalForm="SelectionEvent e" startPosition="2766" length="16">
                      <name lexicalForm="e" startPosition="2781" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionEvent" startPosition="2766" length="14">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionEvent" startPosition="2766" length="14" fullyQualifiedName="SelectionEvent" identifier="SelectionEvent"/>
                      </type>
                    </parameters>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionAdapter" startPosition="2715" length="16">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionAdapter" startPosition="2715" length="16" fullyQualifiedName="SelectionAdapter" identifier="SelectionAdapter"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="sendBtn" startPosition="2682" length="7" fullyQualifiedName="sendBtn" identifier="sendBtn"/>
              <name lexicalForm="addSelectionListener" startPosition="2690" length="20" fullyQualifiedName="addSelectionListener" identifier="addSelectionListener"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setTitle(&quot;Message&quot;);" startPosition="2824" length="20">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setTitle(&quot;Message&quot;)" startPosition="2824" length="19">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Message&quot;" startPosition="2833" length="9" escapedValue="&quot;Message&quot;" literalValue="Message"/>
              <name lexicalForm="setTitle" startPosition="2824" length="8" fullyQualifiedName="setTitle" identifier="setTitle"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.setLayout(new FormLayout());" startPosition="2847" length="34">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.setLayout(new FormLayout())" startPosition="2847" length="33">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormLayout()" startPosition="2863" length="16">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormLayout" startPosition="2867" length="10">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormLayout" startPosition="2867" length="10" fullyQualifiedName="FormLayout" identifier="FormLayout"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="2847" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="setLayout" startPosition="2853" length="9" fullyQualifiedName="setLayout" identifier="setLayout"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.setDefaultButton(sendBtn);" startPosition="2884" length="32">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.setDefaultButton(sendBtn)" startPosition="2884" length="31">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="sendBtn" startPosition="2907" length="7" fullyQualifiedName="sendBtn" identifier="sendBtn"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="2884" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="setDefaultButton" startPosition="2890" length="16" fullyQualifiedName="setDefaultButton" identifier="setDefaultButton"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.setTabList(new Control[]{btnPanel});" startPosition="2919" length="42">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.setTabList(new Control[]{btnPanel})" startPosition="2919" length="41">
              <arguments xsi:type="JavaAST:ArrayCreation" lexicalForm="new Control[]{btnPanel}" startPosition="2936" length="23">
                <initializer lexicalForm="{btnPanel}" startPosition="2949" length="10">
                  <expressions xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="2950" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
                </initializer>
                <type lexicalForm="Control[]" startPosition="2940" length="9" dimensions="1">
                  <componentType xsi:type="JavaAST:SimpleType" lexicalForm="Control" startPosition="2940" length="7">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Control" startPosition="2940" length="7" fullyQualifiedName="Control" identifier="Control"/>
                  </componentType>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="2919" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="setTabList" startPosition="2925" length="10" fullyQualifiedName="setTabList" identifier="setTabList"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="FormData cpfd = new FormData();" startPosition="2964" length="31">
            <fragments lexicalForm="cpfd = new FormData()" startPosition="2973" length="21">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormData()" startPosition="2980" length="14">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="2984" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="2984" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
                </type>
              </initializer>
              <name lexicalForm="cpfd" startPosition="2973" length="4" fullyQualifiedName="cpfd" identifier="cpfd" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="2964" length="8">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="2964" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="cpfd.top = new FormAttachment(0, 5);" startPosition="2998" length="36">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="cpfd.top = new FormAttachment(0, 5)" startPosition="2998" length="35" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="cpfd.top" startPosition="2998" length="8" fullyQualifiedName="cpfd.top">
                <name lexicalForm="top" startPosition="3003" length="3" fullyQualifiedName="top" identifier="top"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="cpfd" startPosition="2998" length="4" fullyQualifiedName="cpfd" identifier="cpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="3009" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3028" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3031" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3013" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3013" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="cpfd.left = new FormAttachment(0, 5);" startPosition="3037" length="37">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="cpfd.left = new FormAttachment(0, 5)" startPosition="3037" length="36" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="cpfd.left" startPosition="3037" length="9" fullyQualifiedName="cpfd.left">
                <name lexicalForm="left" startPosition="3042" length="4" fullyQualifiedName="left" identifier="left"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="cpfd" startPosition="3037" length="4" fullyQualifiedName="cpfd" identifier="cpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="3049" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3068" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3071" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3053" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3053" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="cpfd.right = new FormAttachment(100, -5);" startPosition="3077" length="41">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="cpfd.right = new FormAttachment(100, -5)" startPosition="3077" length="40" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="cpfd.right" startPosition="3077" length="10" fullyQualifiedName="cpfd.right">
                <name lexicalForm="right" startPosition="3082" length="5" fullyQualifiedName="right" identifier="right"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="cpfd" startPosition="3077" length="4" fullyQualifiedName="cpfd" identifier="cpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="3090" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="3109" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="3114" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3115" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3094" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3094" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="cpfd.bottom = new FormAttachment(btnPanel, -5);" startPosition="3121" length="47">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="cpfd.bottom = new FormAttachment(btnPanel, -5)" startPosition="3121" length="46" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="cpfd.bottom" startPosition="3121" length="11" fullyQualifiedName="cpfd.bottom">
                <name lexicalForm="bottom" startPosition="3126" length="6" fullyQualifiedName="bottom" identifier="bottom"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="cpfd" startPosition="3121" length="4" fullyQualifiedName="cpfd" identifier="cpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(btnPanel, -5)" startPosition="3135" length="32">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="3154" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="3164" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3165" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3139" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3139" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="convPanel.setLayoutData(cpfd);" startPosition="3171" length="30">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="convPanel.setLayoutData(cpfd)" startPosition="3171" length="29">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="cpfd" startPosition="3195" length="4" fullyQualifiedName="cpfd" identifier="cpfd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="convPanel" startPosition="3171" length="9" fullyQualifiedName="convPanel" identifier="convPanel"/>
              <name lexicalForm="setLayoutData" startPosition="3181" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="convPanel.setLayout(new FillLayout());" startPosition="3204" length="38">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="convPanel.setLayout(new FillLayout())" startPosition="3204" length="37">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FillLayout()" startPosition="3224" length="16">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FillLayout" startPosition="3228" length="10">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FillLayout" startPosition="3228" length="10" fullyQualifiedName="FillLayout" identifier="FillLayout"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="convPanel" startPosition="3204" length="9" fullyQualifiedName="convPanel" identifier="convPanel"/>
              <name lexicalForm="setLayout" startPosition="3214" length="9" fullyQualifiedName="setLayout" identifier="setLayout"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="FormData bpfd = new FormData();" startPosition="3245" length="31">
            <fragments lexicalForm="bpfd = new FormData()" startPosition="3254" length="21">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormData()" startPosition="3261" length="14">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="3265" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="3265" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
                </type>
              </initializer>
              <name lexicalForm="bpfd" startPosition="3254" length="4" fullyQualifiedName="bpfd" identifier="bpfd" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="3245" length="8">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="3245" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="bpfd.left = new FormAttachment(0, 5);" startPosition="3279" length="37">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="bpfd.left = new FormAttachment(0, 5)" startPosition="3279" length="36" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="bpfd.left" startPosition="3279" length="9" fullyQualifiedName="bpfd.left">
                <name lexicalForm="left" startPosition="3284" length="4" fullyQualifiedName="left" identifier="left"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="3279" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="3291" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3310" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3313" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3295" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3295" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="bpfd.right = new FormAttachment(100, -5);" startPosition="3319" length="41">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="bpfd.right = new FormAttachment(100, -5)" startPosition="3319" length="40" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="bpfd.right" startPosition="3319" length="10" fullyQualifiedName="bpfd.right">
                <name lexicalForm="right" startPosition="3324" length="5" fullyQualifiedName="right" identifier="right"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="3319" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="3332" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="3351" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="3356" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3357" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3336" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3336" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="bpfd.bottom = new FormAttachment(100, -5);" startPosition="3363" length="42">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="bpfd.bottom = new FormAttachment(100, -5)" startPosition="3363" length="41" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="bpfd.bottom" startPosition="3363" length="11" fullyQualifiedName="bpfd.bottom">
                <name lexicalForm="bottom" startPosition="3368" length="6" fullyQualifiedName="bottom" identifier="bottom"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="3363" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="3377" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="3396" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="3401" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3402" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3381" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3381" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="btnPanel.setLayoutData(bpfd);" startPosition="3408" length="29">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="btnPanel.setLayoutData(bpfd)" startPosition="3408" length="28">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="3431" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="3408" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
              <name lexicalForm="setLayoutData" startPosition="3417" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="btnPanel.setLayout(new FormLayout());" startPosition="3440" length="37">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="btnPanel.setLayout(new FormLayout())" startPosition="3440" length="36">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormLayout()" startPosition="3459" length="16">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormLayout" startPosition="3463" length="10">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormLayout" startPosition="3463" length="10" fullyQualifiedName="FormLayout" identifier="FormLayout"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="3440" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
              <name lexicalForm="setLayout" startPosition="3449" length="9" fullyQualifiedName="setLayout" identifier="setLayout"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="btnPanel.setTabList(new Control[]{messageField});" startPosition="3480" length="49">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="btnPanel.setTabList(new Control[]{messageField})" startPosition="3480" length="48">
              <arguments xsi:type="JavaAST:ArrayCreation" lexicalForm="new Control[]{messageField}" startPosition="3500" length="27">
                <initializer lexicalForm="{messageField}" startPosition="3513" length="14">
                  <expressions xsi:type="JavaAST:SimpleName" lexicalForm="messageField" startPosition="3514" length="12" fullyQualifiedName="messageField" identifier="messageField"/>
                </initializer>
                <type lexicalForm="Control[]" startPosition="3504" length="9" dimensions="1">
                  <componentType xsi:type="JavaAST:SimpleType" lexicalForm="Control" startPosition="3504" length="7">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="Control" startPosition="3504" length="7" fullyQualifiedName="Control" identifier="Control"/>
                  </componentType>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="3480" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
              <name lexicalForm="setTabList" startPosition="3489" length="10" fullyQualifiedName="setTabList" identifier="setTabList"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="FormData mffd = new FormData();" startPosition="3532" length="31">
            <fragments lexicalForm="mffd = new FormData()" startPosition="3541" length="21">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormData()" startPosition="3548" length="14">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="3552" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="3552" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
                </type>
              </initializer>
              <name lexicalForm="mffd" startPosition="3541" length="4" fullyQualifiedName="mffd" identifier="mffd" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="3532" length="8">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="3532" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="mffd.top = new FormAttachment(0, 5);" startPosition="3566" length="36">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="mffd.top = new FormAttachment(0, 5)" startPosition="3566" length="35" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="mffd.top" startPosition="3566" length="8" fullyQualifiedName="mffd.top">
                <name lexicalForm="top" startPosition="3571" length="3" fullyQualifiedName="top" identifier="top"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="mffd" startPosition="3566" length="4" fullyQualifiedName="mffd" identifier="mffd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="3577" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3596" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3599" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3581" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3581" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="mffd.left = new FormAttachment(0, 0);" startPosition="3605" length="37">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="mffd.left = new FormAttachment(0, 0)" startPosition="3605" length="36" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="mffd.left" startPosition="3605" length="9" fullyQualifiedName="mffd.left">
                <name lexicalForm="left" startPosition="3610" length="4" fullyQualifiedName="left" identifier="left"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="mffd" startPosition="3605" length="4" fullyQualifiedName="mffd" identifier="mffd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 0)" startPosition="3617" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3636" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3639" length="1" token="0"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3621" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3621" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="mffd.right = new FormAttachment(sendBtn, -5);" startPosition="3645" length="45">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="mffd.right = new FormAttachment(sendBtn, -5)" startPosition="3645" length="44" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="mffd.right" startPosition="3645" length="10" fullyQualifiedName="mffd.right">
                <name lexicalForm="right" startPosition="3650" length="5" fullyQualifiedName="right" identifier="right"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="mffd" startPosition="3645" length="4" fullyQualifiedName="mffd" identifier="mffd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(sendBtn, -5)" startPosition="3658" length="31">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="sendBtn" startPosition="3677" length="7" fullyQualifiedName="sendBtn" identifier="sendBtn"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="3686" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3687" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3662" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3662" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="messageField.setLayoutData(mffd);" startPosition="3693" length="33">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="messageField.setLayoutData(mffd)" startPosition="3693" length="32">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="mffd" startPosition="3720" length="4" fullyQualifiedName="mffd" identifier="mffd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="messageField" startPosition="3693" length="12" fullyQualifiedName="messageField" identifier="messageField"/>
              <name lexicalForm="setLayoutData" startPosition="3706" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="FormData sbfd = new FormData();" startPosition="3729" length="31">
            <fragments lexicalForm="sbfd = new FormData()" startPosition="3738" length="21">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormData()" startPosition="3745" length="14">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="3749" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="3749" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
                </type>
              </initializer>
              <name lexicalForm="sbfd" startPosition="3738" length="4" fullyQualifiedName="sbfd" identifier="sbfd" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="3729" length="8">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="3729" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="sbfd.top = new FormAttachment(0, 0);" startPosition="3763" length="36">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="sbfd.top = new FormAttachment(0, 0)" startPosition="3763" length="35" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="sbfd.top" startPosition="3763" length="8" fullyQualifiedName="sbfd.top">
                <name lexicalForm="top" startPosition="3768" length="3" fullyQualifiedName="top" identifier="top"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="sbfd" startPosition="3763" length="4" fullyQualifiedName="sbfd" identifier="sbfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 0)" startPosition="3774" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3793" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3796" length="1" token="0"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3778" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3778" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="sbfd.right = new FormAttachment(100, 0);" startPosition="3802" length="40">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="sbfd.right = new FormAttachment(100, 0)" startPosition="3802" length="39" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="sbfd.right" startPosition="3802" length="10" fullyQualifiedName="sbfd.right">
                <name lexicalForm="right" startPosition="3807" length="5" fullyQualifiedName="right" identifier="right"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="sbfd" startPosition="3802" length="4" fullyQualifiedName="sbfd" identifier="sbfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, 0)" startPosition="3815" length="26">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="3834" length="3" token="100"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3839" length="1" token="0"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3819" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3819" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="sendBtn.setLayoutData(sbfd);" startPosition="3845" length="28">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="sendBtn.setLayoutData(sbfd)" startPosition="3845" length="27">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="sbfd" startPosition="3867" length="4" fullyQualifiedName="sbfd" identifier="sbfd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="sendBtn" startPosition="3845" length="7" fullyQualifiedName="sendBtn" identifier="sendBtn"/>
              <name lexicalForm="setLayoutData" startPosition="3853" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="sendBtn.setText(&quot;Send&quot;);" startPosition="3876" length="24">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="sendBtn.setText(&quot;Send&quot;)" startPosition="3876" length="23">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Send&quot;" startPosition="3892" length="6" escapedValue="&quot;Send&quot;" literalValue="Send"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="sendBtn" startPosition="3876" length="7" fullyQualifiedName="sendBtn" identifier="sendBtn"/>
              <name lexicalForm="setText" startPosition="3884" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.pack();" startPosition="3903" length="13">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.pack()" startPosition="3903" length="12">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="3903" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="pack" startPosition="3909" length="4" fullyQualifiedName="pack" identifier="pack"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.setSize(300, 300);" startPosition="3919" length="24">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.setSize(300, 300)" startPosition="3919" length="23">
              <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="300" startPosition="3933" length="3" token="300"/>
              <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="300" startPosition="3938" length="3" token="300"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="3919" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="setSize" startPosition="3925" length="7" fullyQualifiedName="setSize" identifier="setSize"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="toFront();" startPosition="3946" length="10">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="toFront()" startPosition="3946" length="9">
              <name lexicalForm="toFront" startPosition="3946" length="7" fullyQualifiedName="toFront" identifier="toFront"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="initialize" startPosition="2135" length="10" fullyQualifiedName="initialize" identifier="initialize" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2130" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public org.eclipse.swt.widgets.Shell getShell() {&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}" startPosition="3962" length="68">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3962" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}" startPosition="4010" length="20">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return shell;" startPosition="4014" length="13">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="4021" length="5" fullyQualifiedName="shell" identifier="shell"/>
          </statements>
        </body>
        <name lexicalForm="getShell" startPosition="3999" length="8" fullyQualifiedName="getShell" identifier="getShell" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="3969" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="3969" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
            <name lexicalForm="Shell" startPosition="3993" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="3969" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="3985" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="3969" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="3981" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="3969" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="3973" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="3969" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setShell(org.eclipse.swt.widgets.Shell shell) {&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}" startPosition="4033" length="84">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4033" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}" startPosition="4091" length="26">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.shell = shell;" startPosition="4095" length="19">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.shell = shell" startPosition="4095" length="18" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.shell" startPosition="4095" length="10">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4095" length="4" resolvedType="//@compilationUnits.24/@types.0"/>
                <name lexicalForm="shell" startPosition="4100" length="5" fullyQualifiedName="shell" identifier="shell"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="4108" length="5" fullyQualifiedName="shell" identifier="shell"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setShell" startPosition="4045" length="8" fullyQualifiedName="setShell" identifier="setShell" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4040" length="4" code="void"/>
        <parameters lexicalForm="org.eclipse.swt.widgets.Shell shell" startPosition="4054" length="35">
          <name lexicalForm="shell" startPosition="4084" length="5" fullyQualifiedName="shell" identifier="shell" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="4054" length="29">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="4054" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
              <name lexicalForm="Shell" startPosition="4078" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="4054" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
                <name lexicalForm="widgets" startPosition="4070" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="4054" length="15" fullyQualifiedName="org.eclipse.swt">
                  <name lexicalForm="swt" startPosition="4066" length="3" fullyQualifiedName="swt" identifier="swt"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="4054" length="11" fullyQualifiedName="org.eclipse">
                    <name lexicalForm="eclipse" startPosition="4058" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="4054" length="3" fullyQualifiedName="org" identifier="org"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.util.Enumeration getListeners() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}" startPosition="4120" length="130">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4120" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}" startPosition="4164" length="86">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());" startPosition="4168" length="79">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator())" startPosition="4175" length="71" resolvedType="//@compilationUnits.0/@types.0">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator()" startPosition="4221" length="24">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="4221" length="8" fullyQualifiedName="listener" identifier="listener"/>
                <name lexicalForm="iterator" startPosition="4235" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
              </arguments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="4179" length="41" resolvedType="//@compilationUnits.0/@types.0">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="4179" length="41" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="be.ac.vub.util.IteratorEnumerationAdapter">
                  <name lexicalForm="IteratorEnumerationAdapter" startPosition="4194" length="26" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="IteratorEnumerationAdapter" identifier="IteratorEnumerationAdapter"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util" startPosition="4179" length="14" fullyQualifiedName="be.ac.vub.util">
                    <name lexicalForm="util" startPosition="4189" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub" startPosition="4179" length="9" fullyQualifiedName="be.ac.vub">
                      <name lexicalForm="vub" startPosition="4185" length="3" fullyQualifiedName="vub" identifier="vub"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac" startPosition="4179" length="5" fullyQualifiedName="be.ac">
                        <name lexicalForm="ac" startPosition="4182" length="2" fullyQualifiedName="ac" identifier="ac"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="be" startPosition="4179" length="2" fullyQualifiedName="be" identifier="be"/>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </name>
              </type>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getListeners" startPosition="4149" length="12" fullyQualifiedName="getListeners" identifier="getListeners" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="4127" length="21">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="4127" length="21" fullyQualifiedName="java.util.Enumeration">
            <name lexicalForm="Enumeration" startPosition="4137" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="4127" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="4132" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="4127" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addListener(im.view.ConversationViewListener listener) {&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="4253" length="150">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4253" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="4320" length="83">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}" startPosition="4324" length="76">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.listener.contains(listener)" startPosition="4328" length="33" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.listener.contains(listener)" startPosition="4329" length="32">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="4352" length="8" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="listener" identifier="listener"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.listener" startPosition="4329" length="13">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4329" length="4" resolvedType="//@compilationUnits.24/@types.0"/>
                  <name lexicalForm="listener" startPosition="4334" length="8" fullyQualifiedName="listener" identifier="listener"/>
                </expression>
                <name lexicalForm="contains" startPosition="4343" length="8" fullyQualifiedName="contains" identifier="contains"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}" startPosition="4363" length="37">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.listener.add(listener);" startPosition="4368" length="28">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.listener.add(listener)" startPosition="4368" length="27">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="4386" length="8" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="listener" identifier="listener"/>
                  <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.listener" startPosition="4368" length="13">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4368" length="4" resolvedType="//@compilationUnits.24/@types.0"/>
                    <name lexicalForm="listener" startPosition="4373" length="8" fullyQualifiedName="listener" identifier="listener"/>
                  </expression>
                  <name lexicalForm="add" startPosition="4382" length="3" fullyQualifiedName="add" identifier="add"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="addListener" startPosition="4265" length="11" fullyQualifiedName="addListener" identifier="addListener" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4260" length="4" code="void"/>
        <parameters lexicalForm="im.view.ConversationViewListener listener" startPosition="4277" length="41">
          <name lexicalForm="listener" startPosition="4310" length="8" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="listener" identifier="listener" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ConversationViewListener" startPosition="4277" length="32" resolvedType="//@compilationUnits.22/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationViewListener" startPosition="4277" length="32" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="im.view.ConversationViewListener">
              <name lexicalForm="ConversationViewListener" startPosition="4285" length="24" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="ConversationViewListener" identifier="ConversationViewListener"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="4277" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="4280" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4277" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeListener(im.view.ConversationViewListener listener) {&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}" startPosition="4406" length="108">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4406" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}" startPosition="4476" length="38">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.listener.remove(listener);" startPosition="4480" length="31">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.listener.remove(listener)" startPosition="4480" length="30">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="4501" length="8" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="listener" identifier="listener"/>
              <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.listener" startPosition="4480" length="13">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4480" length="4" resolvedType="//@compilationUnits.24/@types.0"/>
                <name lexicalForm="listener" startPosition="4485" length="8" fullyQualifiedName="listener" identifier="listener"/>
              </expression>
              <name lexicalForm="remove" startPosition="4494" length="6" fullyQualifiedName="remove" identifier="remove"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="removeListener" startPosition="4418" length="14" fullyQualifiedName="removeListener" identifier="removeListener" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4413" length="4" code="void"/>
        <parameters lexicalForm="im.view.ConversationViewListener listener" startPosition="4433" length="41">
          <name lexicalForm="listener" startPosition="4466" length="8" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="listener" identifier="listener" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ConversationViewListener" startPosition="4433" length="32" resolvedType="//@compilationUnits.22/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationViewListener" startPosition="4433" length="32" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="im.view.ConversationViewListener">
              <name lexicalForm="ConversationViewListener" startPosition="4441" length="24" resolvedType="//@compilationUnits.22/@types.0" fullyQualifiedName="ConversationViewListener" identifier="ConversationViewListener"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="4433" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="4436" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4433" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="SWTConversationView" startPosition="237" length="19" resolvedType="//@compilationUnits.24/@types.0" fullyQualifiedName="SWTConversationView" identifier="SWTConversationView" declaration="true"/>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ConversationView" startPosition="268" length="24" resolvedType="//@compilationUnits.18/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationView" startPosition="268" length="24" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="im.view.ConversationView">
          <name lexicalForm="ConversationView" startPosition="276" length="16" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="ConversationView" identifier="ConversationView"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="268" length="7" fullyQualifiedName="im.view">
            <name lexicalForm="view" startPosition="271" length="4" fullyQualifiedName="view" identifier="view"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="268" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view.swt;&#xA;&#xA;import org.eclipse.swt.*;&#xA;import org.eclipse.swt.widgets.*;&#xA;import im.InstantMessagingClient;&#xA;import org.eclipse.swt.events.*;&#xA;import org.eclipse.swt.layout.*;&#xA;import im.view.NewContactDialogListener;&#xA;&#xA;public class SWTNewContactDialog implements im.view.NewContactDialog {&#xA;&#x9;private org.eclipse.swt.widgets.Shell shell;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Composite dlgPanel;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Composite btnPanel;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Button okBtn;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Button cancelBtn;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Label uid;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Text uidField;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Label name;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Text nameField;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Label network;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Combo networkField;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Label password;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Text passwordField;&#xA;&#xA;&#x9;private java.util.Set listener = new java.util.HashSet();&#xA;&#xA;&#x9;public java.lang.String getUid() {&#xA;&#x9;&#x9;return uidField.getText();&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getName() {&#xA;&#x9;&#x9;return nameField.getText();&#xA;&#x9;}&#xA;&#xA;&#x9;public int getNetwork() {&#xA;&#x9;&#x9;return networkField.getSelectionIndex();&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getPassword() {&#xA;&#x9;&#x9;return passwordField.getText();&#xA;&#x9;}&#xA;&#xA;&#x9;public void addNetwork(java.lang.String n) {&#xA;&#x9;&#x9;networkField.add(n);&#xA;&#x9;&#x9;networkField.select(0);&#xA;&#x9;}&#xA;&#xA;&#x9;public SWTNewContactDialog() {&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;private void onOk() {&#xA;&#x9;&#x9;notifyListeners(true);&#xA;&#x9;}&#xA;&#xA;&#x9;private void onCancel() {&#xA;&#x9;&#x9;notifyListeners(false);&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifyListeners(boolean okClicked) {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((NewContactDialogListener) ls.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.onNewContactDialogClose(okClicked, this);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private void initialize() {&#xA;&#x9;&#x9;shell = new Shell(InstantMessagingClient.getInstance().getShell(),&#xA;&#x9;&#x9;&#x9;&#x9;SWT.RESIZE);&#xA;&#x9;&#x9;dlgPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;btnPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;okBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;cancelBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;network = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;networkField = new Combo(dlgPanel, SWT.DROP_DOWN | SWT.READ_ONLY);&#xA;&#x9;&#x9;uid = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;uidField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;name = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;nameField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;password = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;passwordField = new Text(dlgPanel, SWT.SINGLE | SWT.PASSWORD&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.BORDER);&#xA;&#x9;&#x9;shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;cancelBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;okBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onOk();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;shell.setText(&quot;Add new contact&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;shell.setDefaultButton(okBtn);&#xA;&#x9;&#x9;FormData dpfd = new FormData();&#xA;&#x9;&#x9;dpfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;dpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;dpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;dpfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;dlgPanel.setLayoutData(dpfd);&#xA;&#x9;&#x9;dlgPanel.setLayout(new GridLayout(2, false));&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;okBtn.setText(&quot;OK&quot;);&#xA;&#x9;&#x9;cancelBtn.setText(&quot;Cancel&quot;);&#xA;&#x9;&#x9;uid.setText(&quot;User ID&quot;);&#xA;&#x9;&#x9;name.setText(&quot;Name&quot;);&#xA;&#x9;&#x9;network.setText(&quot;Network&quot;);&#xA;&#x9;&#x9;password.setText(&quot;Password&quot;);&#xA;&#x9;&#x9;GridData fgd = new GridData();&#xA;&#x9;&#x9;fgd.horizontalAlignment = SWT.FILL;&#xA;&#x9;&#x9;fgd.grabExcessHorizontalSpace = true;&#xA;&#x9;&#x9;fgd.heightHint = Math.round(uidField.getLineHeight() * (float) 1.1);&#xA;&#x9;&#x9;uidField.setLayoutData(fgd);&#xA;&#x9;&#x9;nameField.setLayoutData(fgd);&#xA;&#x9;&#x9;networkField.setLayoutData(fgd);&#xA;&#x9;&#x9;passwordField.setLayoutData(fgd);&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.open();&#xA;&#x9;&#x9;shell.traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Shell getShell() {&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setShell(org.eclipse.swt.widgets.Shell shell) {&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getListeners() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addListener(im.view.NewContactDialogListener listener) {&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeListener(im.view.NewContactDialogListener listener) {&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="4919">
    <package lexicalForm="package im.view.swt;" length="20">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.swt" startPosition="8" length="11" fullyQualifiedName="im.view.swt">
        <name lexicalForm="swt" startPosition="16" length="3" fullyQualifiedName="swt" identifier="swt"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
          <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
        </qualifier>
      </name>
    </package>
    <imports lexicalForm="import org.eclipse.swt.*;" startPosition="22" length="25" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="29" length="15" fullyQualifiedName="org.eclipse.swt">
        <name lexicalForm="swt" startPosition="41" length="3" fullyQualifiedName="swt" identifier="swt"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="29" length="11" fullyQualifiedName="org.eclipse">
          <name lexicalForm="eclipse" startPosition="33" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="29" length="3" fullyQualifiedName="org" identifier="org"/>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.widgets.*;" startPosition="48" length="33" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="55" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
        <name lexicalForm="widgets" startPosition="71" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="55" length="15" fullyQualifiedName="org.eclipse.swt">
          <name lexicalForm="swt" startPosition="67" length="3" fullyQualifiedName="swt" identifier="swt"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="55" length="11" fullyQualifiedName="org.eclipse">
            <name lexicalForm="eclipse" startPosition="59" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="55" length="3" fullyQualifiedName="org" identifier="org"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import im.InstantMessagingClient;" startPosition="82" length="33">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="89" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
        <name lexicalForm="InstantMessagingClient" startPosition="92" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="89" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.events.*;" startPosition="116" length="32" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.events" startPosition="123" length="22" fullyQualifiedName="org.eclipse.swt.events">
        <name lexicalForm="events" startPosition="139" length="6" fullyQualifiedName="events" identifier="events"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="123" length="15" fullyQualifiedName="org.eclipse.swt">
          <name lexicalForm="swt" startPosition="135" length="3" fullyQualifiedName="swt" identifier="swt"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="123" length="11" fullyQualifiedName="org.eclipse">
            <name lexicalForm="eclipse" startPosition="127" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="123" length="3" fullyQualifiedName="org" identifier="org"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.layout.*;" startPosition="149" length="32" onDemand="true">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.layout" startPosition="156" length="22" fullyQualifiedName="org.eclipse.swt.layout">
        <name lexicalForm="layout" startPosition="172" length="6" fullyQualifiedName="layout" identifier="layout"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="156" length="15" fullyQualifiedName="org.eclipse.swt">
          <name lexicalForm="swt" startPosition="168" length="3" fullyQualifiedName="swt" identifier="swt"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="156" length="11" fullyQualifiedName="org.eclipse">
            <name lexicalForm="eclipse" startPosition="160" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="156" length="3" fullyQualifiedName="org" identifier="org"/>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import im.view.NewContactDialogListener;" startPosition="182" length="40">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialogListener" startPosition="189" length="32" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="im.view.NewContactDialogListener">
        <name lexicalForm="NewContactDialogListener" startPosition="197" length="24" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="NewContactDialogListener" identifier="NewContactDialogListener"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="189" length="7" fullyQualifiedName="im.view">
          <name lexicalForm="view" startPosition="192" length="4" fullyQualifiedName="view" identifier="view"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="189" length="2" fullyQualifiedName="im" identifier="im"/>
        </qualifier>
      </name>
    </imports>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class SWTNewContactDialog implements im.view.NewContactDialog {&#xA;&#x9;private org.eclipse.swt.widgets.Shell shell;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Composite dlgPanel;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Composite btnPanel;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Button okBtn;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Button cancelBtn;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Label uid;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Text uidField;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Label name;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Text nameField;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Label network;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Combo networkField;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Label password;&#xA;&#xA;&#x9;private org.eclipse.swt.widgets.Text passwordField;&#xA;&#xA;&#x9;private java.util.Set listener = new java.util.HashSet();&#xA;&#xA;&#x9;public java.lang.String getUid() {&#xA;&#x9;&#x9;return uidField.getText();&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getName() {&#xA;&#x9;&#x9;return nameField.getText();&#xA;&#x9;}&#xA;&#xA;&#x9;public int getNetwork() {&#xA;&#x9;&#x9;return networkField.getSelectionIndex();&#xA;&#x9;}&#xA;&#xA;&#x9;public java.lang.String getPassword() {&#xA;&#x9;&#x9;return passwordField.getText();&#xA;&#x9;}&#xA;&#xA;&#x9;public void addNetwork(java.lang.String n) {&#xA;&#x9;&#x9;networkField.add(n);&#xA;&#x9;&#x9;networkField.select(0);&#xA;&#x9;}&#xA;&#xA;&#x9;public SWTNewContactDialog() {&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;});&#xA;&#x9;}&#xA;&#xA;&#x9;private void onOk() {&#xA;&#x9;&#x9;notifyListeners(true);&#xA;&#x9;}&#xA;&#xA;&#x9;private void onCancel() {&#xA;&#x9;&#x9;notifyListeners(false);&#xA;&#x9;}&#xA;&#xA;&#x9;private void notifyListeners(boolean okClicked) {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((NewContactDialogListener) ls.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.onNewContactDialogClose(okClicked, this);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;private void initialize() {&#xA;&#x9;&#x9;shell = new Shell(InstantMessagingClient.getInstance().getShell(),&#xA;&#x9;&#x9;&#x9;&#x9;SWT.RESIZE);&#xA;&#x9;&#x9;dlgPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;btnPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;okBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;cancelBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;network = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;networkField = new Combo(dlgPanel, SWT.DROP_DOWN | SWT.READ_ONLY);&#xA;&#x9;&#x9;uid = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;uidField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;name = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;nameField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;password = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;passwordField = new Text(dlgPanel, SWT.SINGLE | SWT.PASSWORD&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.BORDER);&#xA;&#x9;&#x9;shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;cancelBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;okBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onOk();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;shell.setText(&quot;Add new contact&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;shell.setDefaultButton(okBtn);&#xA;&#x9;&#x9;FormData dpfd = new FormData();&#xA;&#x9;&#x9;dpfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;dpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;dpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;dpfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;dlgPanel.setLayoutData(dpfd);&#xA;&#x9;&#x9;dlgPanel.setLayout(new GridLayout(2, false));&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;okBtn.setText(&quot;OK&quot;);&#xA;&#x9;&#x9;cancelBtn.setText(&quot;Cancel&quot;);&#xA;&#x9;&#x9;uid.setText(&quot;User ID&quot;);&#xA;&#x9;&#x9;name.setText(&quot;Name&quot;);&#xA;&#x9;&#x9;network.setText(&quot;Network&quot;);&#xA;&#x9;&#x9;password.setText(&quot;Password&quot;);&#xA;&#x9;&#x9;GridData fgd = new GridData();&#xA;&#x9;&#x9;fgd.horizontalAlignment = SWT.FILL;&#xA;&#x9;&#x9;fgd.grabExcessHorizontalSpace = true;&#xA;&#x9;&#x9;fgd.heightHint = Math.round(uidField.getLineHeight() * (float) 1.1);&#xA;&#x9;&#x9;uidField.setLayoutData(fgd);&#xA;&#x9;&#x9;nameField.setLayoutData(fgd);&#xA;&#x9;&#x9;networkField.setLayoutData(fgd);&#xA;&#x9;&#x9;passwordField.setLayoutData(fgd);&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.open();&#xA;&#x9;&#x9;shell.traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Shell getShell() {&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setShell(org.eclipse.swt.widgets.Shell shell) {&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public java.util.Enumeration getListeners() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}&#xA;&#xA;&#x9;public void addListener(im.view.NewContactDialogListener listener) {&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public void removeListener(im.view.NewContactDialogListener listener) {&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}&#xA;&#xA;}" startPosition="224" length="4694" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.26/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@type/@name //@compilationUnits.25/@types.0/@bodyDeclarations.28/@body/@statements.0/@expression/@expression/@expression //@compilationUnits.25/@types.0/@bodyDeclarations.25/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.25/@types.0/@bodyDeclarations.22/@body/@statements.0/@body/@statements.0/@expression/@arguments.1 //@compilationUnits.26/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression //@compilationUnits.25/@types.0/@name //@compilationUnits.25/@types.0/@bodyDeclarations.27/@body/@statements.0/@expression/@operand/@expression/@expression //@compilationUnits.25/@types.0/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression/@expression" resolvedTypeReferences="//@compilationUnits.26/@types.0/@bodyDeclarations.3/@body/@statements.0/@expression/@type">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="224" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Shell shell;" startPosition="296" length="44">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="296" length="7" private="true"/>
        <fragments lexicalForm="shell" startPosition="334" length="5">
          <name lexicalForm="shell" startPosition="334" length="5" fullyQualifiedName="shell" identifier="shell" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="304" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="304" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
            <name lexicalForm="Shell" startPosition="328" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="304" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="320" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="304" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="316" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="304" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="308" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="304" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Composite dlgPanel;" startPosition="343" length="51">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="343" length="7" private="true"/>
        <fragments lexicalForm="dlgPanel" startPosition="385" length="8">
          <name lexicalForm="dlgPanel" startPosition="385" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="351" length="33">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="351" length="33" fullyQualifiedName="org.eclipse.swt.widgets.Composite">
            <name lexicalForm="Composite" startPosition="375" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="351" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="367" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="351" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="363" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="351" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="355" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="351" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Composite btnPanel;" startPosition="397" length="51">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="397" length="7" private="true"/>
        <fragments lexicalForm="btnPanel" startPosition="439" length="8">
          <name lexicalForm="btnPanel" startPosition="439" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="405" length="33">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Composite" startPosition="405" length="33" fullyQualifiedName="org.eclipse.swt.widgets.Composite">
            <name lexicalForm="Composite" startPosition="429" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="405" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="421" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="405" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="417" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="405" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="409" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="405" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Button okBtn;" startPosition="451" length="45">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="451" length="7" private="true"/>
        <fragments lexicalForm="okBtn" startPosition="490" length="5">
          <name lexicalForm="okBtn" startPosition="490" length="5" fullyQualifiedName="okBtn" identifier="okBtn" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="459" length="30">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="459" length="30" fullyQualifiedName="org.eclipse.swt.widgets.Button">
            <name lexicalForm="Button" startPosition="483" length="6" fullyQualifiedName="Button" identifier="Button"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="459" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="475" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="459" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="471" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="459" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="463" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="459" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Button cancelBtn;" startPosition="499" length="49">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="499" length="7" private="true"/>
        <fragments lexicalForm="cancelBtn" startPosition="538" length="9">
          <name lexicalForm="cancelBtn" startPosition="538" length="9" fullyQualifiedName="cancelBtn" identifier="cancelBtn" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="507" length="30">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Button" startPosition="507" length="30" fullyQualifiedName="org.eclipse.swt.widgets.Button">
            <name lexicalForm="Button" startPosition="531" length="6" fullyQualifiedName="Button" identifier="Button"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="507" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="523" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="507" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="519" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="507" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="511" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="507" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Label uid;" startPosition="551" length="42">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="551" length="7" private="true"/>
        <fragments lexicalForm="uid" startPosition="589" length="3">
          <name lexicalForm="uid" startPosition="589" length="3" fullyQualifiedName="uid" identifier="uid" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Label" startPosition="559" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Label" startPosition="559" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Label">
            <name lexicalForm="Label" startPosition="583" length="5" fullyQualifiedName="Label" identifier="Label"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="559" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="575" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="559" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="571" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="559" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="563" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="559" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Text uidField;" startPosition="596" length="46">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="596" length="7" private="true"/>
        <fragments lexicalForm="uidField" startPosition="633" length="8">
          <name lexicalForm="uidField" startPosition="633" length="8" fullyQualifiedName="uidField" identifier="uidField" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Text" startPosition="604" length="28">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Text" startPosition="604" length="28" fullyQualifiedName="org.eclipse.swt.widgets.Text">
            <name lexicalForm="Text" startPosition="628" length="4" fullyQualifiedName="Text" identifier="Text"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="604" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="620" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="604" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="616" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="604" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="608" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="604" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Label name;" startPosition="645" length="43">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="645" length="7" private="true"/>
        <fragments lexicalForm="name" startPosition="683" length="4">
          <name lexicalForm="name" startPosition="683" length="4" fullyQualifiedName="name" identifier="name" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Label" startPosition="653" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Label" startPosition="653" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Label">
            <name lexicalForm="Label" startPosition="677" length="5" fullyQualifiedName="Label" identifier="Label"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="653" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="669" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="653" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="665" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="653" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="657" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="653" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Text nameField;" startPosition="691" length="47">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="691" length="7" private="true"/>
        <fragments lexicalForm="nameField" startPosition="728" length="9">
          <name lexicalForm="nameField" startPosition="728" length="9" fullyQualifiedName="nameField" identifier="nameField" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Text" startPosition="699" length="28">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Text" startPosition="699" length="28" fullyQualifiedName="org.eclipse.swt.widgets.Text">
            <name lexicalForm="Text" startPosition="723" length="4" fullyQualifiedName="Text" identifier="Text"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="699" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="715" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="699" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="711" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="699" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="703" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="699" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Label network;" startPosition="741" length="46">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="741" length="7" private="true"/>
        <fragments lexicalForm="network" startPosition="779" length="7">
          <name lexicalForm="network" startPosition="779" length="7" fullyQualifiedName="network" identifier="network" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Label" startPosition="749" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Label" startPosition="749" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Label">
            <name lexicalForm="Label" startPosition="773" length="5" fullyQualifiedName="Label" identifier="Label"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="749" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="765" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="749" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="761" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="749" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="753" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="749" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Combo networkField;" startPosition="790" length="51">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="790" length="7" private="true"/>
        <fragments lexicalForm="networkField" startPosition="828" length="12">
          <name lexicalForm="networkField" startPosition="828" length="12" fullyQualifiedName="networkField" identifier="networkField" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Combo" startPosition="798" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Combo" startPosition="798" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Combo">
            <name lexicalForm="Combo" startPosition="822" length="5" fullyQualifiedName="Combo" identifier="Combo"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="798" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="814" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="798" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="810" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="798" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="802" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="798" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Label password;" startPosition="844" length="47">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="844" length="7" private="true"/>
        <fragments lexicalForm="password" startPosition="882" length="8">
          <name lexicalForm="password" startPosition="882" length="8" fullyQualifiedName="password" identifier="password" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Label" startPosition="852" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Label" startPosition="852" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Label">
            <name lexicalForm="Label" startPosition="876" length="5" fullyQualifiedName="Label" identifier="Label"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="852" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="868" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="852" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="864" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="852" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="856" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="852" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Text passwordField;" startPosition="894" length="51">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="894" length="7" private="true"/>
        <fragments lexicalForm="passwordField" startPosition="931" length="13">
          <name lexicalForm="passwordField" startPosition="931" length="13" fullyQualifiedName="passwordField" identifier="passwordField" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Text" startPosition="902" length="28">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Text" startPosition="902" length="28" fullyQualifiedName="org.eclipse.swt.widgets.Text">
            <name lexicalForm="Text" startPosition="926" length="4" fullyQualifiedName="Text" identifier="Text"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="902" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="918" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="902" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="914" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="902" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="906" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="902" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private java.util.Set listener = new java.util.HashSet();" startPosition="948" length="57">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="948" length="7" private="true"/>
        <fragments lexicalForm="listener = new java.util.HashSet()" startPosition="970" length="34">
          <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new java.util.HashSet()" startPosition="981" length="23">
            <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.HashSet" startPosition="985" length="17">
              <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.HashSet" startPosition="985" length="17" fullyQualifiedName="java.util.HashSet">
                <name lexicalForm="HashSet" startPosition="995" length="7" fullyQualifiedName="HashSet" identifier="HashSet"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="985" length="9" fullyQualifiedName="java.util">
                  <name lexicalForm="util" startPosition="990" length="4" fullyQualifiedName="util" identifier="util"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="985" length="4" fullyQualifiedName="java" identifier="java"/>
                </qualifier>
              </name>
            </type>
          </initializer>
          <name lexicalForm="listener" startPosition="970" length="8" fullyQualifiedName="listener" identifier="listener" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Set" startPosition="956" length="13">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Set" startPosition="956" length="13" fullyQualifiedName="java.util.Set">
            <name lexicalForm="Set" startPosition="966" length="3" fullyQualifiedName="Set" identifier="Set"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="956" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="961" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="956" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getUid() {&#xA;&#x9;&#x9;return uidField.getText();&#xA;&#x9;}" startPosition="1008" length="66">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1008" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return uidField.getText();&#xA;&#x9;}" startPosition="1041" length="33">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return uidField.getText();" startPosition="1045" length="26">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="uidField.getText()" startPosition="1052" length="18">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="uidField" startPosition="1052" length="8" fullyQualifiedName="uidField" identifier="uidField"/>
              <name lexicalForm="getText" startPosition="1061" length="7" fullyQualifiedName="getText" identifier="getText"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getUid" startPosition="1032" length="6" fullyQualifiedName="getUid" identifier="getUid" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="1015" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="1015" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="1025" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1015" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="1020" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1015" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getName() {&#xA;&#x9;&#x9;return nameField.getText();&#xA;&#x9;}" startPosition="1077" length="68">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1077" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return nameField.getText();&#xA;&#x9;}" startPosition="1111" length="34">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return nameField.getText();" startPosition="1115" length="27">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="nameField.getText()" startPosition="1122" length="19">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="nameField" startPosition="1122" length="9" fullyQualifiedName="nameField" identifier="nameField"/>
              <name lexicalForm="getText" startPosition="1132" length="7" fullyQualifiedName="getText" identifier="getText"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getName" startPosition="1101" length="7" fullyQualifiedName="getName" identifier="getName" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="1084" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="1084" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="1094" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1084" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="1089" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1084" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public int getNetwork() {&#xA;&#x9;&#x9;return networkField.getSelectionIndex();&#xA;&#x9;}" startPosition="1148" length="71">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1148" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return networkField.getSelectionIndex();&#xA;&#x9;}" startPosition="1172" length="47">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return networkField.getSelectionIndex();" startPosition="1176" length="40">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="networkField.getSelectionIndex()" startPosition="1183" length="32">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="networkField" startPosition="1183" length="12" fullyQualifiedName="networkField" identifier="networkField"/>
              <name lexicalForm="getSelectionIndex" startPosition="1196" length="17" fullyQualifiedName="getSelectionIndex" identifier="getSelectionIndex"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getNetwork" startPosition="1159" length="10" fullyQualifiedName="getNetwork" identifier="getNetwork" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="int" startPosition="1155" length="3" code="int"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.lang.String getPassword() {&#xA;&#x9;&#x9;return passwordField.getText();&#xA;&#x9;}" startPosition="1222" length="76">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1222" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return passwordField.getText();&#xA;&#x9;}" startPosition="1260" length="38">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return passwordField.getText();" startPosition="1264" length="31">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="passwordField.getText()" startPosition="1271" length="23">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="passwordField" startPosition="1271" length="13" fullyQualifiedName="passwordField" identifier="passwordField"/>
              <name lexicalForm="getText" startPosition="1285" length="7" fullyQualifiedName="getText" identifier="getText"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getPassword" startPosition="1246" length="11" fullyQualifiedName="getPassword" identifier="getPassword" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="1229" length="16">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="1229" length="16" fullyQualifiedName="java.lang.String">
            <name lexicalForm="String" startPosition="1239" length="6" fullyQualifiedName="String" identifier="String"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1229" length="9" fullyQualifiedName="java.lang">
              <name lexicalForm="lang" startPosition="1234" length="4" fullyQualifiedName="lang" identifier="lang"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1229" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addNetwork(java.lang.String n) {&#xA;&#x9;&#x9;networkField.add(n);&#xA;&#x9;&#x9;networkField.select(0);&#xA;&#x9;}" startPosition="1301" length="96">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1301" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;networkField.add(n);&#xA;&#x9;&#x9;networkField.select(0);&#xA;&#x9;}" startPosition="1344" length="53">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="networkField.add(n);" startPosition="1348" length="20">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="networkField.add(n)" startPosition="1348" length="19">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="n" startPosition="1365" length="1" fullyQualifiedName="n" identifier="n"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="networkField" startPosition="1348" length="12" fullyQualifiedName="networkField" identifier="networkField"/>
              <name lexicalForm="add" startPosition="1361" length="3" fullyQualifiedName="add" identifier="add"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="networkField.select(0);" startPosition="1371" length="23">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="networkField.select(0)" startPosition="1371" length="22">
              <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="1391" length="1" token="0"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="networkField" startPosition="1371" length="12" fullyQualifiedName="networkField" identifier="networkField"/>
              <name lexicalForm="select" startPosition="1384" length="6" fullyQualifiedName="select" identifier="select"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="addNetwork" startPosition="1313" length="10" fullyQualifiedName="addNetwork" identifier="addNetwork" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1308" length="4" code="void"/>
        <parameters lexicalForm="java.lang.String n" startPosition="1324" length="18">
          <name lexicalForm="n" startPosition="1341" length="1" fullyQualifiedName="n" identifier="n" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="java.lang.String" startPosition="1324" length="16">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.String" startPosition="1324" length="16" fullyQualifiedName="java.lang.String">
              <name lexicalForm="String" startPosition="1334" length="6" fullyQualifiedName="String" identifier="String"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="1324" length="9" fullyQualifiedName="java.lang">
                <name lexicalForm="lang" startPosition="1329" length="4" fullyQualifiedName="lang" identifier="lang"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1324" length="4" fullyQualifiedName="java" identifier="java"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public SWTNewContactDialog() {&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1400" length="198" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1400" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;});&#xA;&#x9;}" startPosition="1429" length="169">
          <statements xsi:type="JavaAST:SuperConstructorInvocation" lexicalForm="super();" startPosition="1433" length="8"/>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;});" startPosition="1444" length="151">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell().getDisplay().syncExec(&#xA;&#x9;&#x9;&#x9;&#x9;new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;})" startPosition="1444" length="150">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Runnable() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1519" length="74">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" startPosition="1534" length="59">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void run() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="1541" length="46">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="1541" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}" startPosition="1559" length="28">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="initialize();" startPosition="1567" length="13">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="initialize()" startPosition="1567" length="12">
                          <name lexicalForm="initialize" startPosition="1567" length="10" fullyQualifiedName="initialize" identifier="initialize"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="run" startPosition="1553" length="3" fullyQualifiedName="run" identifier="run" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1548" length="4" code="void"/>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Runnable" startPosition="1523" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Runnable" startPosition="1523" length="8" fullyQualifiedName="Runnable" identifier="Runnable"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell().getDisplay()" startPosition="1444" length="60">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell()" startPosition="1444" length="47">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance()" startPosition="1444" length="36" resolvedType="//@compilationUnits.2/@types.0">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="1444" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                    <name lexicalForm="getInstance" startPosition="1467" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                  </expression>
                  <name lexicalForm="getShell" startPosition="1481" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                </expression>
                <name lexicalForm="getDisplay" startPosition="1492" length="10" fullyQualifiedName="getDisplay" identifier="getDisplay"/>
              </expression>
              <name lexicalForm="syncExec" startPosition="1505" length="8" fullyQualifiedName="syncExec" identifier="syncExec"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="SWTNewContactDialog" startPosition="1407" length="19" fullyQualifiedName="SWTNewContactDialog" identifier="SWTNewContactDialog"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void onOk() {&#xA;&#x9;&#x9;notifyListeners(true);&#xA;&#x9;}" startPosition="1601" length="49">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="1601" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;notifyListeners(true);&#xA;&#x9;}" startPosition="1621" length="29">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyListeners(true);" startPosition="1625" length="22">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyListeners(true)" startPosition="1625" length="21">
              <arguments xsi:type="JavaAST:BooleanLiteral" lexicalForm="true" startPosition="1641" length="4" booleanValue="true"/>
              <name lexicalForm="notifyListeners" startPosition="1625" length="15" fullyQualifiedName="notifyListeners" identifier="notifyListeners"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onOk" startPosition="1614" length="4" fullyQualifiedName="onOk" identifier="onOk" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1609" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void onCancel() {&#xA;&#x9;&#x9;notifyListeners(false);&#xA;&#x9;}" startPosition="1653" length="54">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="1653" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;notifyListeners(false);&#xA;&#x9;}" startPosition="1677" length="30">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="notifyListeners(false);" startPosition="1681" length="23">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="notifyListeners(false)" startPosition="1681" length="22">
              <arguments xsi:type="JavaAST:BooleanLiteral" lexicalForm="false" startPosition="1697" length="5"/>
              <name lexicalForm="notifyListeners" startPosition="1681" length="15" fullyQualifiedName="notifyListeners" identifier="notifyListeners"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="onCancel" startPosition="1666" length="8" fullyQualifiedName="onCancel" identifier="onCancel" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1661" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void notifyListeners(boolean okClicked) {&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((NewContactDialogListener) ls.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.onNewContactDialogClose(okClicked, this);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1710" length="228">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="1710" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((NewContactDialogListener) ls.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.onNewContactDialogClose(okClicked, this);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="1758" length="180">
          <statements xsi:type="JavaAST:ForStatement" lexicalForm="for (java.util.Enumeration ls = getListeners(); ls.hasMoreElements();) {&#xA;&#x9;&#x9;&#x9;((NewContactDialogListener) ls.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.onNewContactDialogClose(okClicked, this);&#xA;&#x9;&#x9;}" startPosition="1762" length="173">
            <body xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;((NewContactDialogListener) ls.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.onNewContactDialogClose(okClicked, this);&#xA;&#x9;&#x9;}" startPosition="1833" length="102">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="((NewContactDialogListener) ls.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.onNewContactDialogClose(okClicked, this);" startPosition="1838" length="93">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="((NewContactDialogListener) ls.nextElement())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.onNewContactDialogClose(okClicked, this)" startPosition="1838" length="92">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="okClicked" startPosition="1914" length="9" fullyQualifiedName="okClicked" identifier="okClicked"/>
                  <arguments xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="1925" length="4" resolvedType="//@compilationUnits.25/@types.0"/>
                  <expression xsi:type="JavaAST:ParenthesizedExpression" lexicalForm="((NewContactDialogListener) ls.nextElement())" startPosition="1838" length="45" resolvedType="//@compilationUnits.19/@types.0">
                    <expression xsi:type="JavaAST:CastExpression" lexicalForm="(NewContactDialogListener) ls.nextElement()" startPosition="1839" length="43" resolvedType="//@compilationUnits.19/@types.0">
                      <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.nextElement()" startPosition="1866" length="16">
                        <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="1866" length="2" fullyQualifiedName="ls" identifier="ls"/>
                        <name lexicalForm="nextElement" startPosition="1869" length="11" fullyQualifiedName="nextElement" identifier="nextElement"/>
                      </expression>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="NewContactDialogListener" startPosition="1840" length="24" resolvedType="//@compilationUnits.19/@types.0">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="NewContactDialogListener" startPosition="1840" length="24" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="NewContactDialogListener" identifier="NewContactDialogListener"/>
                      </type>
                    </expression>
                  </expression>
                  <name lexicalForm="onNewContactDialogClose" startPosition="1890" length="23" fullyQualifiedName="onNewContactDialogClose" identifier="onNewContactDialogClose"/>
                </expression>
              </statements>
            </body>
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="ls.hasMoreElements()" startPosition="1810" length="20">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="ls" startPosition="1810" length="2" fullyQualifiedName="ls" identifier="ls"/>
              <name lexicalForm="hasMoreElements" startPosition="1813" length="15" fullyQualifiedName="hasMoreElements" identifier="hasMoreElements"/>
            </expression>
            <initializers xsi:type="JavaAST:VariableDeclarationExpression" lexicalForm="java.util.Enumeration ls = getListeners()" startPosition="1767" length="41">
              <fragments lexicalForm="ls = getListeners()" startPosition="1789" length="19">
                <initializer xsi:type="JavaAST:MethodInvocation" lexicalForm="getListeners()" startPosition="1794" length="14">
                  <name lexicalForm="getListeners" startPosition="1794" length="12" fullyQualifiedName="getListeners" identifier="getListeners"/>
                </initializer>
                <name lexicalForm="ls" startPosition="1789" length="2" fullyQualifiedName="ls" identifier="ls" declaration="true"/>
              </fragments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="1767" length="21">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="1767" length="21" fullyQualifiedName="java.util.Enumeration">
                  <name lexicalForm="Enumeration" startPosition="1777" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="1767" length="9" fullyQualifiedName="java.util">
                    <name lexicalForm="util" startPosition="1772" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="1767" length="4" fullyQualifiedName="java" identifier="java"/>
                  </qualifier>
                </name>
              </type>
            </initializers>
          </statements>
        </body>
        <name lexicalForm="notifyListeners" startPosition="1723" length="15" fullyQualifiedName="notifyListeners" identifier="notifyListeners" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1718" length="4" code="void"/>
        <parameters lexicalForm="boolean okClicked" startPosition="1739" length="17">
          <name lexicalForm="okClicked" startPosition="1747" length="9" fullyQualifiedName="okClicked" identifier="okClicked" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="1739" length="7" code="boolean"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="private void initialize() {&#xA;&#x9;&#x9;shell = new Shell(InstantMessagingClient.getInstance().getShell(),&#xA;&#x9;&#x9;&#x9;&#x9;SWT.RESIZE);&#xA;&#x9;&#x9;dlgPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;btnPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;okBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;cancelBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;network = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;networkField = new Combo(dlgPanel, SWT.DROP_DOWN | SWT.READ_ONLY);&#xA;&#x9;&#x9;uid = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;uidField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;name = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;nameField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;password = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;passwordField = new Text(dlgPanel, SWT.SINGLE | SWT.PASSWORD&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.BORDER);&#xA;&#x9;&#x9;shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;cancelBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;okBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onOk();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;shell.setText(&quot;Add new contact&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;shell.setDefaultButton(okBtn);&#xA;&#x9;&#x9;FormData dpfd = new FormData();&#xA;&#x9;&#x9;dpfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;dpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;dpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;dpfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;dlgPanel.setLayoutData(dpfd);&#xA;&#x9;&#x9;dlgPanel.setLayout(new GridLayout(2, false));&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;okBtn.setText(&quot;OK&quot;);&#xA;&#x9;&#x9;cancelBtn.setText(&quot;Cancel&quot;);&#xA;&#x9;&#x9;uid.setText(&quot;User ID&quot;);&#xA;&#x9;&#x9;name.setText(&quot;Name&quot;);&#xA;&#x9;&#x9;network.setText(&quot;Network&quot;);&#xA;&#x9;&#x9;password.setText(&quot;Password&quot;);&#xA;&#x9;&#x9;GridData fgd = new GridData();&#xA;&#x9;&#x9;fgd.horizontalAlignment = SWT.FILL;&#xA;&#x9;&#x9;fgd.grabExcessHorizontalSpace = true;&#xA;&#x9;&#x9;fgd.heightHint = Math.round(uidField.getLineHeight() * (float) 1.1);&#xA;&#x9;&#x9;uidField.setLayoutData(fgd);&#xA;&#x9;&#x9;nameField.setLayoutData(fgd);&#xA;&#x9;&#x9;networkField.setLayoutData(fgd);&#xA;&#x9;&#x9;passwordField.setLayoutData(fgd);&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.open();&#xA;&#x9;&#x9;shell.traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;}" startPosition="1941" length="2419">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="1941" length="7" private="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;shell = new Shell(InstantMessagingClient.getInstance().getShell(),&#xA;&#x9;&#x9;&#x9;&#x9;SWT.RESIZE);&#xA;&#x9;&#x9;dlgPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;btnPanel = new Composite(getShell(), SWT.NONE);&#xA;&#x9;&#x9;okBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;cancelBtn = new Button(btnPanel, SWT.PUSH);&#xA;&#x9;&#x9;network = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;networkField = new Combo(dlgPanel, SWT.DROP_DOWN | SWT.READ_ONLY);&#xA;&#x9;&#x9;uid = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;uidField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;name = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;nameField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER);&#xA;&#x9;&#x9;password = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);&#xA;&#x9;&#x9;passwordField = new Text(dlgPanel, SWT.SINGLE | SWT.PASSWORD&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.BORDER);&#xA;&#x9;&#x9;shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;cancelBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;okBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onOk();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;shell.setText(&quot;Add new contact&quot;);&#xA;&#x9;&#x9;shell.setLayout(new FormLayout());&#xA;&#x9;&#x9;shell.setDefaultButton(okBtn);&#xA;&#x9;&#x9;FormData dpfd = new FormData();&#xA;&#x9;&#x9;dpfd.top = new FormAttachment(0, 5);&#xA;&#x9;&#x9;dpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;dpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;dpfd.bottom = new FormAttachment(btnPanel, -5);&#xA;&#x9;&#x9;dlgPanel.setLayoutData(dpfd);&#xA;&#x9;&#x9;dlgPanel.setLayout(new GridLayout(2, false));&#xA;&#x9;&#x9;FormData bpfd = new FormData();&#xA;&#x9;&#x9;bpfd.left = new FormAttachment(0, 5);&#xA;&#x9;&#x9;bpfd.right = new FormAttachment(100, -5);&#xA;&#x9;&#x9;bpfd.bottom = new FormAttachment(100, -5);&#xA;&#x9;&#x9;btnPanel.setLayoutData(bpfd);&#xA;&#x9;&#x9;btnPanel.setLayout(new FillLayout());&#xA;&#x9;&#x9;okBtn.setText(&quot;OK&quot;);&#xA;&#x9;&#x9;cancelBtn.setText(&quot;Cancel&quot;);&#xA;&#x9;&#x9;uid.setText(&quot;User ID&quot;);&#xA;&#x9;&#x9;name.setText(&quot;Name&quot;);&#xA;&#x9;&#x9;network.setText(&quot;Network&quot;);&#xA;&#x9;&#x9;password.setText(&quot;Password&quot;);&#xA;&#x9;&#x9;GridData fgd = new GridData();&#xA;&#x9;&#x9;fgd.horizontalAlignment = SWT.FILL;&#xA;&#x9;&#x9;fgd.grabExcessHorizontalSpace = true;&#xA;&#x9;&#x9;fgd.heightHint = Math.round(uidField.getLineHeight() * (float) 1.1);&#xA;&#x9;&#x9;uidField.setLayoutData(fgd);&#xA;&#x9;&#x9;nameField.setLayoutData(fgd);&#xA;&#x9;&#x9;networkField.setLayoutData(fgd);&#xA;&#x9;&#x9;passwordField.setLayoutData(fgd);&#xA;&#x9;&#x9;shell.pack();&#xA;&#x9;&#x9;shell.open();&#xA;&#x9;&#x9;shell.traverse(SWT.TRAVERSE_TAB_NEXT);&#xA;&#x9;}" startPosition="1967" length="2393">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell = new Shell(InstantMessagingClient.getInstance().getShell(),&#xA;&#x9;&#x9;&#x9;&#x9;SWT.RESIZE);" startPosition="1971" length="83">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="shell = new Shell(InstantMessagingClient.getInstance().getShell(),&#xA;&#x9;&#x9;&#x9;&#x9;SWT.RESIZE)" startPosition="1971" length="82" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="1971" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Shell(InstantMessagingClient.getInstance().getShell(),&#xA;&#x9;&#x9;&#x9;&#x9;SWT.RESIZE)" startPosition="1979" length="74">
                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getShell()" startPosition="1989" length="47">
                  <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance()" startPosition="1989" length="36" resolvedType="//@compilationUnits.2/@types.0">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="1989" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                    <name lexicalForm="getInstance" startPosition="2012" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                  </expression>
                  <name lexicalForm="getShell" startPosition="2026" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                </arguments>
                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.RESIZE" startPosition="2042" length="10" fullyQualifiedName="SWT.RESIZE">
                  <name lexicalForm="RESIZE" startPosition="2046" length="6" fullyQualifiedName="RESIZE" identifier="RESIZE"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2042" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Shell" startPosition="1983" length="5">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Shell" startPosition="1983" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="dlgPanel = new Composite(getShell(), SWT.NONE);" startPosition="2057" length="47">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="dlgPanel = new Composite(getShell(), SWT.NONE)" startPosition="2057" length="46" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="2057" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Composite(getShell(), SWT.NONE)" startPosition="2068" length="35">
                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="2082" length="10">
                  <name lexicalForm="getShell" startPosition="2082" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                </arguments>
                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.NONE" startPosition="2094" length="8" fullyQualifiedName="SWT.NONE">
                  <name lexicalForm="NONE" startPosition="2098" length="4" fullyQualifiedName="NONE" identifier="NONE"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2094" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Composite" startPosition="2072" length="9">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Composite" startPosition="2072" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="btnPanel = new Composite(getShell(), SWT.NONE);" startPosition="2107" length="47">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="btnPanel = new Composite(getShell(), SWT.NONE)" startPosition="2107" length="46" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="2107" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Composite(getShell(), SWT.NONE)" startPosition="2118" length="35">
                <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="2132" length="10">
                  <name lexicalForm="getShell" startPosition="2132" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                </arguments>
                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.NONE" startPosition="2144" length="8" fullyQualifiedName="SWT.NONE">
                  <name lexicalForm="NONE" startPosition="2148" length="4" fullyQualifiedName="NONE" identifier="NONE"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2144" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Composite" startPosition="2122" length="9">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Composite" startPosition="2122" length="9" fullyQualifiedName="Composite" identifier="Composite"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="okBtn = new Button(btnPanel, SWT.PUSH);" startPosition="2157" length="39">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="okBtn = new Button(btnPanel, SWT.PUSH)" startPosition="2157" length="38" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="okBtn" startPosition="2157" length="5" fullyQualifiedName="okBtn" identifier="okBtn"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Button(btnPanel, SWT.PUSH)" startPosition="2165" length="30">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="2176" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.PUSH" startPosition="2186" length="8" fullyQualifiedName="SWT.PUSH">
                  <name lexicalForm="PUSH" startPosition="2190" length="4" fullyQualifiedName="PUSH" identifier="PUSH"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2186" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Button" startPosition="2169" length="6">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Button" startPosition="2169" length="6" fullyQualifiedName="Button" identifier="Button"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="cancelBtn = new Button(btnPanel, SWT.PUSH);" startPosition="2199" length="43">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="cancelBtn = new Button(btnPanel, SWT.PUSH)" startPosition="2199" length="42" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="cancelBtn" startPosition="2199" length="9" fullyQualifiedName="cancelBtn" identifier="cancelBtn"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Button(btnPanel, SWT.PUSH)" startPosition="2211" length="30">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="2222" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
                <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.PUSH" startPosition="2232" length="8" fullyQualifiedName="SWT.PUSH">
                  <name lexicalForm="PUSH" startPosition="2236" length="4" fullyQualifiedName="PUSH" identifier="PUSH"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2232" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Button" startPosition="2215" length="6">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Button" startPosition="2215" length="6" fullyQualifiedName="Button" identifier="Button"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="network = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);" startPosition="2245" length="58">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="network = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT)" startPosition="2245" length="57" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="2245" length="7" fullyQualifiedName="network" identifier="network"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT)" startPosition="2255" length="47">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="2265" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.HORIZONTAL | SWT.RIGHT" startPosition="2275" length="26" operator="|">
                  <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.HORIZONTAL" startPosition="2275" length="14" fullyQualifiedName="SWT.HORIZONTAL">
                    <name lexicalForm="HORIZONTAL" startPosition="2279" length="10" fullyQualifiedName="HORIZONTAL" identifier="HORIZONTAL"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2275" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.RIGHT" startPosition="2292" length="9" fullyQualifiedName="SWT.RIGHT">
                    <name lexicalForm="RIGHT" startPosition="2296" length="5" fullyQualifiedName="RIGHT" identifier="RIGHT"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2292" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </rightOperand>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Label" startPosition="2259" length="5">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Label" startPosition="2259" length="5" fullyQualifiedName="Label" identifier="Label"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="networkField = new Combo(dlgPanel, SWT.DROP_DOWN | SWT.READ_ONLY);" startPosition="2306" length="66">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="networkField = new Combo(dlgPanel, SWT.DROP_DOWN | SWT.READ_ONLY)" startPosition="2306" length="65" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="networkField" startPosition="2306" length="12" fullyQualifiedName="networkField" identifier="networkField"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Combo(dlgPanel, SWT.DROP_DOWN | SWT.READ_ONLY)" startPosition="2321" length="50">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="2331" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.DROP_DOWN | SWT.READ_ONLY" startPosition="2341" length="29" operator="|">
                  <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.DROP_DOWN" startPosition="2341" length="13" fullyQualifiedName="SWT.DROP_DOWN">
                    <name lexicalForm="DROP_DOWN" startPosition="2345" length="9" fullyQualifiedName="DROP_DOWN" identifier="DROP_DOWN"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2341" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.READ_ONLY" startPosition="2357" length="13" fullyQualifiedName="SWT.READ_ONLY">
                    <name lexicalForm="READ_ONLY" startPosition="2361" length="9" fullyQualifiedName="READ_ONLY" identifier="READ_ONLY"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2357" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </rightOperand>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Combo" startPosition="2325" length="5">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Combo" startPosition="2325" length="5" fullyQualifiedName="Combo" identifier="Combo"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="uid = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);" startPosition="2375" length="54">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="uid = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT)" startPosition="2375" length="53" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="2375" length="3" fullyQualifiedName="uid" identifier="uid"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT)" startPosition="2381" length="47">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="2391" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.HORIZONTAL | SWT.RIGHT" startPosition="2401" length="26" operator="|">
                  <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.HORIZONTAL" startPosition="2401" length="14" fullyQualifiedName="SWT.HORIZONTAL">
                    <name lexicalForm="HORIZONTAL" startPosition="2405" length="10" fullyQualifiedName="HORIZONTAL" identifier="HORIZONTAL"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2401" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.RIGHT" startPosition="2418" length="9" fullyQualifiedName="SWT.RIGHT">
                    <name lexicalForm="RIGHT" startPosition="2422" length="5" fullyQualifiedName="RIGHT" identifier="RIGHT"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2418" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </rightOperand>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Label" startPosition="2385" length="5">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Label" startPosition="2385" length="5" fullyQualifiedName="Label" identifier="Label"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="uidField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER);" startPosition="2432" length="55">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="uidField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER)" startPosition="2432" length="54" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="uidField" startPosition="2432" length="8" fullyQualifiedName="uidField" identifier="uidField"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Text(dlgPanel, SWT.SINGLE | SWT.BORDER)" startPosition="2443" length="43">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="2452" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.SINGLE | SWT.BORDER" startPosition="2462" length="23" operator="|">
                  <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.SINGLE" startPosition="2462" length="10" fullyQualifiedName="SWT.SINGLE">
                    <name lexicalForm="SINGLE" startPosition="2466" length="6" fullyQualifiedName="SINGLE" identifier="SINGLE"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2462" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.BORDER" startPosition="2475" length="10" fullyQualifiedName="SWT.BORDER">
                    <name lexicalForm="BORDER" startPosition="2479" length="6" fullyQualifiedName="BORDER" identifier="BORDER"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2475" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </rightOperand>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Text" startPosition="2447" length="4">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Text" startPosition="2447" length="4" fullyQualifiedName="Text" identifier="Text"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="name = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);" startPosition="2490" length="55">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="name = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT)" startPosition="2490" length="54" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="2490" length="4" fullyQualifiedName="name" identifier="name"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT)" startPosition="2497" length="47">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="2507" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.HORIZONTAL | SWT.RIGHT" startPosition="2517" length="26" operator="|">
                  <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.HORIZONTAL" startPosition="2517" length="14" fullyQualifiedName="SWT.HORIZONTAL">
                    <name lexicalForm="HORIZONTAL" startPosition="2521" length="10" fullyQualifiedName="HORIZONTAL" identifier="HORIZONTAL"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2517" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.RIGHT" startPosition="2534" length="9" fullyQualifiedName="SWT.RIGHT">
                    <name lexicalForm="RIGHT" startPosition="2538" length="5" fullyQualifiedName="RIGHT" identifier="RIGHT"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2534" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </rightOperand>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Label" startPosition="2501" length="5">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Label" startPosition="2501" length="5" fullyQualifiedName="Label" identifier="Label"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="nameField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER);" startPosition="2548" length="56">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="nameField = new Text(dlgPanel, SWT.SINGLE | SWT.BORDER)" startPosition="2548" length="55" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="nameField" startPosition="2548" length="9" fullyQualifiedName="nameField" identifier="nameField"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Text(dlgPanel, SWT.SINGLE | SWT.BORDER)" startPosition="2560" length="43">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="2569" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.SINGLE | SWT.BORDER" startPosition="2579" length="23" operator="|">
                  <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.SINGLE" startPosition="2579" length="10" fullyQualifiedName="SWT.SINGLE">
                    <name lexicalForm="SINGLE" startPosition="2583" length="6" fullyQualifiedName="SINGLE" identifier="SINGLE"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2579" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.BORDER" startPosition="2592" length="10" fullyQualifiedName="SWT.BORDER">
                    <name lexicalForm="BORDER" startPosition="2596" length="6" fullyQualifiedName="BORDER" identifier="BORDER"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2592" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </rightOperand>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Text" startPosition="2564" length="4">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Text" startPosition="2564" length="4" fullyQualifiedName="Text" identifier="Text"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="password = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT);" startPosition="2607" length="59">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="password = new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT)" startPosition="2607" length="58" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="password" startPosition="2607" length="8" fullyQualifiedName="password" identifier="password"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Label(dlgPanel, SWT.HORIZONTAL | SWT.RIGHT)" startPosition="2618" length="47">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="2628" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.HORIZONTAL | SWT.RIGHT" startPosition="2638" length="26" operator="|">
                  <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.HORIZONTAL" startPosition="2638" length="14" fullyQualifiedName="SWT.HORIZONTAL">
                    <name lexicalForm="HORIZONTAL" startPosition="2642" length="10" fullyQualifiedName="HORIZONTAL" identifier="HORIZONTAL"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2638" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.RIGHT" startPosition="2655" length="9" fullyQualifiedName="SWT.RIGHT">
                    <name lexicalForm="RIGHT" startPosition="2659" length="5" fullyQualifiedName="RIGHT" identifier="RIGHT"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2655" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </rightOperand>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Label" startPosition="2622" length="5">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Label" startPosition="2622" length="5" fullyQualifiedName="Label" identifier="Label"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="passwordField = new Text(dlgPanel, SWT.SINGLE | SWT.PASSWORD&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.BORDER);" startPosition="2669" length="79">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="passwordField = new Text(dlgPanel, SWT.SINGLE | SWT.PASSWORD&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.BORDER)" startPosition="2669" length="78" operator="=">
              <leftHandSide xsi:type="JavaAST:SimpleName" lexicalForm="passwordField" startPosition="2669" length="13" fullyQualifiedName="passwordField" identifier="passwordField"/>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Text(dlgPanel, SWT.SINGLE | SWT.PASSWORD&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.BORDER)" startPosition="2685" length="62">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="2694" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="SWT.SINGLE | SWT.PASSWORD&#xA;&#x9;&#x9;&#x9;&#x9;| SWT.BORDER" startPosition="2704" length="42" operator="|">
                  <extendedOperands xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.BORDER" startPosition="2736" length="10" fullyQualifiedName="SWT.BORDER">
                    <name lexicalForm="BORDER" startPosition="2740" length="6" fullyQualifiedName="BORDER" identifier="BORDER"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2736" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </extendedOperands>
                  <leftOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.SINGLE" startPosition="2704" length="10" fullyQualifiedName="SWT.SINGLE">
                    <name lexicalForm="SINGLE" startPosition="2708" length="6" fullyQualifiedName="SINGLE" identifier="SINGLE"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2704" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.PASSWORD" startPosition="2717" length="12" fullyQualifiedName="SWT.PASSWORD">
                    <name lexicalForm="PASSWORD" startPosition="2721" length="8" fullyQualifiedName="PASSWORD" identifier="PASSWORD"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="2717" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
                  </rightOperand>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Text" startPosition="2689" length="4">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Text" startPosition="2689" length="4" fullyQualifiedName="Text" identifier="Text"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="2751" length="113">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.addShellListener(new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="2751" length="112">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new ShellAdapter() {&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2774" length="88">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2793" length="69">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void shellClosed(ShellEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;}" startPosition="2798" length="60">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2798" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;}" startPosition="2836" length="22">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="onCancel();" startPosition="2842" length="11">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="onCancel()" startPosition="2842" length="10">
                          <name lexicalForm="onCancel" startPosition="2842" length="8" fullyQualifiedName="onCancel" identifier="onCancel"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="shellClosed" startPosition="2810" length="11" fullyQualifiedName="shellClosed" identifier="shellClosed" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2805" length="4" code="void"/>
                    <parameters lexicalForm="ShellEvent e" startPosition="2822" length="12">
                      <name lexicalForm="e" startPosition="2833" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="ShellEvent" startPosition="2822" length="10">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="ShellEvent" startPosition="2822" length="10" fullyQualifiedName="ShellEvent" identifier="ShellEvent"/>
                      </type>
                    </parameters>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="ShellAdapter" startPosition="2778" length="12">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="ShellAdapter" startPosition="2778" length="12" fullyQualifiedName="ShellAdapter" identifier="ShellAdapter"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="2751" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="addShellListener" startPosition="2757" length="16" fullyQualifiedName="addShellListener" identifier="addShellListener"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="cancelBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="2867" length="156">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cancelBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="2867" length="155">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2898" length="123">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="2921" length="100">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}" startPosition="2926" length="91">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="2926" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;onCancel();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}" startPosition="2971" length="46">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="onCancel();" startPosition="2977" length="11">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="onCancel()" startPosition="2977" length="10">
                          <name lexicalForm="onCancel" startPosition="2977" length="8" fullyQualifiedName="onCancel" identifier="onCancel"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getShell().close();" startPosition="2993" length="19">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().close()" startPosition="2993" length="18">
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="2993" length="10">
                            <name lexicalForm="getShell" startPosition="2993" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                          </expression>
                          <name lexicalForm="close" startPosition="3004" length="5" fullyQualifiedName="close" identifier="close"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="widgetSelected" startPosition="2938" length="14" fullyQualifiedName="widgetSelected" identifier="widgetSelected" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="2933" length="4" code="void"/>
                    <parameters lexicalForm="SelectionEvent e" startPosition="2953" length="16">
                      <name lexicalForm="e" startPosition="2968" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionEvent" startPosition="2953" length="14">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionEvent" startPosition="2953" length="14" fullyQualifiedName="SelectionEvent" identifier="SelectionEvent"/>
                      </type>
                    </parameters>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionAdapter" startPosition="2902" length="16">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionAdapter" startPosition="2902" length="16" fullyQualifiedName="SelectionAdapter" identifier="SelectionAdapter"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="cancelBtn" startPosition="2867" length="9" fullyQualifiedName="cancelBtn" identifier="cancelBtn"/>
              <name lexicalForm="addSelectionListener" startPosition="2877" length="20" fullyQualifiedName="addSelectionListener" identifier="addSelectionListener"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="okBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onOk();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});" startPosition="3026" length="148">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="okBtn.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onOk();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;})" startPosition="3026" length="147">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new SelectionAdapter() {&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onOk();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="3053" length="119">
                <anonymousClassDeclaration lexicalForm="{&#xA;&#x9;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onOk();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" startPosition="3076" length="96">
                  <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;onOk();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}" startPosition="3081" length="87">
                    <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="3081" length="6" public="true"/>
                    <body lexicalForm="{&#xA;&#x9;&#x9;&#x9;&#x9;onOk();&#xA;&#x9;&#x9;&#x9;&#x9;getShell().close();&#xA;&#x9;&#x9;&#x9;}" startPosition="3126" length="42">
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="onOk();" startPosition="3132" length="7">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="onOk()" startPosition="3132" length="6">
                          <name lexicalForm="onOk" startPosition="3132" length="4" fullyQualifiedName="onOk" identifier="onOk"/>
                        </expression>
                      </statements>
                      <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="getShell().close();" startPosition="3144" length="19">
                        <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell().close()" startPosition="3144" length="18">
                          <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="getShell()" startPosition="3144" length="10">
                            <name lexicalForm="getShell" startPosition="3144" length="8" fullyQualifiedName="getShell" identifier="getShell"/>
                          </expression>
                          <name lexicalForm="close" startPosition="3155" length="5" fullyQualifiedName="close" identifier="close"/>
                        </expression>
                      </statements>
                    </body>
                    <name lexicalForm="widgetSelected" startPosition="3093" length="14" fullyQualifiedName="widgetSelected" identifier="widgetSelected" declaration="true"/>
                    <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="3088" length="4" code="void"/>
                    <parameters lexicalForm="SelectionEvent e" startPosition="3108" length="16">
                      <name lexicalForm="e" startPosition="3123" length="1" fullyQualifiedName="e" identifier="e" declaration="true"/>
                      <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionEvent" startPosition="3108" length="14">
                        <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionEvent" startPosition="3108" length="14" fullyQualifiedName="SelectionEvent" identifier="SelectionEvent"/>
                      </type>
                    </parameters>
                  </bodyDeclarations>
                </anonymousClassDeclaration>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="SelectionAdapter" startPosition="3057" length="16">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="SelectionAdapter" startPosition="3057" length="16" fullyQualifiedName="SelectionAdapter" identifier="SelectionAdapter"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="okBtn" startPosition="3026" length="5" fullyQualifiedName="okBtn" identifier="okBtn"/>
              <name lexicalForm="addSelectionListener" startPosition="3032" length="20" fullyQualifiedName="addSelectionListener" identifier="addSelectionListener"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.setText(&quot;Add new contact&quot;);" startPosition="3177" length="33">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.setText(&quot;Add new contact&quot;)" startPosition="3177" length="32">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Add new contact&quot;" startPosition="3191" length="17" escapedValue="&quot;Add new contact&quot;" literalValue="Add new contact"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="3177" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="setText" startPosition="3183" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.setLayout(new FormLayout());" startPosition="3213" length="34">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.setLayout(new FormLayout())" startPosition="3213" length="33">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormLayout()" startPosition="3229" length="16">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormLayout" startPosition="3233" length="10">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormLayout" startPosition="3233" length="10" fullyQualifiedName="FormLayout" identifier="FormLayout"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="3213" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="setLayout" startPosition="3219" length="9" fullyQualifiedName="setLayout" identifier="setLayout"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.setDefaultButton(okBtn);" startPosition="3250" length="30">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.setDefaultButton(okBtn)" startPosition="3250" length="29">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="okBtn" startPosition="3273" length="5" fullyQualifiedName="okBtn" identifier="okBtn"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="3250" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="setDefaultButton" startPosition="3256" length="16" fullyQualifiedName="setDefaultButton" identifier="setDefaultButton"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="FormData dpfd = new FormData();" startPosition="3283" length="31">
            <fragments lexicalForm="dpfd = new FormData()" startPosition="3292" length="21">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormData()" startPosition="3299" length="14">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="3303" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="3303" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
                </type>
              </initializer>
              <name lexicalForm="dpfd" startPosition="3292" length="4" fullyQualifiedName="dpfd" identifier="dpfd" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="3283" length="8">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="3283" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="dpfd.top = new FormAttachment(0, 5);" startPosition="3317" length="36">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="dpfd.top = new FormAttachment(0, 5)" startPosition="3317" length="35" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="dpfd.top" startPosition="3317" length="8" fullyQualifiedName="dpfd.top">
                <name lexicalForm="top" startPosition="3322" length="3" fullyQualifiedName="top" identifier="top"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="dpfd" startPosition="3317" length="4" fullyQualifiedName="dpfd" identifier="dpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="3328" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3347" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3350" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3332" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3332" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="dpfd.left = new FormAttachment(0, 5);" startPosition="3356" length="37">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="dpfd.left = new FormAttachment(0, 5)" startPosition="3356" length="36" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="dpfd.left" startPosition="3356" length="9" fullyQualifiedName="dpfd.left">
                <name lexicalForm="left" startPosition="3361" length="4" fullyQualifiedName="left" identifier="left"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="dpfd" startPosition="3356" length="4" fullyQualifiedName="dpfd" identifier="dpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="3368" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3387" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3390" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3372" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3372" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="dpfd.right = new FormAttachment(100, -5);" startPosition="3396" length="41">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="dpfd.right = new FormAttachment(100, -5)" startPosition="3396" length="40" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="dpfd.right" startPosition="3396" length="10" fullyQualifiedName="dpfd.right">
                <name lexicalForm="right" startPosition="3401" length="5" fullyQualifiedName="right" identifier="right"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="dpfd" startPosition="3396" length="4" fullyQualifiedName="dpfd" identifier="dpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="3409" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="3428" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="3433" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3434" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3413" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3413" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="dpfd.bottom = new FormAttachment(btnPanel, -5);" startPosition="3440" length="47">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="dpfd.bottom = new FormAttachment(btnPanel, -5)" startPosition="3440" length="46" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="dpfd.bottom" startPosition="3440" length="11" fullyQualifiedName="dpfd.bottom">
                <name lexicalForm="bottom" startPosition="3445" length="6" fullyQualifiedName="bottom" identifier="bottom"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="dpfd" startPosition="3440" length="4" fullyQualifiedName="dpfd" identifier="dpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(btnPanel, -5)" startPosition="3454" length="32">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="3473" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="3483" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3484" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3458" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3458" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="dlgPanel.setLayoutData(dpfd);" startPosition="3490" length="29">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="dlgPanel.setLayoutData(dpfd)" startPosition="3490" length="28">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="dpfd" startPosition="3513" length="4" fullyQualifiedName="dpfd" identifier="dpfd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="3490" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
              <name lexicalForm="setLayoutData" startPosition="3499" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="dlgPanel.setLayout(new GridLayout(2, false));" startPosition="3522" length="45">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="dlgPanel.setLayout(new GridLayout(2, false))" startPosition="3522" length="44">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new GridLayout(2, false)" startPosition="3541" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="2" startPosition="3556" length="1" token="2"/>
                <arguments xsi:type="JavaAST:BooleanLiteral" lexicalForm="false" startPosition="3559" length="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="GridLayout" startPosition="3545" length="10">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="GridLayout" startPosition="3545" length="10" fullyQualifiedName="GridLayout" identifier="GridLayout"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="dlgPanel" startPosition="3522" length="8" fullyQualifiedName="dlgPanel" identifier="dlgPanel"/>
              <name lexicalForm="setLayout" startPosition="3531" length="9" fullyQualifiedName="setLayout" identifier="setLayout"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="FormData bpfd = new FormData();" startPosition="3570" length="31">
            <fragments lexicalForm="bpfd = new FormData()" startPosition="3579" length="21">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormData()" startPosition="3586" length="14">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="3590" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="3590" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
                </type>
              </initializer>
              <name lexicalForm="bpfd" startPosition="3579" length="4" fullyQualifiedName="bpfd" identifier="bpfd" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="FormData" startPosition="3570" length="8">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="FormData" startPosition="3570" length="8" fullyQualifiedName="FormData" identifier="FormData"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="bpfd.left = new FormAttachment(0, 5);" startPosition="3604" length="37">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="bpfd.left = new FormAttachment(0, 5)" startPosition="3604" length="36" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="bpfd.left" startPosition="3604" length="9" fullyQualifiedName="bpfd.left">
                <name lexicalForm="left" startPosition="3609" length="4" fullyQualifiedName="left" identifier="left"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="3604" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(0, 5)" startPosition="3616" length="24">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="0" startPosition="3635" length="1" token="0"/>
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3638" length="1" token="5"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3620" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3620" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="bpfd.right = new FormAttachment(100, -5);" startPosition="3644" length="41">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="bpfd.right = new FormAttachment(100, -5)" startPosition="3644" length="40" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="bpfd.right" startPosition="3644" length="10" fullyQualifiedName="bpfd.right">
                <name lexicalForm="right" startPosition="3649" length="5" fullyQualifiedName="right" identifier="right"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="3644" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="3657" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="3676" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="3681" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3682" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3661" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3661" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="bpfd.bottom = new FormAttachment(100, -5);" startPosition="3688" length="42">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="bpfd.bottom = new FormAttachment(100, -5)" startPosition="3688" length="41" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="bpfd.bottom" startPosition="3688" length="11" fullyQualifiedName="bpfd.bottom">
                <name lexicalForm="bottom" startPosition="3693" length="6" fullyQualifiedName="bottom" identifier="bottom"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="3688" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FormAttachment(100, -5)" startPosition="3702" length="27">
                <arguments xsi:type="JavaAST:NumberLiteral" lexicalForm="100" startPosition="3721" length="3" token="100"/>
                <arguments xsi:type="JavaAST:PrefixExpression" lexicalForm="-5" startPosition="3726" length="2">
                  <operand xsi:type="JavaAST:NumberLiteral" lexicalForm="5" startPosition="3727" length="1" token="5"/>
                </arguments>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FormAttachment" startPosition="3706" length="14">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FormAttachment" startPosition="3706" length="14" fullyQualifiedName="FormAttachment" identifier="FormAttachment"/>
                </type>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="btnPanel.setLayoutData(bpfd);" startPosition="3733" length="29">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="btnPanel.setLayoutData(bpfd)" startPosition="3733" length="28">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="bpfd" startPosition="3756" length="4" fullyQualifiedName="bpfd" identifier="bpfd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="3733" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
              <name lexicalForm="setLayoutData" startPosition="3742" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="btnPanel.setLayout(new FillLayout());" startPosition="3765" length="37">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="btnPanel.setLayout(new FillLayout())" startPosition="3765" length="36">
              <arguments xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new FillLayout()" startPosition="3784" length="16">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="FillLayout" startPosition="3788" length="10">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="FillLayout" startPosition="3788" length="10" fullyQualifiedName="FillLayout" identifier="FillLayout"/>
                </type>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="btnPanel" startPosition="3765" length="8" fullyQualifiedName="btnPanel" identifier="btnPanel"/>
              <name lexicalForm="setLayout" startPosition="3774" length="9" fullyQualifiedName="setLayout" identifier="setLayout"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="okBtn.setText(&quot;OK&quot;);" startPosition="3805" length="20">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="okBtn.setText(&quot;OK&quot;)" startPosition="3805" length="19">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;OK&quot;" startPosition="3819" length="4" escapedValue="&quot;OK&quot;" literalValue="OK"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="okBtn" startPosition="3805" length="5" fullyQualifiedName="okBtn" identifier="okBtn"/>
              <name lexicalForm="setText" startPosition="3811" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="cancelBtn.setText(&quot;Cancel&quot;);" startPosition="3828" length="28">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="cancelBtn.setText(&quot;Cancel&quot;)" startPosition="3828" length="27">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Cancel&quot;" startPosition="3846" length="8" escapedValue="&quot;Cancel&quot;" literalValue="Cancel"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="cancelBtn" startPosition="3828" length="9" fullyQualifiedName="cancelBtn" identifier="cancelBtn"/>
              <name lexicalForm="setText" startPosition="3838" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="uid.setText(&quot;User ID&quot;);" startPosition="3859" length="23">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="uid.setText(&quot;User ID&quot;)" startPosition="3859" length="22">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;User ID&quot;" startPosition="3871" length="9" escapedValue="&quot;User ID&quot;" literalValue="User ID"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="uid" startPosition="3859" length="3" fullyQualifiedName="uid" identifier="uid"/>
              <name lexicalForm="setText" startPosition="3863" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="name.setText(&quot;Name&quot;);" startPosition="3885" length="21">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="name.setText(&quot;Name&quot;)" startPosition="3885" length="20">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Name&quot;" startPosition="3898" length="6" escapedValue="&quot;Name&quot;" literalValue="Name"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="name" startPosition="3885" length="4" fullyQualifiedName="name" identifier="name"/>
              <name lexicalForm="setText" startPosition="3890" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="network.setText(&quot;Network&quot;);" startPosition="3909" length="27">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="network.setText(&quot;Network&quot;)" startPosition="3909" length="26">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Network&quot;" startPosition="3925" length="9" escapedValue="&quot;Network&quot;" literalValue="Network"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="network" startPosition="3909" length="7" fullyQualifiedName="network" identifier="network"/>
              <name lexicalForm="setText" startPosition="3917" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="password.setText(&quot;Password&quot;);" startPosition="3939" length="29">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="password.setText(&quot;Password&quot;)" startPosition="3939" length="28">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;Password&quot;" startPosition="3956" length="10" escapedValue="&quot;Password&quot;" literalValue="Password"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="password" startPosition="3939" length="8" fullyQualifiedName="password" identifier="password"/>
              <name lexicalForm="setText" startPosition="3948" length="7" fullyQualifiedName="setText" identifier="setText"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="GridData fgd = new GridData();" startPosition="3971" length="30">
            <fragments lexicalForm="fgd = new GridData()" startPosition="3980" length="20">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new GridData()" startPosition="3986" length="14">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="GridData" startPosition="3990" length="8">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="GridData" startPosition="3990" length="8" fullyQualifiedName="GridData" identifier="GridData"/>
                </type>
              </initializer>
              <name lexicalForm="fgd" startPosition="3980" length="3" fullyQualifiedName="fgd" identifier="fgd" declaration="true"/>
            </fragments>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="GridData" startPosition="3971" length="8">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="GridData" startPosition="3971" length="8" fullyQualifiedName="GridData" identifier="GridData"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="fgd.horizontalAlignment = SWT.FILL;" startPosition="4004" length="35">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="fgd.horizontalAlignment = SWT.FILL" startPosition="4004" length="34" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="fgd.horizontalAlignment" startPosition="4004" length="23" fullyQualifiedName="fgd.horizontalAlignment">
                <name lexicalForm="horizontalAlignment" startPosition="4008" length="19" fullyQualifiedName="horizontalAlignment" identifier="horizontalAlignment"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="fgd" startPosition="4004" length="3" fullyQualifiedName="fgd" identifier="fgd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.FILL" startPosition="4030" length="8" fullyQualifiedName="SWT.FILL">
                <name lexicalForm="FILL" startPosition="4034" length="4" fullyQualifiedName="FILL" identifier="FILL"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="4030" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="fgd.grabExcessHorizontalSpace = true;" startPosition="4042" length="37">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="fgd.grabExcessHorizontalSpace = true" startPosition="4042" length="36" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="fgd.grabExcessHorizontalSpace" startPosition="4042" length="29" fullyQualifiedName="fgd.grabExcessHorizontalSpace">
                <name lexicalForm="grabExcessHorizontalSpace" startPosition="4046" length="25" fullyQualifiedName="grabExcessHorizontalSpace" identifier="grabExcessHorizontalSpace"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="fgd" startPosition="4042" length="3" fullyQualifiedName="fgd" identifier="fgd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:BooleanLiteral" lexicalForm="true" startPosition="4074" length="4" booleanValue="true"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="fgd.heightHint = Math.round(uidField.getLineHeight() * (float) 1.1);" startPosition="4082" length="68">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="fgd.heightHint = Math.round(uidField.getLineHeight() * (float) 1.1)" startPosition="4082" length="67" operator="=">
              <leftHandSide xsi:type="JavaAST:QualifiedName" lexicalForm="fgd.heightHint" startPosition="4082" length="14" fullyQualifiedName="fgd.heightHint">
                <name lexicalForm="heightHint" startPosition="4086" length="10" fullyQualifiedName="heightHint" identifier="heightHint"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="fgd" startPosition="4082" length="3" fullyQualifiedName="fgd" identifier="fgd"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:MethodInvocation" lexicalForm="Math.round(uidField.getLineHeight() * (float) 1.1)" startPosition="4099" length="50">
                <arguments xsi:type="JavaAST:InfixExpression" lexicalForm="uidField.getLineHeight() * (float) 1.1" startPosition="4110" length="38" operator="*">
                  <leftOperand xsi:type="JavaAST:MethodInvocation" lexicalForm="uidField.getLineHeight()" startPosition="4110" length="24">
                    <expression xsi:type="JavaAST:SimpleName" lexicalForm="uidField" startPosition="4110" length="8" fullyQualifiedName="uidField" identifier="uidField"/>
                    <name lexicalForm="getLineHeight" startPosition="4119" length="13" fullyQualifiedName="getLineHeight" identifier="getLineHeight"/>
                  </leftOperand>
                  <rightOperand xsi:type="JavaAST:CastExpression" lexicalForm="(float) 1.1" startPosition="4137" length="11">
                    <expression xsi:type="JavaAST:NumberLiteral" lexicalForm="1.1" startPosition="4145" length="3" token="1.1"/>
                    <type xsi:type="JavaAST:PrimitiveType" lexicalForm="float" startPosition="4138" length="5" code="float"/>
                  </rightOperand>
                </arguments>
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="Math" startPosition="4099" length="4" fullyQualifiedName="Math" identifier="Math"/>
                <name lexicalForm="round" startPosition="4104" length="5" fullyQualifiedName="round" identifier="round"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="uidField.setLayoutData(fgd);" startPosition="4153" length="28">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="uidField.setLayoutData(fgd)" startPosition="4153" length="27">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="fgd" startPosition="4176" length="3" fullyQualifiedName="fgd" identifier="fgd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="uidField" startPosition="4153" length="8" fullyQualifiedName="uidField" identifier="uidField"/>
              <name lexicalForm="setLayoutData" startPosition="4162" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="nameField.setLayoutData(fgd);" startPosition="4184" length="29">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="nameField.setLayoutData(fgd)" startPosition="4184" length="28">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="fgd" startPosition="4208" length="3" fullyQualifiedName="fgd" identifier="fgd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="nameField" startPosition="4184" length="9" fullyQualifiedName="nameField" identifier="nameField"/>
              <name lexicalForm="setLayoutData" startPosition="4194" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="networkField.setLayoutData(fgd);" startPosition="4216" length="32">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="networkField.setLayoutData(fgd)" startPosition="4216" length="31">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="fgd" startPosition="4243" length="3" fullyQualifiedName="fgd" identifier="fgd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="networkField" startPosition="4216" length="12" fullyQualifiedName="networkField" identifier="networkField"/>
              <name lexicalForm="setLayoutData" startPosition="4229" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="passwordField.setLayoutData(fgd);" startPosition="4251" length="33">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="passwordField.setLayoutData(fgd)" startPosition="4251" length="32">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="fgd" startPosition="4279" length="3" fullyQualifiedName="fgd" identifier="fgd"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="passwordField" startPosition="4251" length="13" fullyQualifiedName="passwordField" identifier="passwordField"/>
              <name lexicalForm="setLayoutData" startPosition="4265" length="13" fullyQualifiedName="setLayoutData" identifier="setLayoutData"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.pack();" startPosition="4287" length="13">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.pack()" startPosition="4287" length="12">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="4287" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="pack" startPosition="4293" length="4" fullyQualifiedName="pack" identifier="pack"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.open();" startPosition="4303" length="13">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.open()" startPosition="4303" length="12">
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="4303" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="open" startPosition="4309" length="4" fullyQualifiedName="open" identifier="open"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="shell.traverse(SWT.TRAVERSE_TAB_NEXT);" startPosition="4319" length="38">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="shell.traverse(SWT.TRAVERSE_TAB_NEXT)" startPosition="4319" length="37">
              <arguments xsi:type="JavaAST:QualifiedName" lexicalForm="SWT.TRAVERSE_TAB_NEXT" startPosition="4334" length="21" fullyQualifiedName="SWT.TRAVERSE_TAB_NEXT">
                <name lexicalForm="TRAVERSE_TAB_NEXT" startPosition="4338" length="17" fullyQualifiedName="TRAVERSE_TAB_NEXT" identifier="TRAVERSE_TAB_NEXT"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="SWT" startPosition="4334" length="3" fullyQualifiedName="SWT" identifier="SWT"/>
              </arguments>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="4319" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="traverse" startPosition="4325" length="8" fullyQualifiedName="traverse" identifier="traverse"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="initialize" startPosition="1954" length="10" fullyQualifiedName="initialize" identifier="initialize" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="1949" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public org.eclipse.swt.widgets.Shell getShell() {&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}" startPosition="4363" length="68">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4363" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}" startPosition="4411" length="20">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return shell;" startPosition="4415" length="13">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="4422" length="5" fullyQualifiedName="shell" identifier="shell"/>
          </statements>
        </body>
        <name lexicalForm="getShell" startPosition="4400" length="8" fullyQualifiedName="getShell" identifier="getShell" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="4370" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="4370" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
            <name lexicalForm="Shell" startPosition="4394" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="4370" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="4386" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="4370" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="4382" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="4370" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="4374" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="4370" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setShell(org.eclipse.swt.widgets.Shell shell) {&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}" startPosition="4434" length="84">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4434" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}" startPosition="4492" length="26">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.shell = shell;" startPosition="4496" length="19">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.shell = shell" startPosition="4496" length="18" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.shell" startPosition="4496" length="10">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4496" length="4" resolvedType="//@compilationUnits.25/@types.0"/>
                <name lexicalForm="shell" startPosition="4501" length="5" fullyQualifiedName="shell" identifier="shell"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="4509" length="5" fullyQualifiedName="shell" identifier="shell"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setShell" startPosition="4446" length="8" fullyQualifiedName="setShell" identifier="setShell" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4441" length="4" code="void"/>
        <parameters lexicalForm="org.eclipse.swt.widgets.Shell shell" startPosition="4455" length="35">
          <name lexicalForm="shell" startPosition="4485" length="5" fullyQualifiedName="shell" identifier="shell" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="4455" length="29">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="4455" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
              <name lexicalForm="Shell" startPosition="4479" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="4455" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
                <name lexicalForm="widgets" startPosition="4471" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="4455" length="15" fullyQualifiedName="org.eclipse.swt">
                  <name lexicalForm="swt" startPosition="4467" length="3" fullyQualifiedName="swt" identifier="swt"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="4455" length="11" fullyQualifiedName="org.eclipse">
                    <name lexicalForm="eclipse" startPosition="4459" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="4455" length="3" fullyQualifiedName="org" identifier="org"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public java.util.Enumeration getListeners() {&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}" startPosition="4521" length="130">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4521" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());&#xA;&#x9;}" startPosition="4565" length="86">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator());" startPosition="4569" length="79">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new be.ac.vub.util.IteratorEnumerationAdapter(listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator())" startPosition="4576" length="71" resolvedType="//@compilationUnits.0/@types.0">
              <arguments xsi:type="JavaAST:MethodInvocation" lexicalForm="listener&#xA;&#x9;&#x9;&#x9;&#x9;.iterator()" startPosition="4622" length="24">
                <expression xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="4622" length="8" fullyQualifiedName="listener" identifier="listener"/>
                <name lexicalForm="iterator" startPosition="4636" length="8" fullyQualifiedName="iterator" identifier="iterator"/>
              </arguments>
              <type xsi:type="JavaAST:SimpleType" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="4580" length="41" resolvedType="//@compilationUnits.0/@types.0">
                <name xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util.IteratorEnumerationAdapter" startPosition="4580" length="41" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="be.ac.vub.util.IteratorEnumerationAdapter">
                  <name lexicalForm="IteratorEnumerationAdapter" startPosition="4595" length="26" resolvedType="//@compilationUnits.0/@types.0" fullyQualifiedName="IteratorEnumerationAdapter" identifier="IteratorEnumerationAdapter"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub.util" startPosition="4580" length="14" fullyQualifiedName="be.ac.vub.util">
                    <name lexicalForm="util" startPosition="4590" length="4" fullyQualifiedName="util" identifier="util"/>
                    <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac.vub" startPosition="4580" length="9" fullyQualifiedName="be.ac.vub">
                      <name lexicalForm="vub" startPosition="4586" length="3" fullyQualifiedName="vub" identifier="vub"/>
                      <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="be.ac" startPosition="4580" length="5" fullyQualifiedName="be.ac">
                        <name lexicalForm="ac" startPosition="4583" length="2" fullyQualifiedName="ac" identifier="ac"/>
                        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="be" startPosition="4580" length="2" fullyQualifiedName="be" identifier="be"/>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </name>
              </type>
            </expression>
          </statements>
        </body>
        <name lexicalForm="getListeners" startPosition="4550" length="12" fullyQualifiedName="getListeners" identifier="getListeners" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="java.util.Enumeration" startPosition="4528" length="21">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="java.util.Enumeration" startPosition="4528" length="21" fullyQualifiedName="java.util.Enumeration">
            <name lexicalForm="Enumeration" startPosition="4538" length="11" fullyQualifiedName="Enumeration" identifier="Enumeration"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.util" startPosition="4528" length="9" fullyQualifiedName="java.util">
              <name lexicalForm="util" startPosition="4533" length="4" fullyQualifiedName="util" identifier="util"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="4528" length="4" fullyQualifiedName="java" identifier="java"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void addListener(im.view.NewContactDialogListener listener) {&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="4654" length="150">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4654" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="4721" length="83">
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!this.listener.contains(listener)) {&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}" startPosition="4725" length="76">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!this.listener.contains(listener)" startPosition="4729" length="33" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="this.listener.contains(listener)" startPosition="4730" length="32">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="4753" length="8" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="listener" identifier="listener"/>
                <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.listener" startPosition="4730" length="13">
                  <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4730" length="4" resolvedType="//@compilationUnits.25/@types.0"/>
                  <name lexicalForm="listener" startPosition="4735" length="8" fullyQualifiedName="listener" identifier="listener"/>
                </expression>
                <name lexicalForm="contains" startPosition="4744" length="8" fullyQualifiedName="contains" identifier="contains"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;this.listener.add(listener);&#xA;&#x9;&#x9;}" startPosition="4764" length="37">
              <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.listener.add(listener);" startPosition="4769" length="28">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.listener.add(listener)" startPosition="4769" length="27">
                  <arguments xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="4787" length="8" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="listener" identifier="listener"/>
                  <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.listener" startPosition="4769" length="13">
                    <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4769" length="4" resolvedType="//@compilationUnits.25/@types.0"/>
                    <name lexicalForm="listener" startPosition="4774" length="8" fullyQualifiedName="listener" identifier="listener"/>
                  </expression>
                  <name lexicalForm="add" startPosition="4783" length="3" fullyQualifiedName="add" identifier="add"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="addListener" startPosition="4666" length="11" fullyQualifiedName="addListener" identifier="addListener" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4661" length="4" code="void"/>
        <parameters lexicalForm="im.view.NewContactDialogListener listener" startPosition="4678" length="41">
          <name lexicalForm="listener" startPosition="4711" length="8" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="listener" identifier="listener" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.NewContactDialogListener" startPosition="4678" length="32" resolvedType="//@compilationUnits.19/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialogListener" startPosition="4678" length="32" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="im.view.NewContactDialogListener">
              <name lexicalForm="NewContactDialogListener" startPosition="4686" length="24" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="NewContactDialogListener" identifier="NewContactDialogListener"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="4678" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="4681" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4678" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void removeListener(im.view.NewContactDialogListener listener) {&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}" startPosition="4807" length="108">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="4807" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.listener.remove(listener);&#xA;&#x9;}" startPosition="4877" length="38">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.listener.remove(listener);" startPosition="4881" length="31">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="this.listener.remove(listener)" startPosition="4881" length="30">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="listener" startPosition="4902" length="8" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="listener" identifier="listener"/>
              <expression xsi:type="JavaAST:FieldAccess" lexicalForm="this.listener" startPosition="4881" length="13">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="4881" length="4" resolvedType="//@compilationUnits.25/@types.0"/>
                <name lexicalForm="listener" startPosition="4886" length="8" fullyQualifiedName="listener" identifier="listener"/>
              </expression>
              <name lexicalForm="remove" startPosition="4895" length="6" fullyQualifiedName="remove" identifier="remove"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="removeListener" startPosition="4819" length="14" fullyQualifiedName="removeListener" identifier="removeListener" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="4814" length="4" code="void"/>
        <parameters lexicalForm="im.view.NewContactDialogListener listener" startPosition="4834" length="41">
          <name lexicalForm="listener" startPosition="4867" length="8" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="listener" identifier="listener" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="im.view.NewContactDialogListener" startPosition="4834" length="32" resolvedType="//@compilationUnits.19/@types.0">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialogListener" startPosition="4834" length="32" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="im.view.NewContactDialogListener">
              <name lexicalForm="NewContactDialogListener" startPosition="4842" length="24" resolvedType="//@compilationUnits.19/@types.0" fullyQualifiedName="NewContactDialogListener" identifier="NewContactDialogListener"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="4834" length="7" fullyQualifiedName="im.view">
                <name lexicalForm="view" startPosition="4837" length="4" fullyQualifiedName="view" identifier="view"/>
                <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="4834" length="2" fullyQualifiedName="im" identifier="im"/>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="SWTNewContactDialog" startPosition="237" length="19" resolvedType="//@compilationUnits.25/@types.0" fullyQualifiedName="SWTNewContactDialog" identifier="SWTNewContactDialog" declaration="true"/>
      <superInterfaceTypes xsi:type="JavaAST:SimpleType" lexicalForm="im.view.NewContactDialog" startPosition="268" length="24" resolvedType="//@compilationUnits.21/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialog" startPosition="268" length="24" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="im.view.NewContactDialog">
          <name lexicalForm="NewContactDialog" startPosition="276" length="16" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="NewContactDialog" identifier="NewContactDialog"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="268" length="7" fullyQualifiedName="im.view">
            <name lexicalForm="view" startPosition="271" length="4" fullyQualifiedName="view" identifier="view"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="268" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superInterfaceTypes>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package im.view.swt;&#xA;&#xA;import im.InstantMessagingClient;&#xA;&#xA;public class SWTViewFactory extends im.view.ViewFactory {&#xA;&#x9;public SWTViewFactory() throws java.lang.ClassNotFoundException {&#xA;&#x9;&#x9;Class.forName(&quot;org.eclipse.swt.SWT&quot;);&#xA;&#x9;&#x9;if (!InstantMessagingClient.getInstance().getRunning()) {&#xA;&#x9;&#x9;&#x9;throw new ClassNotFoundException(&quot;SWT app not running&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.ContactListView createContactListView() {&#xA;&#x9;&#x9;return new SWTContactListView();&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.ConversationView createConversationView() {&#xA;&#x9;&#x9;return new SWTConversationView();&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.NewContactDialog createNewContactDialog() {&#xA;&#x9;&#x9;return new SWTNewContactDialog();&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="649">
    <package lexicalForm="package im.view.swt;" length="20">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.swt" startPosition="8" length="11" fullyQualifiedName="im.view.swt">
        <name lexicalForm="swt" startPosition="16" length="3" fullyQualifiedName="swt" identifier="swt"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="8" length="7" fullyQualifiedName="im.view">
          <name lexicalForm="view" startPosition="11" length="4" fullyQualifiedName="view" identifier="view"/>
          <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="8" length="2" fullyQualifiedName="im" identifier="im"/>
        </qualifier>
      </name>
    </package>
    <imports lexicalForm="import im.InstantMessagingClient;" startPosition="22" length="33">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.InstantMessagingClient" startPosition="29" length="25" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="im.InstantMessagingClient">
        <name lexicalForm="InstantMessagingClient" startPosition="32" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
        <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="29" length="2" fullyQualifiedName="im" identifier="im"/>
      </name>
    </imports>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public class SWTViewFactory extends im.view.ViewFactory {&#xA;&#x9;public SWTViewFactory() throws java.lang.ClassNotFoundException {&#xA;&#x9;&#x9;Class.forName(&quot;org.eclipse.swt.SWT&quot;);&#xA;&#x9;&#x9;if (!InstantMessagingClient.getInstance().getRunning()) {&#xA;&#x9;&#x9;&#x9;throw new ClassNotFoundException(&quot;SWT app not running&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.ContactListView createContactListView() {&#xA;&#x9;&#x9;return new SWTContactListView();&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.ConversationView createConversationView() {&#xA;&#x9;&#x9;return new SWTConversationView();&#xA;&#x9;}&#xA;&#xA;&#x9;public im.view.NewContactDialog createNewContactDialog() {&#xA;&#x9;&#x9;return new SWTNewContactDialog();&#xA;&#x9;}&#xA;&#xA;}" startPosition="57" length="591" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.26/@types.0/@name">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="57" length="6" public="true"/>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public SWTViewFactory() throws java.lang.ClassNotFoundException {&#xA;&#x9;&#x9;Class.forName(&quot;org.eclipse.swt.SWT&quot;);&#xA;&#x9;&#x9;if (!InstantMessagingClient.getInstance().getRunning()) {&#xA;&#x9;&#x9;&#x9;throw new ClassNotFoundException(&quot;SWT app not running&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="116" length="232" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="116" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;Class.forName(&quot;org.eclipse.swt.SWT&quot;);&#xA;&#x9;&#x9;if (!InstantMessagingClient.getInstance().getRunning()) {&#xA;&#x9;&#x9;&#x9;throw new ClassNotFoundException(&quot;SWT app not running&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}" startPosition="180" length="168">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="Class.forName(&quot;org.eclipse.swt.SWT&quot;);" startPosition="184" length="37">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="Class.forName(&quot;org.eclipse.swt.SWT&quot;)" startPosition="184" length="36">
              <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;org.eclipse.swt.SWT&quot;" startPosition="198" length="21" escapedValue="&quot;org.eclipse.swt.SWT&quot;" literalValue="org.eclipse.swt.SWT"/>
              <expression xsi:type="JavaAST:SimpleName" lexicalForm="Class" startPosition="184" length="5" fullyQualifiedName="Class" identifier="Class"/>
              <name lexicalForm="forName" startPosition="190" length="7" fullyQualifiedName="forName" identifier="forName"/>
            </expression>
          </statements>
          <statements xsi:type="JavaAST:IfStatement" lexicalForm="if (!InstantMessagingClient.getInstance().getRunning()) {&#xA;&#x9;&#x9;&#x9;throw new ClassNotFoundException(&quot;SWT app not running&quot;);&#xA;&#x9;&#x9;}" startPosition="224" length="121">
            <expression xsi:type="JavaAST:PrefixExpression" lexicalForm="!InstantMessagingClient.getInstance().getRunning()" startPosition="228" length="50" operator="!">
              <operand xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance().getRunning()" startPosition="229" length="49">
                <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="InstantMessagingClient.getInstance()" startPosition="229" length="36" resolvedType="//@compilationUnits.2/@types.0">
                  <expression xsi:type="JavaAST:SimpleName" lexicalForm="InstantMessagingClient" startPosition="229" length="22" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="InstantMessagingClient" identifier="InstantMessagingClient"/>
                  <name lexicalForm="getInstance" startPosition="252" length="11" resolvedType="//@compilationUnits.2/@types.0" fullyQualifiedName="getInstance" identifier="getInstance"/>
                </expression>
                <name lexicalForm="getRunning" startPosition="266" length="10" fullyQualifiedName="getRunning" identifier="getRunning"/>
              </operand>
            </expression>
            <thenStatement xsi:type="JavaAST:Block" lexicalForm="{&#xA;&#x9;&#x9;&#x9;throw new ClassNotFoundException(&quot;SWT app not running&quot;);&#xA;&#x9;&#x9;}" startPosition="280" length="65">
              <statements xsi:type="JavaAST:ThrowStatement" lexicalForm="throw new ClassNotFoundException(&quot;SWT app not running&quot;);" startPosition="285" length="56">
                <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new ClassNotFoundException(&quot;SWT app not running&quot;)" startPosition="291" length="49">
                  <arguments xsi:type="JavaAST:StringLiteral" lexicalForm="&quot;SWT app not running&quot;" startPosition="318" length="21" escapedValue="&quot;SWT app not running&quot;" literalValue="SWT app not running"/>
                  <type xsi:type="JavaAST:SimpleType" lexicalForm="ClassNotFoundException" startPosition="295" length="22">
                    <name xsi:type="JavaAST:SimpleName" lexicalForm="ClassNotFoundException" startPosition="295" length="22" fullyQualifiedName="ClassNotFoundException" identifier="ClassNotFoundException"/>
                  </type>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <name lexicalForm="SWTViewFactory" startPosition="123" length="14" fullyQualifiedName="SWTViewFactory" identifier="SWTViewFactory"/>
        <thrownExceptions xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang.ClassNotFoundException" startPosition="147" length="32" fullyQualifiedName="java.lang.ClassNotFoundException">
          <name lexicalForm="ClassNotFoundException" startPosition="157" length="22" fullyQualifiedName="ClassNotFoundException" identifier="ClassNotFoundException"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="java.lang" startPosition="147" length="9" fullyQualifiedName="java.lang">
            <name lexicalForm="lang" startPosition="152" length="4" fullyQualifiedName="lang" identifier="lang"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="java" startPosition="147" length="4" fullyQualifiedName="java" identifier="java"/>
          </qualifier>
        </thrownExceptions>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.view.ContactListView createContactListView() {&#xA;&#x9;&#x9;return new SWTContactListView();&#xA;&#x9;}" startPosition="351" length="94">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="351" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return new SWTContactListView();&#xA;&#x9;}" startPosition="406" length="39">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new SWTContactListView();" startPosition="410" length="32">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new SWTContactListView()" startPosition="417" length="24" resolvedType="//@compilationUnits.23/@types.0">
              <type xsi:type="JavaAST:SimpleType" lexicalForm="SWTContactListView" startPosition="421" length="18" resolvedType="//@compilationUnits.23/@types.0">
                <name xsi:type="JavaAST:SimpleName" lexicalForm="SWTContactListView" startPosition="421" length="18" resolvedType="//@compilationUnits.23/@types.0" fullyQualifiedName="SWTContactListView" identifier="SWTContactListView"/>
              </type>
            </expression>
          </statements>
        </body>
        <name lexicalForm="createContactListView" startPosition="382" length="21" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="createContactListView" identifier="createContactListView" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ContactListView" startPosition="358" length="23" resolvedType="//@compilationUnits.17/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ContactListView" startPosition="358" length="23" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="im.view.ContactListView">
            <name lexicalForm="ContactListView" startPosition="366" length="15" resolvedType="//@compilationUnits.17/@types.0" fullyQualifiedName="ContactListView" identifier="ContactListView"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="358" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="361" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="358" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.view.ConversationView createConversationView() {&#xA;&#x9;&#x9;return new SWTConversationView();&#xA;&#x9;}" startPosition="448" length="97">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="448" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return new SWTConversationView();&#xA;&#x9;}" startPosition="505" length="40">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new SWTConversationView();" startPosition="509" length="33">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new SWTConversationView()" startPosition="516" length="25" resolvedType="//@compilationUnits.24/@types.0">
              <type xsi:type="JavaAST:SimpleType" lexicalForm="SWTConversationView" startPosition="520" length="19" resolvedType="//@compilationUnits.24/@types.0">
                <name xsi:type="JavaAST:SimpleName" lexicalForm="SWTConversationView" startPosition="520" length="19" resolvedType="//@compilationUnits.24/@types.0" fullyQualifiedName="SWTConversationView" identifier="SWTConversationView"/>
              </type>
            </expression>
          </statements>
        </body>
        <name lexicalForm="createConversationView" startPosition="480" length="22" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="createConversationView" identifier="createConversationView" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ConversationView" startPosition="455" length="24" resolvedType="//@compilationUnits.18/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ConversationView" startPosition="455" length="24" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="im.view.ConversationView">
            <name lexicalForm="ConversationView" startPosition="463" length="16" resolvedType="//@compilationUnits.18/@types.0" fullyQualifiedName="ConversationView" identifier="ConversationView"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="455" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="458" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="455" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public im.view.NewContactDialog createNewContactDialog() {&#xA;&#x9;&#x9;return new SWTNewContactDialog();&#xA;&#x9;}" startPosition="548" length="97">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="548" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return new SWTNewContactDialog();&#xA;&#x9;}" startPosition="605" length="40">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return new SWTNewContactDialog();" startPosition="609" length="33">
            <expression xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new SWTNewContactDialog()" startPosition="616" length="25" resolvedType="//@compilationUnits.25/@types.0">
              <type xsi:type="JavaAST:SimpleType" lexicalForm="SWTNewContactDialog" startPosition="620" length="19" resolvedType="//@compilationUnits.25/@types.0">
                <name xsi:type="JavaAST:SimpleName" lexicalForm="SWTNewContactDialog" startPosition="620" length="19" resolvedType="//@compilationUnits.25/@types.0" fullyQualifiedName="SWTNewContactDialog" identifier="SWTNewContactDialog"/>
              </type>
            </expression>
          </statements>
        </body>
        <name lexicalForm="createNewContactDialog" startPosition="580" length="22" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="createNewContactDialog" identifier="createNewContactDialog" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.NewContactDialog" startPosition="555" length="24" resolvedType="//@compilationUnits.21/@types.0">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.NewContactDialog" startPosition="555" length="24" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="im.view.NewContactDialog">
            <name lexicalForm="NewContactDialog" startPosition="563" length="16" resolvedType="//@compilationUnits.21/@types.0" fullyQualifiedName="NewContactDialog" identifier="NewContactDialog"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="555" length="7" fullyQualifiedName="im.view">
              <name lexicalForm="view" startPosition="558" length="4" fullyQualifiedName="view" identifier="view"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="555" length="2" fullyQualifiedName="im" identifier="im"/>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <name lexicalForm="SWTViewFactory" startPosition="70" length="14" resolvedType="//@compilationUnits.26/@types.0" fullyQualifiedName="SWTViewFactory" identifier="SWTViewFactory" declaration="true"/>
      <superclassType xsi:type="JavaAST:SimpleType" lexicalForm="im.view.ViewFactory" startPosition="93" length="19" resolvedType="//@compilationUnits.16/@types.0">
        <name xsi:type="JavaAST:QualifiedName" lexicalForm="im.view.ViewFactory" startPosition="93" length="19" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="im.view.ViewFactory">
          <name lexicalForm="ViewFactory" startPosition="101" length="11" resolvedType="//@compilationUnits.16/@types.0" fullyQualifiedName="ViewFactory" identifier="ViewFactory"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="im.view" startPosition="93" length="7" fullyQualifiedName="im.view">
            <name lexicalForm="view" startPosition="96" length="4" fullyQualifiedName="view" identifier="view"/>
            <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="im" startPosition="93" length="2" fullyQualifiedName="im" identifier="im"/>
          </qualifier>
        </name>
      </superclassType>
    </types>
  </compilationUnits>
  <compilationUnits lexicalForm="package swt;&#xA;&#xA;import org.eclipse.swt.widgets.Display;&#xA;import org.eclipse.swt.widgets.Shell;&#xA;&#xA;public abstract class SWTApplication {&#xA;&#x9;private org.eclipse.swt.widgets.Shell shell = null;&#xA;&#xA;&#x9;private boolean running = false;&#xA;&#xA;&#x9;public void init() {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void start() {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void stop() {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public SWTApplication() {&#xA;&#x9;&#x9;final Display display = new Display();&#xA;&#x9;&#x9;final Shell shell = new Shell(display);&#xA;&#x9;&#x9;setShell(shell);&#xA;&#x9;}&#xA;&#xA;&#x9;public void destroy() {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Shell getShell() {&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setShell(org.eclipse.swt.widgets.Shell shell) {&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public boolean getRunning() {&#xA;&#x9;&#x9;return running;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setRunning(boolean running) {&#xA;&#x9;&#x9;this.running = running;&#xA;&#x9;}&#xA;&#xA;}&#xA;" length="752">
    <package lexicalForm="package swt;" length="12">
      <name xsi:type="JavaAST:SimpleName" lexicalForm="swt" startPosition="8" length="3" fullyQualifiedName="swt" identifier="swt"/>
    </package>
    <imports lexicalForm="import org.eclipse.swt.widgets.Display;" startPosition="14" length="39">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Display" startPosition="21" length="31" fullyQualifiedName="org.eclipse.swt.widgets.Display">
        <name lexicalForm="Display" startPosition="45" length="7" fullyQualifiedName="Display" identifier="Display"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="21" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
          <name lexicalForm="widgets" startPosition="37" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="21" length="15" fullyQualifiedName="org.eclipse.swt">
            <name lexicalForm="swt" startPosition="33" length="3" fullyQualifiedName="swt" identifier="swt"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="21" length="11" fullyQualifiedName="org.eclipse">
              <name lexicalForm="eclipse" startPosition="25" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="21" length="3" fullyQualifiedName="org" identifier="org"/>
            </qualifier>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <imports lexicalForm="import org.eclipse.swt.widgets.Shell;" startPosition="54" length="37">
      <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="61" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
        <name lexicalForm="Shell" startPosition="85" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
        <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="61" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
          <name lexicalForm="widgets" startPosition="77" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
          <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="61" length="15" fullyQualifiedName="org.eclipse.swt">
            <name lexicalForm="swt" startPosition="73" length="3" fullyQualifiedName="swt" identifier="swt"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="61" length="11" fullyQualifiedName="org.eclipse">
              <name lexicalForm="eclipse" startPosition="65" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
              <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="61" length="3" fullyQualifiedName="org" identifier="org"/>
            </qualifier>
          </qualifier>
        </qualifier>
      </name>
    </imports>
    <types xsi:type="JavaAST:TypeDeclaration" lexicalForm="public abstract class SWTApplication {&#xA;&#x9;private org.eclipse.swt.widgets.Shell shell = null;&#xA;&#xA;&#x9;private boolean running = false;&#xA;&#xA;&#x9;public void init() {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void start() {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public void stop() {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public SWTApplication() {&#xA;&#x9;&#x9;final Display display = new Display();&#xA;&#x9;&#x9;final Shell shell = new Shell(display);&#xA;&#x9;&#x9;setShell(shell);&#xA;&#x9;}&#xA;&#xA;&#x9;public void destroy() {&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;public org.eclipse.swt.widgets.Shell getShell() {&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setShell(org.eclipse.swt.widgets.Shell shell) {&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}&#xA;&#xA;&#x9;public boolean getRunning() {&#xA;&#x9;&#x9;return running;&#xA;&#x9;}&#xA;&#xA;&#x9;public void setRunning(boolean running) {&#xA;&#x9;&#x9;this.running = running;&#xA;&#x9;}&#xA;&#xA;}" startPosition="93" length="658" packageMemberTypeDeclaration="true" resolvedExpressionsOfType="//@compilationUnits.27/@types.0/@name //@compilationUnits.27/@types.0/@bodyDeclarations.8/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.27/@types.0/@bodyDeclarations.10/@body/@statements.0/@expression/@leftHandSide/@expression //@compilationUnits.2/@types.0/@superclassType/@name //@compilationUnits.2/@types.0/@superclassType/@name/@name" resolvedTypeReferences="//@compilationUnits.2/@types.0/@superclassType">
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="93" length="6" public="true"/>
      <modifiers xsi:type="JavaAST:Modifier" lexicalForm="abstract" startPosition="100" length="8" abstract="true"/>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private org.eclipse.swt.widgets.Shell shell = null;" startPosition="133" length="51">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="133" length="7" private="true"/>
        <fragments lexicalForm="shell = null" startPosition="171" length="12">
          <initializer xsi:type="JavaAST:NullLiteral" lexicalForm="null" startPosition="179" length="4"/>
          <name lexicalForm="shell" startPosition="171" length="5" fullyQualifiedName="shell" identifier="shell" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="141" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="141" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
            <name lexicalForm="Shell" startPosition="165" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="141" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="157" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="141" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="153" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="141" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="145" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="141" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </type>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:FieldDeclaration" lexicalForm="private boolean running = false;" startPosition="187" length="32">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="private" startPosition="187" length="7" private="true"/>
        <fragments lexicalForm="running = false" startPosition="203" length="15">
          <initializer xsi:type="JavaAST:BooleanLiteral" lexicalForm="false" startPosition="213" length="5"/>
          <name lexicalForm="running" startPosition="203" length="7" fullyQualifiedName="running" identifier="running" declaration="true"/>
        </fragments>
        <type xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="195" length="7" code="boolean"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void init() {&#xA;&#xA;&#x9;}" startPosition="222" length="24">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="222" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#xA;&#x9;}" startPosition="241" length="5"/>
        <name lexicalForm="init" startPosition="234" length="4" fullyQualifiedName="init" identifier="init" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="229" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void start() {&#xA;&#xA;&#x9;}" startPosition="249" length="25">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="249" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#xA;&#x9;}" startPosition="269" length="5"/>
        <name lexicalForm="start" startPosition="261" length="5" fullyQualifiedName="start" identifier="start" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="256" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void stop() {&#xA;&#xA;&#x9;}" startPosition="277" length="24">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="277" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#xA;&#x9;}" startPosition="296" length="5"/>
        <name lexicalForm="stop" startPosition="289" length="4" fullyQualifiedName="stop" identifier="stop" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="284" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public SWTApplication() {&#xA;&#x9;&#x9;final Display display = new Display();&#xA;&#x9;&#x9;final Shell shell = new Shell(display);&#xA;&#x9;&#x9;setShell(shell);&#xA;&#x9;}" startPosition="304" length="130" constructor="true">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="304" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;final Display display = new Display();&#xA;&#x9;&#x9;final Shell shell = new Shell(display);&#xA;&#x9;&#x9;setShell(shell);&#xA;&#x9;}" startPosition="328" length="106">
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="final Display display = new Display();" startPosition="332" length="38">
            <fragments lexicalForm="display = new Display()" startPosition="346" length="23">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Display()" startPosition="356" length="13">
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Display" startPosition="360" length="7">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Display" startPosition="360" length="7" fullyQualifiedName="Display" identifier="Display"/>
                </type>
              </initializer>
              <name lexicalForm="display" startPosition="346" length="7" fullyQualifiedName="display" identifier="display" declaration="true"/>
            </fragments>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="332" length="5" final="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="Display" startPosition="338" length="7">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="Display" startPosition="338" length="7" fullyQualifiedName="Display" identifier="Display"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:VariableDeclarationStatement" lexicalForm="final Shell shell = new Shell(display);" startPosition="373" length="39">
            <fragments lexicalForm="shell = new Shell(display)" startPosition="385" length="26">
              <initializer xsi:type="JavaAST:ClassInstanceCreation" lexicalForm="new Shell(display)" startPosition="393" length="18">
                <arguments xsi:type="JavaAST:SimpleName" lexicalForm="display" startPosition="403" length="7" fullyQualifiedName="display" identifier="display"/>
                <type xsi:type="JavaAST:SimpleType" lexicalForm="Shell" startPosition="397" length="5">
                  <name xsi:type="JavaAST:SimpleName" lexicalForm="Shell" startPosition="397" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
                </type>
              </initializer>
              <name lexicalForm="shell" startPosition="385" length="5" fullyQualifiedName="shell" identifier="shell" declaration="true"/>
            </fragments>
            <modifiers xsi:type="JavaAST:Modifier" lexicalForm="final" startPosition="373" length="5" final="true"/>
            <type xsi:type="JavaAST:SimpleType" lexicalForm="Shell" startPosition="379" length="5">
              <name xsi:type="JavaAST:SimpleName" lexicalForm="Shell" startPosition="379" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
            </type>
          </statements>
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="setShell(shell);" startPosition="415" length="16">
            <expression xsi:type="JavaAST:MethodInvocation" lexicalForm="setShell(shell)" startPosition="415" length="15">
              <arguments xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="424" length="5" fullyQualifiedName="shell" identifier="shell"/>
              <name lexicalForm="setShell" startPosition="415" length="8" fullyQualifiedName="setShell" identifier="setShell"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="SWTApplication" startPosition="311" length="14" fullyQualifiedName="SWTApplication" identifier="SWTApplication"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void destroy() {&#xA;&#xA;&#x9;}" startPosition="437" length="27">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="437" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#xA;&#x9;}" startPosition="459" length="5"/>
        <name lexicalForm="destroy" startPosition="449" length="7" fullyQualifiedName="destroy" identifier="destroy" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="444" length="4" code="void"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public org.eclipse.swt.widgets.Shell getShell() {&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}" startPosition="467" length="68">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="467" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return shell;&#xA;&#x9;}" startPosition="515" length="20">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return shell;" startPosition="519" length="13">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="526" length="5" fullyQualifiedName="shell" identifier="shell"/>
          </statements>
        </body>
        <name lexicalForm="getShell" startPosition="504" length="8" fullyQualifiedName="getShell" identifier="getShell" declaration="true"/>
        <returnType xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="474" length="29">
          <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="474" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
            <name lexicalForm="Shell" startPosition="498" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
            <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="474" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
              <name lexicalForm="widgets" startPosition="490" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="474" length="15" fullyQualifiedName="org.eclipse.swt">
                <name lexicalForm="swt" startPosition="486" length="3" fullyQualifiedName="swt" identifier="swt"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="474" length="11" fullyQualifiedName="org.eclipse">
                  <name lexicalForm="eclipse" startPosition="478" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                  <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="474" length="3" fullyQualifiedName="org" identifier="org"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </name>
        </returnType>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setShell(org.eclipse.swt.widgets.Shell shell) {&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}" startPosition="538" length="84">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="538" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.shell = shell;&#xA;&#x9;}" startPosition="596" length="26">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.shell = shell;" startPosition="600" length="19">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.shell = shell" startPosition="600" length="18" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.shell" startPosition="600" length="10">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="600" length="4" resolvedType="//@compilationUnits.27/@types.0"/>
                <name lexicalForm="shell" startPosition="605" length="5" fullyQualifiedName="shell" identifier="shell"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="shell" startPosition="613" length="5" fullyQualifiedName="shell" identifier="shell"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setShell" startPosition="550" length="8" fullyQualifiedName="setShell" identifier="setShell" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="545" length="4" code="void"/>
        <parameters lexicalForm="org.eclipse.swt.widgets.Shell shell" startPosition="559" length="35">
          <name lexicalForm="shell" startPosition="589" length="5" fullyQualifiedName="shell" identifier="shell" declaration="true"/>
          <type xsi:type="JavaAST:SimpleType" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="559" length="29">
            <name xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets.Shell" startPosition="559" length="29" fullyQualifiedName="org.eclipse.swt.widgets.Shell">
              <name lexicalForm="Shell" startPosition="583" length="5" fullyQualifiedName="Shell" identifier="Shell"/>
              <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt.widgets" startPosition="559" length="23" fullyQualifiedName="org.eclipse.swt.widgets">
                <name lexicalForm="widgets" startPosition="575" length="7" fullyQualifiedName="widgets" identifier="widgets"/>
                <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse.swt" startPosition="559" length="15" fullyQualifiedName="org.eclipse.swt">
                  <name lexicalForm="swt" startPosition="571" length="3" fullyQualifiedName="swt" identifier="swt"/>
                  <qualifier xsi:type="JavaAST:QualifiedName" lexicalForm="org.eclipse" startPosition="559" length="11" fullyQualifiedName="org.eclipse">
                    <name lexicalForm="eclipse" startPosition="563" length="7" fullyQualifiedName="eclipse" identifier="eclipse"/>
                    <qualifier xsi:type="JavaAST:SimpleName" lexicalForm="org" startPosition="559" length="3" fullyQualifiedName="org" identifier="org"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </name>
          </type>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public boolean getRunning() {&#xA;&#x9;&#x9;return running;&#xA;&#x9;}" startPosition="625" length="50">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="625" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;return running;&#xA;&#x9;}" startPosition="653" length="22">
          <statements xsi:type="JavaAST:ReturnStatement" lexicalForm="return running;" startPosition="657" length="15">
            <expression xsi:type="JavaAST:SimpleName" lexicalForm="running" startPosition="664" length="7" fullyQualifiedName="running" identifier="running"/>
          </statements>
        </body>
        <name lexicalForm="getRunning" startPosition="640" length="10" fullyQualifiedName="getRunning" identifier="getRunning" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="632" length="7" code="boolean"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="JavaAST:MethodDeclaration" lexicalForm="public void setRunning(boolean running) {&#xA;&#x9;&#x9;this.running = running;&#xA;&#x9;}" startPosition="678" length="70">
        <modifiers xsi:type="JavaAST:Modifier" lexicalForm="public" startPosition="678" length="6" public="true"/>
        <body lexicalForm="{&#xA;&#x9;&#x9;this.running = running;&#xA;&#x9;}" startPosition="718" length="30">
          <statements xsi:type="JavaAST:ExpressionStatement" lexicalForm="this.running = running;" startPosition="722" length="23">
            <expression xsi:type="JavaAST:Assignment" lexicalForm="this.running = running" startPosition="722" length="22" operator="=">
              <leftHandSide xsi:type="JavaAST:FieldAccess" lexicalForm="this.running" startPosition="722" length="12">
                <expression xsi:type="JavaAST:ThisExpression" lexicalForm="this" startPosition="722" length="4" resolvedType="//@compilationUnits.27/@types.0"/>
                <name lexicalForm="running" startPosition="727" length="7" fullyQualifiedName="running" identifier="running"/>
              </leftHandSide>
              <rightHandSide xsi:type="JavaAST:SimpleName" lexicalForm="running" startPosition="737" length="7" fullyQualifiedName="running" identifier="running"/>
            </expression>
          </statements>
        </body>
        <name lexicalForm="setRunning" startPosition="690" length="10" fullyQualifiedName="setRunning" identifier="setRunning" declaration="true"/>
        <returnType xsi:type="JavaAST:PrimitiveType" lexicalForm="void" startPosition="685" length="4" code="void"/>
        <parameters lexicalForm="boolean running" startPosition="701" length="15">
          <name lexicalForm="running" startPosition="709" length="7" fullyQualifiedName="running" identifier="running" declaration="true"/>
          <type xsi:type="JavaAST:PrimitiveType" lexicalForm="boolean" startPosition="701" length="7" code="boolean"/>
        </parameters>
      </bodyDeclarations>
      <name lexicalForm="SWTApplication" startPosition="115" length="14" resolvedType="//@compilationUnits.27/@types.0" fullyQualifiedName="SWTApplication" identifier="SWTApplication" declaration="true"/>
    </types>
  </compilationUnits>
</JavaAST:AST>
